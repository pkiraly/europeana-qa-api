package de.gwdg.europeanaqa.api.calculator;

import de.gwdg.metadataqa.api.model.JsonPathCache;
import de.gwdg.metadataqa.api.schema.EdmOaiPmhXmlSchema;
import de.gwdg.metadataqa.api.util.CompressionLevel;
import de.gwdg.metadataqa.api.util.FileUtils;
import java.io.IOException;
import java.net.URISyntaxException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.apache.commons.lang3.StringUtils;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import static org.junit.Assert.*;

/**
 *
 * @author Péter Király <peter.kiraly at gwdg.de>
 */
public class EdmMultilingualitySaturationCalculatorTest {

	EdmMultilingualitySaturationCalculator calculator;

	public EdmMultilingualitySaturationCalculatorTest() {
	}

	@BeforeClass
	public static void setUpClass() {
	}

	@AfterClass
	public static void tearDownClass() {
	}

	@Before
	public void setUp() {
		calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhXmlSchema());
	}

	@After
	public void tearDown() {
	}

	@Test
	public void testConstructor() {
		EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhXmlSchema());
		assertNotNull(calculator);
	}

	@Test
	public void testPaths() throws URISyntaxException, IOException {
		JsonPathCache cache = new JsonPathCache(
				  FileUtils.readFirstLine("general/test.json"));
		String path = "$.['skos:Concept']"
				  + "[?(@['@about'] == 'http://dbpedia.org/resource/Portrait')]"
				  + "['skos:prefLabel']";
		assertEquals(12, cache.get(path).size());
	}

	@Test
	public void selectEntityById() throws URISyntaxException, IOException {
		String path = EdmMultilingualitySaturationCalculator.selectEntityById(
			"$.['skos:Concept']", "http://dbpedia.org/resource/Pierre-Paul_Prud'hon");

		String expected = "$.['skos:Concept']"
				  + "[?(@['@about'] == 'http://dbpedia.org/resource/Pierre-Paul_Prud\\'hon')]"
				  + "['skos:prefLabel']";
		assertEquals(expected, path);
	}

	@Test
	public void testMeasure() throws URISyntaxException, IOException {
		JsonPathCache cache = new JsonPathCache(
				  FileUtils.readFirstLine("general/test.json"));
		calculator.measure(cache);
		assertNotNull(calculator.getCsv(false, CompressionLevel.NORMAL));
		System.err.println(calculator.getLabelledResultMap());
		assertEquals("1.0,1.0,1.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,2.0,2.0,1.0,12.0,12.0,1.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,1.5,12.0,5.0,3.0,12.0,2.0,12.0,15.0,12.0,1.5,1.0,1.25", calculator.getCsv(false, CompressionLevel.NORMAL));
	}

	@Test
	public void testMeasurePlace() throws URISyntaxException, IOException {
		JsonPathCache cache = new JsonPathCache(
				  FileUtils.readFirstLine("general/test-place.json"));
		calculator.measure(cache);
		assertNotNull(calculator.getCsv(false, CompressionLevel.NORMAL));
		assertEquals("0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,97.0,98.0,0.989796,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,98.0,98.0,0.0,97.0,0.0,98.0,97.0,98.0,0.0,0.989796,0.989796", calculator.getCsv(false, CompressionLevel.NORMAL));
	}

	// @Test
	public void testMeasureSkipped() throws URISyntaxException, IOException {
		EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhXmlSchema());
		calculator.setSkippedEntryChecker(new EdmSkippedEntryChecker());
		JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("general/test.json"));
		calculator.measure(cache);
		assertNotNull(calculator.getCsv(false, CompressionLevel.NORMAL));
		assertEquals("0.5,-1.0,-1.0,-1.0,-1.0,-1.0,0.0,0.0,-1.0,-1.0,-1.0,-1.0,0.666667,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,0.75,-1.0,-1.0,0.0,-1.0,0.0,-1.0,-1.0,0.75,0.75,-1.0,0.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,0.75,0.5,0.0,-1.0,-1.0,0.75,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,0.575758", calculator.getCsv(false, CompressionLevel.NORMAL));

		cache = new JsonPathCache(FileUtils.readFirstLine("general/test-place.json"));
		calculator.measure(cache);
		assertNotNull(calculator.getCsv(false, CompressionLevel.NORMAL));
		assertEquals("0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0,-1.0,0.0,0.0,-1.0,-1.0,0.0,-1.0,0.0,-1.0,-1.0,-1.0,0.0,-1.0,-1.0,0.75,0.75,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,0.75,0.0,0.0,-1.0,-1.0,0.75,-1.0,0.5,-1.0,0.411765,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,0.0,0.0,-1.0,-1.0,-1.0,-1.0,0.5,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,0.438669", calculator.getCsv(false, CompressionLevel.NORMAL));
	}

	// @Test
	public void testCountersGetLanguageMap() throws URISyntaxException, IOException {
		EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhXmlSchema());
		JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("general/test.json"));
		calculator.measure(cache);
		String languages = calculator.getCsv(true, CompressionLevel.NORMAL);
		assertNotNull(languages);
		assertEquals(
			"\"Proxy/dc:title\":0.5,\"Proxy/dcterms:alternative\":-1.0,\"Proxy/dc:description\":-1.0,\"Proxy/dc:creator\":-1.0,\"Proxy/dc:publisher\":-1.0,\"Proxy/dc:contributor\":-1.0,\"Proxy/dc:type\":0.0,\"Proxy/dc:identifier\":0.0,\"Proxy/dc:language\":-1.0,\"Proxy/dc:coverage\":-1.0,\"Proxy/dcterms:temporal\":-1.0,\"Proxy/dcterms:spatial\":-1.0,\"Proxy/dc:subject\":0.666667,\"Proxy/dc:date\":-1.0,\"Proxy/dcterms:created\":-1.0,\"Proxy/dcterms:issued\":-1.0,\"Proxy/dcterms:extent\":-1.0,\"Proxy/dcterms:medium\":-1.0,\"Proxy/dcterms:provenance\":-1.0,\"Proxy/dcterms:hasPart\":-1.0,\"Proxy/dcterms:isPartOf\":0.75,\"Proxy/dc:format\":-1.0,\"Proxy/dc:source\":-1.0,\"Proxy/dc:rights\":0.0,\"Proxy/dc:relation\":-1.0,\"Proxy/edm:europeanaProxy\":0.0,\"Proxy/edm:year\":-1.0,\"Proxy/edm:userTag\":-1.0,\"Proxy/ore:proxyIn\":0.75,\"Proxy/ore:proxyFor\":0.75,\"Proxy/dcterms:conformsTo\":-1.0,\"Proxy/dcterms:hasFormat\":0.0,\"Proxy/dcterms:hasVersion\":-1.0,\"Proxy/dcterms:isFormatOf\":-1.0,\"Proxy/dcterms:isReferencedBy\":-1.0,\"Proxy/dcterms:isReplacedBy\":-1.0,\"Proxy/dcterms:isRequiredBy\":-1.0,\"Proxy/dcterms:isVersionOf\":-1.0,\"Proxy/dcterms:references\":-1.0,\"Proxy/dcterms:replaces\":-1.0,\"Proxy/dcterms:requires\":-1.0,\"Proxy/dcterms:tableOfContents\":-1.0,\"Proxy/edm:currentLocation\":-1.0,\"Proxy/edm:hasMet\":-1.0,\"Proxy/edm:hasType\":-1.0,\"Proxy/edm:incorporates\":-1.0,\"Proxy/edm:isDerivativeOf\":-1.0,\"Proxy/edm:isRelatedTo\":-1.0,\"Proxy/edm:isRepresentationOf\":-1.0,\"Proxy/edm:isSimilarTo\":-1.0,\"Proxy/edm:isSuccessorOf\":-1.0,\"Proxy/edm:realizes\":-1.0,\"Proxy/edm:wasPresentAt\":-1.0,\"Aggregation/edm:rights\":0.75,\"Aggregation/edm:provider\":0.5,\"Aggregation/edm:dataProvider\":0.0,\"Aggregation/dc:rights\":-1.0,\"Aggregation/edm:ugc\":-1.0,\"Aggregation/edm:aggregatedCHO\":0.75,\"Aggregation/edm:intermediateProvider\":-1.0,\"Place/dcterms:isPartOf\":-1.0,\"Place/dcterms:hasPart\":-1.0,\"Place/skos:prefLabel\":-1.0,\"Place/skos:altLabel\":-1.0,\"Place/skos:note\":-1.0,\"Agent/edm:begin\":-1.0,\"Agent/edm:end\":-1.0,\"Agent/edm:hasMet\":-1.0,\"Agent/edm:isRelatedTo\":-1.0,\"Agent/owl:sameAs\":-1.0,\"Agent/foaf:name\":-1.0,\"Agent/dc:date\":-1.0,\"Agent/dc:identifier\":-1.0,\"Agent/rdaGr2:dateOfBirth\":-1.0,\"Agent/rdaGr2:placeOfBirth\":-1.0,\"Agent/rdaGr2:dateOfDeath\":-1.0,\"Agent/rdaGr2:placeOfDeath\":-1.0,\"Agent/rdaGr2:dateOfEstablishment\":-1.0,\"Agent/rdaGr2:dateOfTermination\":-1.0,\"Agent/rdaGr2:gender\":-1.0,\"Agent/rdaGr2:professionOrOccupation\":-1.0,\"Agent/rdaGr2:biographicalInformation\":-1.0,\"Agent/skos:prefLabel\":-1.0,\"Agent/skos:altLabel\":-1.0,\"Agent/skos:note\":-1.0,\"Timespan/edm:begin\":-1.0,\"Timespan/edm:end\":-1.0,\"Timespan/dcterms:isPartOf\":-1.0,\"Timespan/dcterms:hasPart\":-1.0,\"Timespan/edm:isNextInSequence\":-1.0,\"Timespan/owl:sameAs\":-1.0,\"Timespan/skos:prefLabel\":-1.0,\"Timespan/skos:altLabel\":-1.0,\"Timespan/skos:note\":-1.0,\"Concept/skos:broader\":-1.0,\"Concept/skos:narrower\":-1.0,\"Concept/skos:related\":-1.0,\"Concept/skos:broadMatch\":-1.0,\"Concept/skos:narrowMatch\":-1.0,\"Concept/skos:relatedMatch\":-1.0,\"Concept/skos:exactMatch\":-1.0,\"Concept/skos:closeMatch\":-1.0,\"Concept/skos:notation\":-1.0,\"Concept/skos:inScheme\":-1.0,\"Concept/skos:prefLabel\":0.722222,\"Concept/skos:altLabel\":-1.0,\"Concept/skos:note\":-1.0,\"multilingualitySaturation:normalized\":0.590164",
			languages
		);
	}

	// @Test
	public void testCountersGetLanguageMapSkipped() throws URISyntaxException, IOException {
		EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhXmlSchema());
		calculator.setSkippedEntryChecker(new EdmSkippedEntryChecker());
		JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("general/test.json"));
		calculator.measure(cache);
		String languages = calculator.getCsv(true, CompressionLevel.NORMAL);
		assertNotNull(languages);
		assertEquals(
			"\"Proxy/dc:title\":0.5,\"Proxy/dcterms:alternative\":-1.0,\"Proxy/dc:description\":-1.0,\"Proxy/dc:creator\":-1.0,\"Proxy/dc:publisher\":-1.0,\"Proxy/dc:contributor\":-1.0,\"Proxy/dc:type\":0.0,\"Proxy/dc:identifier\":0.0,\"Proxy/dc:language\":-1.0,\"Proxy/dc:coverage\":-1.0,\"Proxy/dcterms:temporal\":-1.0,\"Proxy/dcterms:spatial\":-1.0,\"Proxy/dc:subject\":0.666667,\"Proxy/dc:date\":-1.0,\"Proxy/dcterms:created\":-1.0,\"Proxy/dcterms:issued\":-1.0,\"Proxy/dcterms:extent\":-1.0,\"Proxy/dcterms:medium\":-1.0,\"Proxy/dcterms:provenance\":-1.0,\"Proxy/dcterms:hasPart\":-1.0,\"Proxy/dcterms:isPartOf\":0.75,\"Proxy/dc:format\":-1.0,\"Proxy/dc:source\":-1.0,\"Proxy/dc:rights\":0.0,\"Proxy/dc:relation\":-1.0,\"Proxy/edm:europeanaProxy\":0.0,\"Proxy/edm:year\":-1.0,\"Proxy/edm:userTag\":-1.0,\"Proxy/ore:proxyIn\":0.75,\"Proxy/ore:proxyFor\":0.75,\"Proxy/dcterms:conformsTo\":-1.0,\"Proxy/dcterms:hasFormat\":0.0,\"Proxy/dcterms:hasVersion\":-1.0,\"Proxy/dcterms:isFormatOf\":-1.0,\"Proxy/dcterms:isReferencedBy\":-1.0,\"Proxy/dcterms:isReplacedBy\":-1.0,\"Proxy/dcterms:isRequiredBy\":-1.0,\"Proxy/dcterms:isVersionOf\":-1.0,\"Proxy/dcterms:references\":-1.0,\"Proxy/dcterms:replaces\":-1.0,\"Proxy/dcterms:requires\":-1.0,\"Proxy/dcterms:tableOfContents\":-1.0,\"Proxy/edm:currentLocation\":-1.0,\"Proxy/edm:hasMet\":-1.0,\"Proxy/edm:hasType\":-1.0,\"Proxy/edm:incorporates\":-1.0,\"Proxy/edm:isDerivativeOf\":-1.0,\"Proxy/edm:isRelatedTo\":-1.0,\"Proxy/edm:isRepresentationOf\":-1.0,\"Proxy/edm:isSimilarTo\":-1.0,\"Proxy/edm:isSuccessorOf\":-1.0,\"Proxy/edm:realizes\":-1.0,\"Proxy/edm:wasPresentAt\":-1.0,\"Aggregation/edm:rights\":0.75,\"Aggregation/edm:provider\":0.5,\"Aggregation/edm:dataProvider\":0.0,\"Aggregation/dc:rights\":-1.0,\"Aggregation/edm:ugc\":-1.0,\"Aggregation/edm:aggregatedCHO\":0.75,\"Aggregation/edm:intermediateProvider\":-1.0,\"Place/dcterms:isPartOf\":-1.0,\"Place/dcterms:hasPart\":-1.0,\"Place/skos:prefLabel\":-1.0,\"Place/skos:altLabel\":-1.0,\"Place/skos:note\":-1.0,\"Agent/edm:begin\":-1.0,\"Agent/edm:end\":-1.0,\"Agent/edm:hasMet\":-1.0,\"Agent/edm:isRelatedTo\":-1.0,\"Agent/owl:sameAs\":-1.0,\"Agent/foaf:name\":-1.0,\"Agent/dc:date\":-1.0,\"Agent/dc:identifier\":-1.0,\"Agent/rdaGr2:dateOfBirth\":-1.0,\"Agent/rdaGr2:placeOfBirth\":-1.0,\"Agent/rdaGr2:dateOfDeath\":-1.0,\"Agent/rdaGr2:placeOfDeath\":-1.0,\"Agent/rdaGr2:dateOfEstablishment\":-1.0,\"Agent/rdaGr2:dateOfTermination\":-1.0,\"Agent/rdaGr2:gender\":-1.0,\"Agent/rdaGr2:professionOrOccupation\":-1.0,\"Agent/rdaGr2:biographicalInformation\":-1.0,\"Agent/skos:prefLabel\":-1.0,\"Agent/skos:altLabel\":-1.0,\"Agent/skos:note\":-1.0,\"Timespan/edm:begin\":-1.0,\"Timespan/edm:end\":-1.0,\"Timespan/dcterms:isPartOf\":-1.0,\"Timespan/dcterms:hasPart\":-1.0,\"Timespan/edm:isNextInSequence\":-1.0,\"Timespan/owl:sameAs\":-1.0,\"Timespan/skos:prefLabel\":-1.0,\"Timespan/skos:altLabel\":-1.0,\"Timespan/skos:note\":-1.0,\"Concept/skos:broader\":-1.0,\"Concept/skos:narrower\":-1.0,\"Concept/skos:related\":-1.0,\"Concept/skos:broadMatch\":-1.0,\"Concept/skos:narrowMatch\":-1.0,\"Concept/skos:relatedMatch\":-1.0,\"Concept/skos:exactMatch\":-1.0,\"Concept/skos:closeMatch\":-1.0,\"Concept/skos:notation\":-1.0,\"Concept/skos:inScheme\":-1.0,\"Concept/skos:prefLabel\":-1.0,\"Concept/skos:altLabel\":-1.0,\"Concept/skos:note\":-1.0,\"multilingualitySaturation:normalized\":0.575758",
			languages
		);
	}

	// @Test
	public void testCountersGetLanguageMapForPLace() throws URISyntaxException, IOException {
		EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhXmlSchema());
		JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("general/test-place.json"));
		calculator.measure(cache);
		String languages = calculator.getCsv(true, CompressionLevel.NORMAL);
		assertNotNull(languages);
		assertEquals(
			"\"Proxy/dc:title\":0.0,\"Proxy/dcterms:alternative\":-1.0,\"Proxy/dc:description\":0.0,\"Proxy/dc:creator\":0.0,\"Proxy/dc:publisher\":-1.0,\"Proxy/dc:contributor\":0.0,\"Proxy/dc:type\":0.0,\"Proxy/dc:identifier\":0.0,\"Proxy/dc:language\":0.0,\"Proxy/dc:coverage\":0.0,\"Proxy/dcterms:temporal\":0.0,\"Proxy/dcterms:spatial\":0.0,\"Proxy/dc:subject\":0.0,\"Proxy/dc:date\":-1.0,\"Proxy/dcterms:created\":-1.0,\"Proxy/dcterms:issued\":0.0,\"Proxy/dcterms:extent\":0.0,\"Proxy/dcterms:medium\":-1.0,\"Proxy/dcterms:provenance\":-1.0,\"Proxy/dcterms:hasPart\":0.0,\"Proxy/dcterms:isPartOf\":-1.0,\"Proxy/dc:format\":0.0,\"Proxy/dc:source\":-1.0,\"Proxy/dc:rights\":-1.0,\"Proxy/dc:relation\":-1.0,\"Proxy/edm:europeanaProxy\":0.0,\"Proxy/edm:year\":-1.0,\"Proxy/edm:userTag\":-1.0,\"Proxy/ore:proxyIn\":0.75,\"Proxy/ore:proxyFor\":0.75,\"Proxy/dcterms:conformsTo\":-1.0,\"Proxy/dcterms:hasFormat\":-1.0,\"Proxy/dcterms:hasVersion\":-1.0,\"Proxy/dcterms:isFormatOf\":-1.0,\"Proxy/dcterms:isReferencedBy\":-1.0,\"Proxy/dcterms:isReplacedBy\":-1.0,\"Proxy/dcterms:isRequiredBy\":-1.0,\"Proxy/dcterms:isVersionOf\":-1.0,\"Proxy/dcterms:references\":-1.0,\"Proxy/dcterms:replaces\":-1.0,\"Proxy/dcterms:requires\":-1.0,\"Proxy/dcterms:tableOfContents\":-1.0,\"Proxy/edm:currentLocation\":-1.0,\"Proxy/edm:hasMet\":-1.0,\"Proxy/edm:hasType\":-1.0,\"Proxy/edm:incorporates\":-1.0,\"Proxy/edm:isDerivativeOf\":-1.0,\"Proxy/edm:isRelatedTo\":-1.0,\"Proxy/edm:isRepresentationOf\":-1.0,\"Proxy/edm:isSimilarTo\":-1.0,\"Proxy/edm:isSuccessorOf\":-1.0,\"Proxy/edm:realizes\":-1.0,\"Proxy/edm:wasPresentAt\":-1.0,\"Aggregation/edm:rights\":0.75,\"Aggregation/edm:provider\":0.0,\"Aggregation/edm:dataProvider\":0.0,\"Aggregation/dc:rights\":-1.0,\"Aggregation/edm:ugc\":-1.0,\"Aggregation/edm:aggregatedCHO\":0.75,\"Aggregation/edm:intermediateProvider\":-1.0,\"Place/dcterms:isPartOf\":0.666667,\"Place/dcterms:hasPart\":-1.0,\"Place/skos:prefLabel\":0.6,\"Place/skos:altLabel\":-1.0,\"Place/skos:note\":-1.0,\"Agent/edm:begin\":-1.0,\"Agent/edm:end\":-1.0,\"Agent/edm:hasMet\":-1.0,\"Agent/edm:isRelatedTo\":-1.0,\"Agent/owl:sameAs\":-1.0,\"Agent/foaf:name\":-1.0,\"Agent/dc:date\":-1.0,\"Agent/dc:identifier\":-1.0,\"Agent/rdaGr2:dateOfBirth\":-1.0,\"Agent/rdaGr2:placeOfBirth\":-1.0,\"Agent/rdaGr2:dateOfDeath\":-1.0,\"Agent/rdaGr2:placeOfDeath\":-1.0,\"Agent/rdaGr2:dateOfEstablishment\":-1.0,\"Agent/rdaGr2:dateOfTermination\":-1.0,\"Agent/rdaGr2:gender\":-1.0,\"Agent/rdaGr2:professionOrOccupation\":-1.0,\"Agent/rdaGr2:biographicalInformation\":-1.0,\"Agent/skos:prefLabel\":-1.0,\"Agent/skos:altLabel\":-1.0,\"Agent/skos:note\":-1.0,\"Timespan/edm:begin\":0.0,\"Timespan/edm:end\":0.0,\"Timespan/dcterms:isPartOf\":0.6,\"Timespan/dcterms:hasPart\":-1.0,\"Timespan/edm:isNextInSequence\":-1.0,\"Timespan/owl:sameAs\":-1.0,\"Timespan/skos:prefLabel\":0.5,\"Timespan/skos:altLabel\":-1.0,\"Timespan/skos:note\":-1.0,\"Concept/skos:broader\":-1.0,\"Concept/skos:narrower\":-1.0,\"Concept/skos:related\":-1.0,\"Concept/skos:broadMatch\":-1.0,\"Concept/skos:narrowMatch\":-1.0,\"Concept/skos:relatedMatch\":-1.0,\"Concept/skos:exactMatch\":-1.0,\"Concept/skos:closeMatch\":-1.0,\"Concept/skos:notation\":-1.0,\"Concept/skos:inScheme\":-1.0,\"Concept/skos:prefLabel\":-1.0,\"Concept/skos:altLabel\":-1.0,\"Concept/skos:note\":-1.0,\"multilingualitySaturation:normalized\":0.53719",
			languages
		);
	}

	// @Test
	public void testCountersGetLanguageMapForPLaceSkipped() throws URISyntaxException, IOException {
		EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhXmlSchema());
		calculator.setSkippedEntryChecker(new EdmSkippedEntryChecker());
		JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("general/test-place.json"));
		calculator.measure(cache);
		String languages = calculator.getCsv(true, CompressionLevel.NORMAL);
		assertNotNull(languages);
		assertEquals(
			"\"Proxy/dc:title\":0.0,\"Proxy/dcterms:alternative\":-1.0,\"Proxy/dc:description\":0.0,\"Proxy/dc:creator\":0.0,\"Proxy/dc:publisher\":-1.0,\"Proxy/dc:contributor\":0.0,\"Proxy/dc:type\":0.0,\"Proxy/dc:identifier\":0.0,\"Proxy/dc:language\":0.0,\"Proxy/dc:coverage\":0.0,\"Proxy/dcterms:temporal\":0.0,\"Proxy/dcterms:spatial\":0.0,\"Proxy/dc:subject\":0.0,\"Proxy/dc:date\":-1.0,\"Proxy/dcterms:created\":-1.0,\"Proxy/dcterms:issued\":0.0,\"Proxy/dcterms:extent\":0.0,\"Proxy/dcterms:medium\":-1.0,\"Proxy/dcterms:provenance\":-1.0,\"Proxy/dcterms:hasPart\":0.0,\"Proxy/dcterms:isPartOf\":-1.0,\"Proxy/dc:format\":0.0,\"Proxy/dc:source\":-1.0,\"Proxy/dc:rights\":-1.0,\"Proxy/dc:relation\":-1.0,\"Proxy/edm:europeanaProxy\":0.0,\"Proxy/edm:year\":-1.0,\"Proxy/edm:userTag\":-1.0,\"Proxy/ore:proxyIn\":0.75,\"Proxy/ore:proxyFor\":0.75,\"Proxy/dcterms:conformsTo\":-1.0,\"Proxy/dcterms:hasFormat\":-1.0,\"Proxy/dcterms:hasVersion\":-1.0,\"Proxy/dcterms:isFormatOf\":-1.0,\"Proxy/dcterms:isReferencedBy\":-1.0,\"Proxy/dcterms:isReplacedBy\":-1.0,\"Proxy/dcterms:isRequiredBy\":-1.0,\"Proxy/dcterms:isVersionOf\":-1.0,\"Proxy/dcterms:references\":-1.0,\"Proxy/dcterms:replaces\":-1.0,\"Proxy/dcterms:requires\":-1.0,\"Proxy/dcterms:tableOfContents\":-1.0,\"Proxy/edm:currentLocation\":-1.0,\"Proxy/edm:hasMet\":-1.0,\"Proxy/edm:hasType\":-1.0,\"Proxy/edm:incorporates\":-1.0,\"Proxy/edm:isDerivativeOf\":-1.0,\"Proxy/edm:isRelatedTo\":-1.0,\"Proxy/edm:isRepresentationOf\":-1.0,\"Proxy/edm:isSimilarTo\":-1.0,\"Proxy/edm:isSuccessorOf\":-1.0,\"Proxy/edm:realizes\":-1.0,\"Proxy/edm:wasPresentAt\":-1.0,\"Aggregation/edm:rights\":0.75,\"Aggregation/edm:provider\":0.0,\"Aggregation/edm:dataProvider\":0.0,\"Aggregation/dc:rights\":-1.0,\"Aggregation/edm:ugc\":-1.0,\"Aggregation/edm:aggregatedCHO\":0.75,\"Aggregation/edm:intermediateProvider\":-1.0,\"Place/dcterms:isPartOf\":0.5,\"Place/dcterms:hasPart\":-1.0,\"Place/skos:prefLabel\":0.411765,\"Place/skos:altLabel\":-1.0,\"Place/skos:note\":-1.0,\"Agent/edm:begin\":-1.0,\"Agent/edm:end\":-1.0,\"Agent/edm:hasMet\":-1.0,\"Agent/edm:isRelatedTo\":-1.0,\"Agent/owl:sameAs\":-1.0,\"Agent/foaf:name\":-1.0,\"Agent/dc:date\":-1.0,\"Agent/dc:identifier\":-1.0,\"Agent/rdaGr2:dateOfBirth\":-1.0,\"Agent/rdaGr2:placeOfBirth\":-1.0,\"Agent/rdaGr2:dateOfDeath\":-1.0,\"Agent/rdaGr2:placeOfDeath\":-1.0,\"Agent/rdaGr2:dateOfEstablishment\":-1.0,\"Agent/rdaGr2:dateOfTermination\":-1.0,\"Agent/rdaGr2:gender\":-1.0,\"Agent/rdaGr2:professionOrOccupation\":-1.0,\"Agent/rdaGr2:biographicalInformation\":-1.0,\"Agent/skos:prefLabel\":-1.0,\"Agent/skos:altLabel\":-1.0,\"Agent/skos:note\":-1.0,\"Timespan/edm:begin\":0.0,\"Timespan/edm:end\":0.0,\"Timespan/dcterms:isPartOf\":-1.0,\"Timespan/dcterms:hasPart\":-1.0,\"Timespan/edm:isNextInSequence\":-1.0,\"Timespan/owl:sameAs\":-1.0,\"Timespan/skos:prefLabel\":0.5,\"Timespan/skos:altLabel\":-1.0,\"Timespan/skos:note\":-1.0,\"Concept/skos:broader\":-1.0,\"Concept/skos:narrower\":-1.0,\"Concept/skos:related\":-1.0,\"Concept/skos:broadMatch\":-1.0,\"Concept/skos:narrowMatch\":-1.0,\"Concept/skos:relatedMatch\":-1.0,\"Concept/skos:exactMatch\":-1.0,\"Concept/skos:closeMatch\":-1.0,\"Concept/skos:notation\":-1.0,\"Concept/skos:inScheme\":-1.0,\"Concept/skos:prefLabel\":-1.0,\"Concept/skos:altLabel\":-1.0,\"Concept/skos:note\":-1.0,\"multilingualitySaturation:normalized\":0.438669",
			languages
		);
	}

	// @Test
	public void testGetLanguageMap() throws URISyntaxException, IOException {
		EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhXmlSchema());
		// calculator.setSkippedEntryChecker(new EdmSkippedEntryChecker());
		JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("general/test.json"));
		calculator.measure(cache);

		Map<String, Double> languages = calculator.getSaturationMap();
		assertNotNull(languages);
		// assertEquals(108, languages.size());

		assertEquals(new Double(0.5), languages.get("Proxy/dc:title")); languages.remove("Proxy/dc:title");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:alternative")); languages.remove("Proxy/dcterms:alternative");
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:description")); languages.remove("Proxy/dc:description");
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:creator")); languages.remove("Proxy/dc:creator");
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:publisher")); languages.remove("Proxy/dc:publisher");
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:contributor")); languages.remove("Proxy/dc:contributor");
		assertEquals(new Double(0.0), languages.get("Proxy/dc:type")); languages.remove("Proxy/dc:type");
		assertEquals(new Double(0.0), languages.get("Proxy/dc:identifier")); languages.remove("Proxy/dc:identifier");
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:language")); languages.remove("Proxy/dc:language");
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:coverage")); languages.remove("Proxy/dc:coverage");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:temporal")); languages.remove("Proxy/dcterms:temporal");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:spatial")); languages.remove("Proxy/dcterms:spatial");
		assertEquals(new Double(0.6666666666666667), languages.get("Proxy/dc:subject")); languages.remove("Proxy/dc:subject");
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:date")); languages.remove("Proxy/dc:date");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:created")); languages.remove("Proxy/dcterms:created");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:issued")); languages.remove("Proxy/dcterms:issued");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:extent")); languages.remove("Proxy/dcterms:extent");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:medium")); languages.remove("Proxy/dcterms:medium");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:provenance")); languages.remove("Proxy/dcterms:provenance");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:hasPart")); languages.remove("Proxy/dcterms:hasPart");
		assertEquals(new Double(0.75), languages.get("Proxy/dcterms:isPartOf")); languages.remove("Proxy/dcterms:isPartOf");
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:format")); languages.remove("Proxy/dc:format");
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:source")); languages.remove("Proxy/dc:source");
		assertEquals(new Double(0.0), languages.get("Proxy/dc:rights")); languages.remove("Proxy/dc:rights");
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:relation")); languages.remove("Proxy/dc:relation");
		assertEquals(new Double(0.75), languages.get("Aggregation/edm:rights")); languages.remove("Aggregation/edm:rights");
		assertEquals(new Double(0.5), languages.get("Aggregation/edm:provider")); languages.remove("Aggregation/edm:provider");
		assertEquals(new Double(0.0), languages.get("Aggregation/edm:dataProvider")); languages.remove("Aggregation/edm:dataProvider");

		assertEquals(new Double(0.0), languages.get("Proxy/edm:europeanaProxy")); languages.remove("Proxy/edm:europeanaProxy");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:year")); languages.remove("Proxy/edm:year");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:userTag")); languages.remove("Proxy/edm:userTag");
		assertEquals(new Double(0.75), languages.get("Proxy/ore:proxyIn")); languages.remove("Proxy/ore:proxyIn");
		assertEquals(new Double(0.75), languages.get("Proxy/ore:proxyFor")); languages.remove("Proxy/ore:proxyFor");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:conformsTo")); languages.remove("Proxy/dcterms:conformsTo");
		assertEquals(new Double(0.0), languages.get("Proxy/dcterms:hasFormat")); languages.remove("Proxy/dcterms:hasFormat");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:hasVersion")); languages.remove("Proxy/dcterms:hasVersion");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:isFormatOf")); languages.remove("Proxy/dcterms:isFormatOf");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:isReferencedBy")); languages.remove("Proxy/dcterms:isReferencedBy");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:isReplacedBy")); languages.remove("Proxy/dcterms:isReplacedBy");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:isRequiredBy")); languages.remove("Proxy/dcterms:isRequiredBy");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:isVersionOf")); languages.remove("Proxy/dcterms:isVersionOf");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:references")); languages.remove("Proxy/dcterms:references");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:replaces")); languages.remove("Proxy/dcterms:replaces");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:requires")); languages.remove("Proxy/dcterms:requires");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:tableOfContents")); languages.remove("Proxy/dcterms:tableOfContents");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:currentLocation")); languages.remove("Proxy/edm:currentLocation");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:hasMet")); languages.remove("Proxy/edm:hasMet");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:hasType")); languages.remove("Proxy/edm:hasType");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:incorporates")); languages.remove("Proxy/edm:incorporates");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:isDerivativeOf")); languages.remove("Proxy/edm:isDerivativeOf");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:isRelatedTo")); languages.remove("Proxy/edm:isRelatedTo");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:isRepresentationOf")); languages.remove("Proxy/edm:isRepresentationOf");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:isSimilarTo")); languages.remove("Proxy/edm:isSimilarTo");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:isSuccessorOf")); languages.remove("Proxy/edm:isSuccessorOf");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:realizes")); languages.remove("Proxy/edm:realizes");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:wasPresentAt")); languages.remove("Proxy/edm:wasPresentAt");
		assertEquals(new Double(-1.0), languages.get("Aggregation/dc:rights")); languages.remove("Aggregation/dc:rights");
		assertEquals(new Double(-1.0), languages.get("Aggregation/edm:ugc")); languages.remove("Aggregation/edm:ugc");
		assertEquals(new Double(0.75), languages.get("Aggregation/edm:aggregatedCHO")); languages.remove("Aggregation/edm:aggregatedCHO");
		assertEquals(new Double(-1.0), languages.get("Aggregation/edm:intermediateProvider")); languages.remove("Aggregation/edm:intermediateProvider");
		assertEquals(new Double(-1.0), languages.get("Place/dcterms:isPartOf")); languages.remove("Place/dcterms:isPartOf");
		assertEquals(new Double(-1.0), languages.get("Place/dcterms:hasPart")); languages.remove("Place/dcterms:hasPart");
		assertEquals(new Double(-1.0), languages.get("Place/skos:prefLabel")); languages.remove("Place/skos:prefLabel");
		assertEquals(new Double(-1.0), languages.get("Place/skos:altLabel")); languages.remove("Place/skos:altLabel");
		assertEquals(new Double(-1.0), languages.get("Place/skos:note")); languages.remove("Place/skos:note");
		assertEquals(new Double(-1.0), languages.get("Agent/edm:begin")); languages.remove("Agent/edm:begin");
		assertEquals(new Double(-1.0), languages.get("Agent/edm:end")); languages.remove("Agent/edm:end");
		assertEquals(new Double(-1.0), languages.get("Agent/edm:hasMet")); languages.remove("Agent/edm:hasMet");
		assertEquals(new Double(-1.0), languages.get("Agent/edm:isRelatedTo")); languages.remove("Agent/edm:isRelatedTo");
		assertEquals(new Double(-1.0), languages.get("Agent/owl:sameAs")); languages.remove("Agent/owl:sameAs");
		assertEquals(new Double(-1.0), languages.get("Agent/foaf:name")); languages.remove("Agent/foaf:name");
		assertEquals(new Double(-1.0), languages.get("Agent/dc:date")); languages.remove("Agent/dc:date");
		assertEquals(new Double(-1.0), languages.get("Agent/dc:identifier")); languages.remove("Agent/dc:identifier");
		assertEquals(new Double(-1.0), languages.get("Agent/rdaGr2:dateOfBirth")); languages.remove("Agent/rdaGr2:dateOfBirth");
		assertEquals(new Double(-1.0), languages.get("Agent/rdaGr2:placeOfBirth")); languages.remove("Agent/rdaGr2:placeOfBirth");
		assertEquals(new Double(-1.0), languages.get("Agent/rdaGr2:dateOfDeath")); languages.remove("Agent/rdaGr2:dateOfDeath");
		assertEquals(new Double(-1.0), languages.get("Agent/rdaGr2:placeOfDeath")); languages.remove("Agent/rdaGr2:placeOfDeath");
		assertEquals(new Double(-1.0), languages.get("Agent/rdaGr2:dateOfEstablishment")); languages.remove("Agent/rdaGr2:dateOfEstablishment");
		assertEquals(new Double(-1.0), languages.get("Agent/rdaGr2:dateOfTermination")); languages.remove("Agent/rdaGr2:dateOfTermination");
		assertEquals(new Double(-1.0), languages.get("Agent/rdaGr2:gender")); languages.remove("Agent/rdaGr2:gender");
		assertEquals(new Double(-1.0), languages.get("Agent/rdaGr2:professionOrOccupation")); languages.remove("Agent/rdaGr2:professionOrOccupation");
		assertEquals(new Double(-1.0), languages.get("Agent/rdaGr2:biographicalInformation")); languages.remove("Agent/rdaGr2:biographicalInformation");
		assertEquals(new Double(-1.0), languages.get("Agent/skos:prefLabel")); languages.remove("Agent/skos:prefLabel");
		assertEquals(new Double(-1.0), languages.get("Agent/skos:altLabel")); languages.remove("Agent/skos:altLabel");
		assertEquals(new Double(-1.0), languages.get("Agent/skos:note")); languages.remove("Agent/skos:note");
		assertEquals(new Double(-1.0), languages.get("Timespan/edm:begin")); languages.remove("Timespan/edm:begin");
		assertEquals(new Double(-1.0), languages.get("Timespan/edm:end")); languages.remove("Timespan/edm:end");
		assertEquals(new Double(-1.0), languages.get("Timespan/dcterms:isPartOf")); languages.remove("Timespan/dcterms:isPartOf");
		assertEquals(new Double(-1.0), languages.get("Timespan/dcterms:hasPart")); languages.remove("Timespan/dcterms:hasPart");
		assertEquals(new Double(-1.0), languages.get("Timespan/edm:isNextInSequence")); languages.remove("Timespan/edm:isNextInSequence");
		assertEquals(new Double(-1.0), languages.get("Timespan/owl:sameAs")); languages.remove("Timespan/owl:sameAs");
		assertEquals(new Double(-1.0), languages.get("Timespan/skos:prefLabel")); languages.remove("Timespan/skos:prefLabel");
		assertEquals(new Double(-1.0), languages.get("Timespan/skos:altLabel")); languages.remove("Timespan/skos:altLabel");
		assertEquals(new Double(-1.0), languages.get("Timespan/skos:note")); languages.remove("Timespan/skos:note");
		assertEquals(new Double(-1.0), languages.get("Concept/skos:broader")); languages.remove("Concept/skos:broader");
		assertEquals(new Double(-1.0), languages.get("Concept/skos:narrower")); languages.remove("Concept/skos:narrower");
		assertEquals(new Double(-1.0), languages.get("Concept/skos:related")); languages.remove("Concept/skos:related");
		assertEquals(new Double(-1.0), languages.get("Concept/skos:broadMatch")); languages.remove("Concept/skos:broadMatch");
		assertEquals(new Double(-1.0), languages.get("Concept/skos:narrowMatch")); languages.remove("Concept/skos:narrowMatch");
		assertEquals(new Double(-1.0), languages.get("Concept/skos:relatedMatch")); languages.remove("Concept/skos:relatedMatch");
		assertEquals(new Double(-1.0), languages.get("Concept/skos:exactMatch")); languages.remove("Concept/skos:exactMatch");
		assertEquals(new Double(-1.0), languages.get("Concept/skos:closeMatch")); languages.remove("Concept/skos:closeMatch");
		assertEquals(new Double(-1.0), languages.get("Concept/skos:notation")); languages.remove("Concept/skos:notation");
		assertEquals(new Double(-1.0), languages.get("Concept/skos:inScheme")); languages.remove("Concept/skos:inScheme");
		assertEquals(new Double(0.7222222222222222), languages.get("Concept/skos:prefLabel")); languages.remove("Concept/skos:prefLabel");
		assertEquals(new Double(-1.0), languages.get("Concept/skos:altLabel")); languages.remove("Concept/skos:altLabel");
		assertEquals(new Double(-1.0), languages.get("Concept/skos:note")); languages.remove("Concept/skos:note");
		assertEquals(new Double(0.5901639344262295), languages.get("multilingualitySaturation:normalized")); languages.remove("multilingualitySaturation:normalized");

		assertEquals("Language has the following values: " + StringUtils.join(languages.keySet(), ", "),
			0, languages.size());
	}

	// @Test
	public void testGetLanguageMapSkipped() throws URISyntaxException, IOException {
		EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhXmlSchema());
		calculator.setSkippedEntryChecker(new EdmSkippedEntryChecker());
		JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("general/test.json"));
		calculator.measure(cache);

		Map<String, Double> languages = calculator.getSaturationMap();
		assertNotNull(languages);
		// assertEquals(108, languages.size());

		assertEquals(new Double(0.5), languages.get("Proxy/dc:title")); languages.remove("Proxy/dc:title");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:alternative")); languages.remove("Proxy/dcterms:alternative");
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:description")); languages.remove("Proxy/dc:description");
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:creator")); languages.remove("Proxy/dc:creator");
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:publisher")); languages.remove("Proxy/dc:publisher");
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:contributor")); languages.remove("Proxy/dc:contributor");
		assertEquals(new Double(0.0), languages.get("Proxy/dc:type")); languages.remove("Proxy/dc:type");
		assertEquals(new Double(0.0), languages.get("Proxy/dc:identifier")); languages.remove("Proxy/dc:identifier");
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:language")); languages.remove("Proxy/dc:language");
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:coverage")); languages.remove("Proxy/dc:coverage");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:temporal")); languages.remove("Proxy/dcterms:temporal");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:spatial")); languages.remove("Proxy/dcterms:spatial");
		assertEquals(new Double(0.6666666666666667), languages.get("Proxy/dc:subject")); languages.remove("Proxy/dc:subject");
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:date")); languages.remove("Proxy/dc:date");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:created")); languages.remove("Proxy/dcterms:created");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:issued")); languages.remove("Proxy/dcterms:issued");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:extent")); languages.remove("Proxy/dcterms:extent");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:medium")); languages.remove("Proxy/dcterms:medium");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:provenance")); languages.remove("Proxy/dcterms:provenance");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:hasPart")); languages.remove("Proxy/dcterms:hasPart");
		assertEquals(new Double(0.75), languages.get("Proxy/dcterms:isPartOf")); languages.remove("Proxy/dcterms:isPartOf");
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:format")); languages.remove("Proxy/dc:format");
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:source")); languages.remove("Proxy/dc:source");
		assertEquals(new Double(0.0), languages.get("Proxy/dc:rights")); languages.remove("Proxy/dc:rights");
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:relation")); languages.remove("Proxy/dc:relation");
		assertEquals(new Double(0.75), languages.get("Aggregation/edm:rights")); languages.remove("Aggregation/edm:rights");
		assertEquals(new Double(0.5), languages.get("Aggregation/edm:provider")); languages.remove("Aggregation/edm:provider");
		assertEquals(new Double(0.0), languages.get("Aggregation/edm:dataProvider")); languages.remove("Aggregation/edm:dataProvider");

		assertEquals(new Double(0.0), languages.get("Proxy/edm:europeanaProxy")); languages.remove("Proxy/edm:europeanaProxy");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:year")); languages.remove("Proxy/edm:year");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:userTag")); languages.remove("Proxy/edm:userTag");
		assertEquals(new Double(0.75), languages.get("Proxy/ore:proxyIn")); languages.remove("Proxy/ore:proxyIn");
		assertEquals(new Double(0.75), languages.get("Proxy/ore:proxyFor")); languages.remove("Proxy/ore:proxyFor");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:conformsTo")); languages.remove("Proxy/dcterms:conformsTo");
		assertEquals(new Double(0.0), languages.get("Proxy/dcterms:hasFormat")); languages.remove("Proxy/dcterms:hasFormat");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:hasVersion")); languages.remove("Proxy/dcterms:hasVersion");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:isFormatOf")); languages.remove("Proxy/dcterms:isFormatOf");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:isReferencedBy")); languages.remove("Proxy/dcterms:isReferencedBy");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:isReplacedBy")); languages.remove("Proxy/dcterms:isReplacedBy");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:isRequiredBy")); languages.remove("Proxy/dcterms:isRequiredBy");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:isVersionOf")); languages.remove("Proxy/dcterms:isVersionOf");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:references")); languages.remove("Proxy/dcterms:references");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:replaces")); languages.remove("Proxy/dcterms:replaces");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:requires")); languages.remove("Proxy/dcterms:requires");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:tableOfContents")); languages.remove("Proxy/dcterms:tableOfContents");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:currentLocation")); languages.remove("Proxy/edm:currentLocation");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:hasMet")); languages.remove("Proxy/edm:hasMet");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:hasType")); languages.remove("Proxy/edm:hasType");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:incorporates")); languages.remove("Proxy/edm:incorporates");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:isDerivativeOf")); languages.remove("Proxy/edm:isDerivativeOf");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:isRelatedTo")); languages.remove("Proxy/edm:isRelatedTo");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:isRepresentationOf")); languages.remove("Proxy/edm:isRepresentationOf");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:isSimilarTo")); languages.remove("Proxy/edm:isSimilarTo");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:isSuccessorOf")); languages.remove("Proxy/edm:isSuccessorOf");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:realizes")); languages.remove("Proxy/edm:realizes");
		assertEquals(new Double(-1.0), languages.get("Proxy/edm:wasPresentAt")); languages.remove("Proxy/edm:wasPresentAt");
		assertEquals(new Double(-1.0), languages.get("Aggregation/dc:rights")); languages.remove("Aggregation/dc:rights");
		assertEquals(new Double(-1.0), languages.get("Aggregation/edm:ugc")); languages.remove("Aggregation/edm:ugc");
		assertEquals(new Double(0.75), languages.get("Aggregation/edm:aggregatedCHO")); languages.remove("Aggregation/edm:aggregatedCHO");
		assertEquals(new Double(-1.0), languages.get("Aggregation/edm:intermediateProvider")); languages.remove("Aggregation/edm:intermediateProvider");
		assertEquals(new Double(-1.0), languages.get("Place/dcterms:isPartOf")); languages.remove("Place/dcterms:isPartOf");
		assertEquals(new Double(-1.0), languages.get("Place/dcterms:hasPart")); languages.remove("Place/dcterms:hasPart");
		assertEquals(new Double(-1.0), languages.get("Place/skos:prefLabel")); languages.remove("Place/skos:prefLabel");
		assertEquals(new Double(-1.0), languages.get("Place/skos:altLabel")); languages.remove("Place/skos:altLabel");
		assertEquals(new Double(-1.0), languages.get("Place/skos:note")); languages.remove("Place/skos:note");
		assertEquals(new Double(-1.0), languages.get("Agent/edm:begin")); languages.remove("Agent/edm:begin");
		assertEquals(new Double(-1.0), languages.get("Agent/edm:end")); languages.remove("Agent/edm:end");
		assertEquals(new Double(-1.0), languages.get("Agent/edm:hasMet")); languages.remove("Agent/edm:hasMet");
		assertEquals(new Double(-1.0), languages.get("Agent/edm:isRelatedTo")); languages.remove("Agent/edm:isRelatedTo");
		assertEquals(new Double(-1.0), languages.get("Agent/owl:sameAs")); languages.remove("Agent/owl:sameAs");
		assertEquals(new Double(-1.0), languages.get("Agent/foaf:name")); languages.remove("Agent/foaf:name");
		assertEquals(new Double(-1.0), languages.get("Agent/dc:date")); languages.remove("Agent/dc:date");
		assertEquals(new Double(-1.0), languages.get("Agent/dc:identifier")); languages.remove("Agent/dc:identifier");
		assertEquals(new Double(-1.0), languages.get("Agent/rdaGr2:dateOfBirth")); languages.remove("Agent/rdaGr2:dateOfBirth");
		assertEquals(new Double(-1.0), languages.get("Agent/rdaGr2:placeOfBirth")); languages.remove("Agent/rdaGr2:placeOfBirth");
		assertEquals(new Double(-1.0), languages.get("Agent/rdaGr2:dateOfDeath")); languages.remove("Agent/rdaGr2:dateOfDeath");
		assertEquals(new Double(-1.0), languages.get("Agent/rdaGr2:placeOfDeath")); languages.remove("Agent/rdaGr2:placeOfDeath");
		assertEquals(new Double(-1.0), languages.get("Agent/rdaGr2:dateOfEstablishment")); languages.remove("Agent/rdaGr2:dateOfEstablishment");
		assertEquals(new Double(-1.0), languages.get("Agent/rdaGr2:dateOfTermination")); languages.remove("Agent/rdaGr2:dateOfTermination");
		assertEquals(new Double(-1.0), languages.get("Agent/rdaGr2:gender")); languages.remove("Agent/rdaGr2:gender");
		assertEquals(new Double(-1.0), languages.get("Agent/rdaGr2:professionOrOccupation")); languages.remove("Agent/rdaGr2:professionOrOccupation");
		assertEquals(new Double(-1.0), languages.get("Agent/rdaGr2:biographicalInformation")); languages.remove("Agent/rdaGr2:biographicalInformation");
		assertEquals(new Double(-1.0), languages.get("Agent/skos:prefLabel")); languages.remove("Agent/skos:prefLabel");
		assertEquals(new Double(-1.0), languages.get("Agent/skos:altLabel")); languages.remove("Agent/skos:altLabel");
		assertEquals(new Double(-1.0), languages.get("Agent/skos:note")); languages.remove("Agent/skos:note");
		assertEquals(new Double(-1.0), languages.get("Timespan/edm:begin")); languages.remove("Timespan/edm:begin");
		assertEquals(new Double(-1.0), languages.get("Timespan/edm:end")); languages.remove("Timespan/edm:end");
		assertEquals(new Double(-1.0), languages.get("Timespan/dcterms:isPartOf")); languages.remove("Timespan/dcterms:isPartOf");
		assertEquals(new Double(-1.0), languages.get("Timespan/dcterms:hasPart")); languages.remove("Timespan/dcterms:hasPart");
		assertEquals(new Double(-1.0), languages.get("Timespan/edm:isNextInSequence")); languages.remove("Timespan/edm:isNextInSequence");
		assertEquals(new Double(-1.0), languages.get("Timespan/owl:sameAs")); languages.remove("Timespan/owl:sameAs");
		assertEquals(new Double(-1.0), languages.get("Timespan/skos:prefLabel")); languages.remove("Timespan/skos:prefLabel");
		assertEquals(new Double(-1.0), languages.get("Timespan/skos:altLabel")); languages.remove("Timespan/skos:altLabel");
		assertEquals(new Double(-1.0), languages.get("Timespan/skos:note")); languages.remove("Timespan/skos:note");
		assertEquals(new Double(-1.0), languages.get("Concept/skos:broader")); languages.remove("Concept/skos:broader");
		assertEquals(new Double(-1.0), languages.get("Concept/skos:narrower")); languages.remove("Concept/skos:narrower");
		assertEquals(new Double(-1.0), languages.get("Concept/skos:related")); languages.remove("Concept/skos:related");
		assertEquals(new Double(-1.0), languages.get("Concept/skos:broadMatch")); languages.remove("Concept/skos:broadMatch");
		assertEquals(new Double(-1.0), languages.get("Concept/skos:narrowMatch")); languages.remove("Concept/skos:narrowMatch");
		assertEquals(new Double(-1.0), languages.get("Concept/skos:relatedMatch")); languages.remove("Concept/skos:relatedMatch");
		assertEquals(new Double(-1.0), languages.get("Concept/skos:exactMatch")); languages.remove("Concept/skos:exactMatch");
		assertEquals(new Double(-1.0), languages.get("Concept/skos:closeMatch")); languages.remove("Concept/skos:closeMatch");
		assertEquals(new Double(-1.0), languages.get("Concept/skos:notation")); languages.remove("Concept/skos:notation");
		assertEquals(new Double(-1.0), languages.get("Concept/skos:inScheme")); languages.remove("Concept/skos:inScheme");
		assertEquals(new Double(-1.0), languages.get("Concept/skos:prefLabel")); languages.remove("Concept/skos:prefLabel");
		assertEquals(new Double(-1.0), languages.get("Concept/skos:altLabel")); languages.remove("Concept/skos:altLabel");
		assertEquals(new Double(-1.0), languages.get("Concept/skos:note")); languages.remove("Concept/skos:note");
		assertEquals(new Double(0.5757575757575757), languages.get("multilingualitySaturation:normalized")); languages.remove("multilingualitySaturation:normalized");

		assertEquals("Language has the following values: " + StringUtils.join(languages.keySet(), ", "),
			0, languages.size());
	}

	// @Test
	public void testGetLanguageMapWithPlace() throws URISyntaxException, IOException {
		EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhXmlSchema());
		JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("general/test-place.json"));
		calculator.measure(cache);

		Map<String, Double> languages = calculator.getSaturationMap();
		assertNotNull(languages);
		assertEquals(108, languages.size());
		assertEquals(new Double(0.0), languages.get("Proxy/dc:title"));
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:alternative"));
		assertEquals(new Double(0.0), languages.get("Proxy/dc:description"));
		assertEquals(new Double(0.0), languages.get("Proxy/dc:creator"));
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:publisher"));
		assertEquals(new Double(0.0), languages.get("Proxy/dc:contributor"));
		assertEquals(new Double(0.0), languages.get("Proxy/dc:type"));
		assertEquals(new Double(0.0), languages.get("Proxy/dc:identifier"));
		assertEquals(new Double(0.0), languages.get("Proxy/dc:language"));
		assertEquals(new Double(0.0), languages.get("Proxy/dc:coverage"));
		assertEquals(new Double(0.0), languages.get("Proxy/dcterms:temporal"));
		assertEquals(new Double(0.0), languages.get("Proxy/dcterms:spatial"));
		assertEquals(new Double(0.0), languages.get("Proxy/dc:subject"));
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:date"));
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:created"));
		assertEquals(new Double(0.0), languages.get("Proxy/dcterms:issued"));
		assertEquals(new Double(0.0), languages.get("Proxy/dcterms:extent"));
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:medium"));
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:provenance"));
		assertEquals(new Double(0.0), languages.get("Proxy/dcterms:hasPart"));
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:isPartOf"));
		assertEquals(new Double(0.0), languages.get("Proxy/dc:format"));
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:source"));
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:rights"));
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:relation"));

		assertEquals(new Double(0.75), languages.get("Aggregation/edm:rights"));
		assertEquals(new Double(0.0), languages.get("Aggregation/edm:provider"));
		assertEquals(new Double(0.0), languages.get("Aggregation/edm:dataProvider"));

		assertEquals(new Double(0.6666666666666667), languages.get("Place/dcterms:isPartOf"));
		assertEquals(new Double(-1.0), languages.get("Place/dcterms:hasPart"));
		assertEquals(new Double(0.6), languages.get("Place/skos:prefLabel"));
		assertEquals(new Double(-1.0), languages.get("Place/skos:altLabel"));
		assertEquals(new Double(-1.0), languages.get("Place/skos:note"));
	}

	// @Test
	public void testGetLanguageMapWithPlaceSkipped() throws URISyntaxException, IOException {
		EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhXmlSchema());
		calculator.setSkippedEntryChecker(new EdmSkippedEntryChecker());
		JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("general/test-place.json"));
		calculator.measure(cache);

		Map<String, Double> languages = calculator.getSaturationMap();
		assertNotNull(languages);
		assertEquals(108, languages.size());
		assertEquals(new Double(0.0), languages.get("Proxy/dc:title")); languages.remove("Proxy/dc:title");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:alternative")); languages.remove("Proxy/dcterms:alternative");
		assertEquals(new Double(0.0), languages.get("Proxy/dc:description")); languages.remove("Proxy/dc:description");
		assertEquals(new Double(0.0), languages.get("Proxy/dc:creator")); languages.remove("Proxy/dc:creator");
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:publisher")); languages.remove("Proxy/dc:publisher");
		assertEquals(new Double(0.0), languages.get("Proxy/dc:contributor")); languages.remove("Proxy/dc:contributor");
		assertEquals(new Double(0.0), languages.get("Proxy/dc:type")); languages.remove("Proxy/dc:type");
		assertEquals(new Double(0.0), languages.get("Proxy/dc:identifier")); languages.remove("Proxy/dc:identifier");
		assertEquals(new Double(0.0), languages.get("Proxy/dc:language")); languages.remove("Proxy/dc:language");
		assertEquals(new Double(0.0), languages.get("Proxy/dc:coverage")); languages.remove("Proxy/dc:coverage");
		assertEquals(new Double(0.0), languages.get("Proxy/dcterms:temporal")); languages.remove("Proxy/dcterms:temporal");
		assertEquals(new Double(0.0), languages.get("Proxy/dcterms:spatial")); languages.remove("Proxy/dcterms:spatial");
		assertEquals(new Double(0.0), languages.get("Proxy/dc:subject")); languages.remove("Proxy/dc:subject");
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:date")); languages.remove("Proxy/dc:date");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:created")); languages.remove("Proxy/dcterms:created");
		assertEquals(new Double(0.0), languages.get("Proxy/dcterms:issued")); languages.remove("Proxy/dcterms:issued");
		assertEquals(new Double(0.0), languages.get("Proxy/dcterms:extent")); languages.remove("Proxy/dcterms:extent");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:medium")); languages.remove("Proxy/dcterms:medium");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:provenance")); languages.remove("Proxy/dcterms:provenance");
		assertEquals(new Double(0.0), languages.get("Proxy/dcterms:hasPart")); languages.remove("Proxy/dcterms:hasPart");
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:isPartOf")); languages.remove("Proxy/dcterms:isPartOf");
		assertEquals(new Double(0.0), languages.get("Proxy/dc:format")); languages.remove("Proxy/dc:format");
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:source")); languages.remove("Proxy/dc:source");
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:rights")); languages.remove("Proxy/dc:rights");
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:relation")); languages.remove("Proxy/dc:relation");

		assertEquals(new Double(0.75), languages.get("Aggregation/edm:rights")); languages.remove("Aggregation/edm:rights");
		assertEquals(new Double(0.0), languages.get("Aggregation/edm:provider")); languages.remove("Aggregation/edm:provider");
		assertEquals(new Double(0.0), languages.get("Aggregation/edm:dataProvider")); languages.remove("Aggregation/edm:dataProvider");

		assertEquals(new Double(0.5), languages.get("Place/dcterms:isPartOf")); languages.remove("Place/dcterms:isPartOf");
		assertEquals(new Double(-1.0), languages.get("Place/dcterms:hasPart")); languages.remove("Place/dcterms:hasPart");
		assertEquals(new Double(0.41176470588235303), languages.get("Place/skos:prefLabel")); languages.remove("Place/skos:prefLabel");
		assertEquals(new Double(-1.0), languages.get("Place/skos:altLabel")); languages.remove("Place/skos:altLabel");
		assertEquals(new Double(-1.0), languages.get("Place/skos:note")); languages.remove("Place/skos:note");
		// assertEquals(new HashSet<String>(), languages.keySet());
	}

	@Test
	public void testGetHeaders() {
		EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhXmlSchema());
		List<String> expected = Arrays.asList("providerProxy/dc:title/taggedLiterals", "providerProxy/dc:title/languages", "providerProxy/dc:title/literalsPerLanguage", "europeanaProxy/dc:title/taggedLiterals", "europeanaProxy/dc:title/languages", "europeanaProxy/dc:title/literalsPerLanguage", "providerProxy/dcterms:alternative/taggedLiterals", "providerProxy/dcterms:alternative/languages", "providerProxy/dcterms:alternative/literalsPerLanguage", "europeanaProxy/dcterms:alternative/taggedLiterals", "europeanaProxy/dcterms:alternative/languages", "europeanaProxy/dcterms:alternative/literalsPerLanguage", "providerProxy/dc:description/taggedLiterals", "providerProxy/dc:description/languages", "providerProxy/dc:description/literalsPerLanguage", "europeanaProxy/dc:description/taggedLiterals", "europeanaProxy/dc:description/languages", "europeanaProxy/dc:description/literalsPerLanguage", "providerProxy/dc:creator/taggedLiterals", "providerProxy/dc:creator/languages", "providerProxy/dc:creator/literalsPerLanguage", "europeanaProxy/dc:creator/taggedLiterals", "europeanaProxy/dc:creator/languages", "europeanaProxy/dc:creator/literalsPerLanguage", "providerProxy/dc:publisher/taggedLiterals", "providerProxy/dc:publisher/languages", "providerProxy/dc:publisher/literalsPerLanguage", "europeanaProxy/dc:publisher/taggedLiterals", "europeanaProxy/dc:publisher/languages", "europeanaProxy/dc:publisher/literalsPerLanguage", "providerProxy/dc:contributor/taggedLiterals", "providerProxy/dc:contributor/languages", "providerProxy/dc:contributor/literalsPerLanguage", "europeanaProxy/dc:contributor/taggedLiterals", "europeanaProxy/dc:contributor/languages", "europeanaProxy/dc:contributor/literalsPerLanguage", "providerProxy/dc:type/taggedLiterals", "providerProxy/dc:type/languages", "providerProxy/dc:type/literalsPerLanguage", "europeanaProxy/dc:type/taggedLiterals", "europeanaProxy/dc:type/languages", "europeanaProxy/dc:type/literalsPerLanguage", "providerProxy/dc:identifier/taggedLiterals", "providerProxy/dc:identifier/languages", "providerProxy/dc:identifier/literalsPerLanguage", "europeanaProxy/dc:identifier/taggedLiterals", "europeanaProxy/dc:identifier/languages", "europeanaProxy/dc:identifier/literalsPerLanguage", "providerProxy/dc:language/taggedLiterals", "providerProxy/dc:language/languages", "providerProxy/dc:language/literalsPerLanguage", "europeanaProxy/dc:language/taggedLiterals", "europeanaProxy/dc:language/languages", "europeanaProxy/dc:language/literalsPerLanguage", "providerProxy/dc:coverage/taggedLiterals", "providerProxy/dc:coverage/languages", "providerProxy/dc:coverage/literalsPerLanguage", "europeanaProxy/dc:coverage/taggedLiterals", "europeanaProxy/dc:coverage/languages", "europeanaProxy/dc:coverage/literalsPerLanguage", "providerProxy/dcterms:temporal/taggedLiterals", "providerProxy/dcterms:temporal/languages", "providerProxy/dcterms:temporal/literalsPerLanguage", "europeanaProxy/dcterms:temporal/taggedLiterals", "europeanaProxy/dcterms:temporal/languages", "europeanaProxy/dcterms:temporal/literalsPerLanguage", "providerProxy/dcterms:spatial/taggedLiterals", "providerProxy/dcterms:spatial/languages", "providerProxy/dcterms:spatial/literalsPerLanguage", "europeanaProxy/dcterms:spatial/taggedLiterals", "europeanaProxy/dcterms:spatial/languages", "europeanaProxy/dcterms:spatial/literalsPerLanguage", "providerProxy/dc:subject/taggedLiterals", "providerProxy/dc:subject/languages", "providerProxy/dc:subject/literalsPerLanguage", "europeanaProxy/dc:subject/taggedLiterals", "europeanaProxy/dc:subject/languages", "europeanaProxy/dc:subject/literalsPerLanguage", "providerProxy/dc:date/taggedLiterals", "providerProxy/dc:date/languages", "providerProxy/dc:date/literalsPerLanguage", "europeanaProxy/dc:date/taggedLiterals", "europeanaProxy/dc:date/languages", "europeanaProxy/dc:date/literalsPerLanguage", "providerProxy/dcterms:created/taggedLiterals", "providerProxy/dcterms:created/languages", "providerProxy/dcterms:created/literalsPerLanguage", "europeanaProxy/dcterms:created/taggedLiterals", "europeanaProxy/dcterms:created/languages", "europeanaProxy/dcterms:created/literalsPerLanguage", "providerProxy/dcterms:issued/taggedLiterals", "providerProxy/dcterms:issued/languages", "providerProxy/dcterms:issued/literalsPerLanguage", "europeanaProxy/dcterms:issued/taggedLiterals", "europeanaProxy/dcterms:issued/languages", "europeanaProxy/dcterms:issued/literalsPerLanguage", "providerProxy/dcterms:extent/taggedLiterals", "providerProxy/dcterms:extent/languages", "providerProxy/dcterms:extent/literalsPerLanguage", "europeanaProxy/dcterms:extent/taggedLiterals", "europeanaProxy/dcterms:extent/languages", "europeanaProxy/dcterms:extent/literalsPerLanguage", "providerProxy/dcterms:medium/taggedLiterals", "providerProxy/dcterms:medium/languages", "providerProxy/dcterms:medium/literalsPerLanguage", "europeanaProxy/dcterms:medium/taggedLiterals", "europeanaProxy/dcterms:medium/languages", "europeanaProxy/dcterms:medium/literalsPerLanguage", "providerProxy/dcterms:provenance/taggedLiterals", "providerProxy/dcterms:provenance/languages", "providerProxy/dcterms:provenance/literalsPerLanguage", "europeanaProxy/dcterms:provenance/taggedLiterals", "europeanaProxy/dcterms:provenance/languages", "europeanaProxy/dcterms:provenance/literalsPerLanguage", "providerProxy/dcterms:hasPart/taggedLiterals", "providerProxy/dcterms:hasPart/languages", "providerProxy/dcterms:hasPart/literalsPerLanguage", "europeanaProxy/dcterms:hasPart/taggedLiterals", "europeanaProxy/dcterms:hasPart/languages", "europeanaProxy/dcterms:hasPart/literalsPerLanguage", "providerProxy/dcterms:isPartOf/taggedLiterals", "providerProxy/dcterms:isPartOf/languages", "providerProxy/dcterms:isPartOf/literalsPerLanguage", "europeanaProxy/dcterms:isPartOf/taggedLiterals", "europeanaProxy/dcterms:isPartOf/languages", "europeanaProxy/dcterms:isPartOf/literalsPerLanguage", "providerProxy/dc:format/taggedLiterals", "providerProxy/dc:format/languages", "providerProxy/dc:format/literalsPerLanguage", "europeanaProxy/dc:format/taggedLiterals", "europeanaProxy/dc:format/languages", "europeanaProxy/dc:format/literalsPerLanguage", "providerProxy/dc:source/taggedLiterals", "providerProxy/dc:source/languages", "providerProxy/dc:source/literalsPerLanguage", "europeanaProxy/dc:source/taggedLiterals", "europeanaProxy/dc:source/languages", "europeanaProxy/dc:source/literalsPerLanguage", "providerProxy/dc:rights/taggedLiterals", "providerProxy/dc:rights/languages", "providerProxy/dc:rights/literalsPerLanguage", "europeanaProxy/dc:rights/taggedLiterals", "europeanaProxy/dc:rights/languages", "europeanaProxy/dc:rights/literalsPerLanguage", "providerProxy/dc:relation/taggedLiterals", "providerProxy/dc:relation/languages", "providerProxy/dc:relation/literalsPerLanguage", "europeanaProxy/dc:relation/taggedLiterals", "europeanaProxy/dc:relation/languages", "europeanaProxy/dc:relation/literalsPerLanguage", "providerProxy/edm:year/taggedLiterals", "providerProxy/edm:year/languages", "providerProxy/edm:year/literalsPerLanguage", "europeanaProxy/edm:year/taggedLiterals", "europeanaProxy/edm:year/languages", "europeanaProxy/edm:year/literalsPerLanguage", "providerProxy/edm:userTag/taggedLiterals", "providerProxy/edm:userTag/languages", "providerProxy/edm:userTag/literalsPerLanguage", "europeanaProxy/edm:userTag/taggedLiterals", "europeanaProxy/edm:userTag/languages", "europeanaProxy/edm:userTag/literalsPerLanguage", "providerProxy/dcterms:conformsTo/taggedLiterals", "providerProxy/dcterms:conformsTo/languages", "providerProxy/dcterms:conformsTo/literalsPerLanguage", "europeanaProxy/dcterms:conformsTo/taggedLiterals", "europeanaProxy/dcterms:conformsTo/languages", "europeanaProxy/dcterms:conformsTo/literalsPerLanguage", "providerProxy/dcterms:hasFormat/taggedLiterals", "providerProxy/dcterms:hasFormat/languages", "providerProxy/dcterms:hasFormat/literalsPerLanguage", "europeanaProxy/dcterms:hasFormat/taggedLiterals", "europeanaProxy/dcterms:hasFormat/languages", "europeanaProxy/dcterms:hasFormat/literalsPerLanguage", "providerProxy/dcterms:hasVersion/taggedLiterals", "providerProxy/dcterms:hasVersion/languages", "providerProxy/dcterms:hasVersion/literalsPerLanguage", "europeanaProxy/dcterms:hasVersion/taggedLiterals", "europeanaProxy/dcterms:hasVersion/languages", "europeanaProxy/dcterms:hasVersion/literalsPerLanguage", "providerProxy/dcterms:isFormatOf/taggedLiterals", "providerProxy/dcterms:isFormatOf/languages", "providerProxy/dcterms:isFormatOf/literalsPerLanguage", "europeanaProxy/dcterms:isFormatOf/taggedLiterals", "europeanaProxy/dcterms:isFormatOf/languages", "europeanaProxy/dcterms:isFormatOf/literalsPerLanguage", "providerProxy/dcterms:isReferencedBy/taggedLiterals", "providerProxy/dcterms:isReferencedBy/languages", "providerProxy/dcterms:isReferencedBy/literalsPerLanguage", "europeanaProxy/dcterms:isReferencedBy/taggedLiterals", "europeanaProxy/dcterms:isReferencedBy/languages", "europeanaProxy/dcterms:isReferencedBy/literalsPerLanguage", "providerProxy/dcterms:isReplacedBy/taggedLiterals", "providerProxy/dcterms:isReplacedBy/languages", "providerProxy/dcterms:isReplacedBy/literalsPerLanguage", "europeanaProxy/dcterms:isReplacedBy/taggedLiterals", "europeanaProxy/dcterms:isReplacedBy/languages", "europeanaProxy/dcterms:isReplacedBy/literalsPerLanguage", "providerProxy/dcterms:isRequiredBy/taggedLiterals", "providerProxy/dcterms:isRequiredBy/languages", "providerProxy/dcterms:isRequiredBy/literalsPerLanguage", "europeanaProxy/dcterms:isRequiredBy/taggedLiterals", "europeanaProxy/dcterms:isRequiredBy/languages", "europeanaProxy/dcterms:isRequiredBy/literalsPerLanguage", "providerProxy/dcterms:isVersionOf/taggedLiterals", "providerProxy/dcterms:isVersionOf/languages", "providerProxy/dcterms:isVersionOf/literalsPerLanguage", "europeanaProxy/dcterms:isVersionOf/taggedLiterals", "europeanaProxy/dcterms:isVersionOf/languages", "europeanaProxy/dcterms:isVersionOf/literalsPerLanguage", "providerProxy/dcterms:references/taggedLiterals", "providerProxy/dcterms:references/languages", "providerProxy/dcterms:references/literalsPerLanguage", "europeanaProxy/dcterms:references/taggedLiterals", "europeanaProxy/dcterms:references/languages", "europeanaProxy/dcterms:references/literalsPerLanguage", "providerProxy/dcterms:replaces/taggedLiterals", "providerProxy/dcterms:replaces/languages", "providerProxy/dcterms:replaces/literalsPerLanguage", "europeanaProxy/dcterms:replaces/taggedLiterals", "europeanaProxy/dcterms:replaces/languages", "europeanaProxy/dcterms:replaces/literalsPerLanguage", "providerProxy/dcterms:requires/taggedLiterals", "providerProxy/dcterms:requires/languages", "providerProxy/dcterms:requires/literalsPerLanguage", "europeanaProxy/dcterms:requires/taggedLiterals", "europeanaProxy/dcterms:requires/languages", "europeanaProxy/dcterms:requires/literalsPerLanguage", "providerProxy/dcterms:tableOfContents/taggedLiterals", "providerProxy/dcterms:tableOfContents/languages", "providerProxy/dcterms:tableOfContents/literalsPerLanguage", "europeanaProxy/dcterms:tableOfContents/taggedLiterals", "europeanaProxy/dcterms:tableOfContents/languages", "europeanaProxy/dcterms:tableOfContents/literalsPerLanguage", "providerProxy/edm:currentLocation/taggedLiterals", "providerProxy/edm:currentLocation/languages", "providerProxy/edm:currentLocation/literalsPerLanguage", "europeanaProxy/edm:currentLocation/taggedLiterals", "europeanaProxy/edm:currentLocation/languages", "europeanaProxy/edm:currentLocation/literalsPerLanguage", "providerProxy/edm:hasMet/taggedLiterals", "providerProxy/edm:hasMet/languages", "providerProxy/edm:hasMet/literalsPerLanguage", "europeanaProxy/edm:hasMet/taggedLiterals", "europeanaProxy/edm:hasMet/languages", "europeanaProxy/edm:hasMet/literalsPerLanguage", "providerProxy/edm:hasType/taggedLiterals", "providerProxy/edm:hasType/languages", "providerProxy/edm:hasType/literalsPerLanguage", "europeanaProxy/edm:hasType/taggedLiterals", "europeanaProxy/edm:hasType/languages", "europeanaProxy/edm:hasType/literalsPerLanguage", "providerProxy/edm:incorporates/taggedLiterals", "providerProxy/edm:incorporates/languages", "providerProxy/edm:incorporates/literalsPerLanguage", "europeanaProxy/edm:incorporates/taggedLiterals", "europeanaProxy/edm:incorporates/languages", "europeanaProxy/edm:incorporates/literalsPerLanguage", "providerProxy/edm:isDerivativeOf/taggedLiterals", "providerProxy/edm:isDerivativeOf/languages", "providerProxy/edm:isDerivativeOf/literalsPerLanguage", "europeanaProxy/edm:isDerivativeOf/taggedLiterals", "europeanaProxy/edm:isDerivativeOf/languages", "europeanaProxy/edm:isDerivativeOf/literalsPerLanguage", "providerProxy/edm:isRelatedTo/taggedLiterals", "providerProxy/edm:isRelatedTo/languages", "providerProxy/edm:isRelatedTo/literalsPerLanguage", "europeanaProxy/edm:isRelatedTo/taggedLiterals", "europeanaProxy/edm:isRelatedTo/languages", "europeanaProxy/edm:isRelatedTo/literalsPerLanguage", "providerProxy/edm:isRepresentationOf/taggedLiterals", "providerProxy/edm:isRepresentationOf/languages", "providerProxy/edm:isRepresentationOf/literalsPerLanguage", "europeanaProxy/edm:isRepresentationOf/taggedLiterals", "europeanaProxy/edm:isRepresentationOf/languages", "europeanaProxy/edm:isRepresentationOf/literalsPerLanguage", "providerProxy/edm:isSimilarTo/taggedLiterals", "providerProxy/edm:isSimilarTo/languages", "providerProxy/edm:isSimilarTo/literalsPerLanguage", "europeanaProxy/edm:isSimilarTo/taggedLiterals", "europeanaProxy/edm:isSimilarTo/languages", "europeanaProxy/edm:isSimilarTo/literalsPerLanguage", "providerProxy/edm:isSuccessorOf/taggedLiterals", "providerProxy/edm:isSuccessorOf/languages", "providerProxy/edm:isSuccessorOf/literalsPerLanguage", "europeanaProxy/edm:isSuccessorOf/taggedLiterals", "europeanaProxy/edm:isSuccessorOf/languages", "europeanaProxy/edm:isSuccessorOf/literalsPerLanguage", "providerProxy/edm:realizes/taggedLiterals", "providerProxy/edm:realizes/languages", "providerProxy/edm:realizes/literalsPerLanguage", "europeanaProxy/edm:realizes/taggedLiterals", "europeanaProxy/edm:realizes/languages", "europeanaProxy/edm:realizes/literalsPerLanguage", "providerProxy/edm:wasPresentAt/taggedLiterals", "providerProxy/edm:wasPresentAt/languages", "providerProxy/edm:wasPresentAt/literalsPerLanguage", "europeanaProxy/edm:wasPresentAt/taggedLiterals", "europeanaProxy/edm:wasPresentAt/languages", "europeanaProxy/edm:wasPresentAt/literalsPerLanguage", "NumberOfLanguagesPerPropertyInProviderProxy", "NumberOfLanguagesPerPropertyInEuropeanaProxy", "NumberOfLanguagesPerPropertyInObject", "TaggedLiteralsInProviderProxy", "TaggedLiteralsInEuropeanaProxy", "DistinctLanguageCountInProviderProxy", "DistinctLanguageCountInEuropeanaProxy", "TaggedLiteralsInObject", "DistinctLanguagesInObject", "TaggedLiteralsPerLanguageInProviderProxy", "TaggedLiteralsPerLanguageInEuropeanaProxy", "TaggedLiteralsPerLanguageInObject");
		assertEquals(312, calculator.getHeader().size());
		assertEquals(expected, calculator.getHeader());

		calculator.setResultType(EdmMultilingualitySaturationCalculator.ResultTypes.EXTENDED);
		expected = Arrays.asList("providerProxy/dc:title/taggedLiterals", "providerProxy/dc:title/languages", "providerProxy/dc:title/literalsPerLanguage", "europeanaProxy/dc:title/taggedLiterals", "europeanaProxy/dc:title/languages", "europeanaProxy/dc:title/literalsPerLanguage", "providerProxy/dcterms:alternative/taggedLiterals", "providerProxy/dcterms:alternative/languages", "providerProxy/dcterms:alternative/literalsPerLanguage", "europeanaProxy/dcterms:alternative/taggedLiterals", "europeanaProxy/dcterms:alternative/languages", "europeanaProxy/dcterms:alternative/literalsPerLanguage", "providerProxy/dc:description/taggedLiterals", "providerProxy/dc:description/languages", "providerProxy/dc:description/literalsPerLanguage", "europeanaProxy/dc:description/taggedLiterals", "europeanaProxy/dc:description/languages", "europeanaProxy/dc:description/literalsPerLanguage", "providerProxy/dc:creator/taggedLiterals", "providerProxy/dc:creator/languages", "providerProxy/dc:creator/literalsPerLanguage", "europeanaProxy/dc:creator/taggedLiterals", "europeanaProxy/dc:creator/languages", "europeanaProxy/dc:creator/literalsPerLanguage", "providerProxy/dc:publisher/taggedLiterals", "providerProxy/dc:publisher/languages", "providerProxy/dc:publisher/literalsPerLanguage", "europeanaProxy/dc:publisher/taggedLiterals", "europeanaProxy/dc:publisher/languages", "europeanaProxy/dc:publisher/literalsPerLanguage", "providerProxy/dc:contributor/taggedLiterals", "providerProxy/dc:contributor/languages", "providerProxy/dc:contributor/literalsPerLanguage", "europeanaProxy/dc:contributor/taggedLiterals", "europeanaProxy/dc:contributor/languages", "europeanaProxy/dc:contributor/literalsPerLanguage", "providerProxy/dc:type/taggedLiterals", "providerProxy/dc:type/languages", "providerProxy/dc:type/literalsPerLanguage", "europeanaProxy/dc:type/taggedLiterals", "europeanaProxy/dc:type/languages", "europeanaProxy/dc:type/literalsPerLanguage", "providerProxy/dc:identifier/taggedLiterals", "providerProxy/dc:identifier/languages", "providerProxy/dc:identifier/literalsPerLanguage", "europeanaProxy/dc:identifier/taggedLiterals", "europeanaProxy/dc:identifier/languages", "europeanaProxy/dc:identifier/literalsPerLanguage", "providerProxy/dc:language/taggedLiterals", "providerProxy/dc:language/languages", "providerProxy/dc:language/literalsPerLanguage", "europeanaProxy/dc:language/taggedLiterals", "europeanaProxy/dc:language/languages", "europeanaProxy/dc:language/literalsPerLanguage", "providerProxy/dc:coverage/taggedLiterals", "providerProxy/dc:coverage/languages", "providerProxy/dc:coverage/literalsPerLanguage", "europeanaProxy/dc:coverage/taggedLiterals", "europeanaProxy/dc:coverage/languages", "europeanaProxy/dc:coverage/literalsPerLanguage", "providerProxy/dcterms:temporal/taggedLiterals", "providerProxy/dcterms:temporal/languages", "providerProxy/dcterms:temporal/literalsPerLanguage", "europeanaProxy/dcterms:temporal/taggedLiterals", "europeanaProxy/dcterms:temporal/languages", "europeanaProxy/dcterms:temporal/literalsPerLanguage", "providerProxy/dcterms:spatial/taggedLiterals", "providerProxy/dcterms:spatial/languages", "providerProxy/dcterms:spatial/literalsPerLanguage", "europeanaProxy/dcterms:spatial/taggedLiterals", "europeanaProxy/dcterms:spatial/languages", "europeanaProxy/dcterms:spatial/literalsPerLanguage", "providerProxy/dc:subject/taggedLiterals", "providerProxy/dc:subject/languages", "providerProxy/dc:subject/literalsPerLanguage", "europeanaProxy/dc:subject/taggedLiterals", "europeanaProxy/dc:subject/languages", "europeanaProxy/dc:subject/literalsPerLanguage", "providerProxy/dc:date/taggedLiterals", "providerProxy/dc:date/languages", "providerProxy/dc:date/literalsPerLanguage", "europeanaProxy/dc:date/taggedLiterals", "europeanaProxy/dc:date/languages", "europeanaProxy/dc:date/literalsPerLanguage", "providerProxy/dcterms:created/taggedLiterals", "providerProxy/dcterms:created/languages", "providerProxy/dcterms:created/literalsPerLanguage", "europeanaProxy/dcterms:created/taggedLiterals", "europeanaProxy/dcterms:created/languages", "europeanaProxy/dcterms:created/literalsPerLanguage", "providerProxy/dcterms:issued/taggedLiterals", "providerProxy/dcterms:issued/languages", "providerProxy/dcterms:issued/literalsPerLanguage", "europeanaProxy/dcterms:issued/taggedLiterals", "europeanaProxy/dcterms:issued/languages", "europeanaProxy/dcterms:issued/literalsPerLanguage", "providerProxy/dcterms:extent/taggedLiterals", "providerProxy/dcterms:extent/languages", "providerProxy/dcterms:extent/literalsPerLanguage", "europeanaProxy/dcterms:extent/taggedLiterals", "europeanaProxy/dcterms:extent/languages", "europeanaProxy/dcterms:extent/literalsPerLanguage", "providerProxy/dcterms:medium/taggedLiterals", "providerProxy/dcterms:medium/languages", "providerProxy/dcterms:medium/literalsPerLanguage", "europeanaProxy/dcterms:medium/taggedLiterals", "europeanaProxy/dcterms:medium/languages", "europeanaProxy/dcterms:medium/literalsPerLanguage", "providerProxy/dcterms:provenance/taggedLiterals", "providerProxy/dcterms:provenance/languages", "providerProxy/dcterms:provenance/literalsPerLanguage", "europeanaProxy/dcterms:provenance/taggedLiterals", "europeanaProxy/dcterms:provenance/languages", "europeanaProxy/dcterms:provenance/literalsPerLanguage", "providerProxy/dcterms:hasPart/taggedLiterals", "providerProxy/dcterms:hasPart/languages", "providerProxy/dcterms:hasPart/literalsPerLanguage", "europeanaProxy/dcterms:hasPart/taggedLiterals", "europeanaProxy/dcterms:hasPart/languages", "europeanaProxy/dcterms:hasPart/literalsPerLanguage", "providerProxy/dcterms:isPartOf/taggedLiterals", "providerProxy/dcterms:isPartOf/languages", "providerProxy/dcterms:isPartOf/literalsPerLanguage", "europeanaProxy/dcterms:isPartOf/taggedLiterals", "europeanaProxy/dcterms:isPartOf/languages", "europeanaProxy/dcterms:isPartOf/literalsPerLanguage", "providerProxy/dc:format/taggedLiterals", "providerProxy/dc:format/languages", "providerProxy/dc:format/literalsPerLanguage", "europeanaProxy/dc:format/taggedLiterals", "europeanaProxy/dc:format/languages", "europeanaProxy/dc:format/literalsPerLanguage", "providerProxy/dc:source/taggedLiterals", "providerProxy/dc:source/languages", "providerProxy/dc:source/literalsPerLanguage", "europeanaProxy/dc:source/taggedLiterals", "europeanaProxy/dc:source/languages", "europeanaProxy/dc:source/literalsPerLanguage", "providerProxy/dc:rights/taggedLiterals", "providerProxy/dc:rights/languages", "providerProxy/dc:rights/literalsPerLanguage", "europeanaProxy/dc:rights/taggedLiterals", "europeanaProxy/dc:rights/languages", "europeanaProxy/dc:rights/literalsPerLanguage", "providerProxy/dc:relation/taggedLiterals", "providerProxy/dc:relation/languages", "providerProxy/dc:relation/literalsPerLanguage", "europeanaProxy/dc:relation/taggedLiterals", "europeanaProxy/dc:relation/languages", "europeanaProxy/dc:relation/literalsPerLanguage", "providerProxy/edm:year/taggedLiterals", "providerProxy/edm:year/languages", "providerProxy/edm:year/literalsPerLanguage", "europeanaProxy/edm:year/taggedLiterals", "europeanaProxy/edm:year/languages", "europeanaProxy/edm:year/literalsPerLanguage", "providerProxy/edm:userTag/taggedLiterals", "providerProxy/edm:userTag/languages", "providerProxy/edm:userTag/literalsPerLanguage", "europeanaProxy/edm:userTag/taggedLiterals", "europeanaProxy/edm:userTag/languages", "europeanaProxy/edm:userTag/literalsPerLanguage", "providerProxy/dcterms:conformsTo/taggedLiterals", "providerProxy/dcterms:conformsTo/languages", "providerProxy/dcterms:conformsTo/literalsPerLanguage", "europeanaProxy/dcterms:conformsTo/taggedLiterals", "europeanaProxy/dcterms:conformsTo/languages", "europeanaProxy/dcterms:conformsTo/literalsPerLanguage", "providerProxy/dcterms:hasFormat/taggedLiterals", "providerProxy/dcterms:hasFormat/languages", "providerProxy/dcterms:hasFormat/literalsPerLanguage", "europeanaProxy/dcterms:hasFormat/taggedLiterals", "europeanaProxy/dcterms:hasFormat/languages", "europeanaProxy/dcterms:hasFormat/literalsPerLanguage", "providerProxy/dcterms:hasVersion/taggedLiterals", "providerProxy/dcterms:hasVersion/languages", "providerProxy/dcterms:hasVersion/literalsPerLanguage", "europeanaProxy/dcterms:hasVersion/taggedLiterals", "europeanaProxy/dcterms:hasVersion/languages", "europeanaProxy/dcterms:hasVersion/literalsPerLanguage", "providerProxy/dcterms:isFormatOf/taggedLiterals", "providerProxy/dcterms:isFormatOf/languages", "providerProxy/dcterms:isFormatOf/literalsPerLanguage", "europeanaProxy/dcterms:isFormatOf/taggedLiterals", "europeanaProxy/dcterms:isFormatOf/languages", "europeanaProxy/dcterms:isFormatOf/literalsPerLanguage", "providerProxy/dcterms:isReferencedBy/taggedLiterals", "providerProxy/dcterms:isReferencedBy/languages", "providerProxy/dcterms:isReferencedBy/literalsPerLanguage", "europeanaProxy/dcterms:isReferencedBy/taggedLiterals", "europeanaProxy/dcterms:isReferencedBy/languages", "europeanaProxy/dcterms:isReferencedBy/literalsPerLanguage", "providerProxy/dcterms:isReplacedBy/taggedLiterals", "providerProxy/dcterms:isReplacedBy/languages", "providerProxy/dcterms:isReplacedBy/literalsPerLanguage", "europeanaProxy/dcterms:isReplacedBy/taggedLiterals", "europeanaProxy/dcterms:isReplacedBy/languages", "europeanaProxy/dcterms:isReplacedBy/literalsPerLanguage", "providerProxy/dcterms:isRequiredBy/taggedLiterals", "providerProxy/dcterms:isRequiredBy/languages", "providerProxy/dcterms:isRequiredBy/literalsPerLanguage", "europeanaProxy/dcterms:isRequiredBy/taggedLiterals", "europeanaProxy/dcterms:isRequiredBy/languages", "europeanaProxy/dcterms:isRequiredBy/literalsPerLanguage", "providerProxy/dcterms:isVersionOf/taggedLiterals", "providerProxy/dcterms:isVersionOf/languages", "providerProxy/dcterms:isVersionOf/literalsPerLanguage", "europeanaProxy/dcterms:isVersionOf/taggedLiterals", "europeanaProxy/dcterms:isVersionOf/languages", "europeanaProxy/dcterms:isVersionOf/literalsPerLanguage", "providerProxy/dcterms:references/taggedLiterals", "providerProxy/dcterms:references/languages", "providerProxy/dcterms:references/literalsPerLanguage", "europeanaProxy/dcterms:references/taggedLiterals", "europeanaProxy/dcterms:references/languages", "europeanaProxy/dcterms:references/literalsPerLanguage", "providerProxy/dcterms:replaces/taggedLiterals", "providerProxy/dcterms:replaces/languages", "providerProxy/dcterms:replaces/literalsPerLanguage", "europeanaProxy/dcterms:replaces/taggedLiterals", "europeanaProxy/dcterms:replaces/languages", "europeanaProxy/dcterms:replaces/literalsPerLanguage", "providerProxy/dcterms:requires/taggedLiterals", "providerProxy/dcterms:requires/languages", "providerProxy/dcterms:requires/literalsPerLanguage", "europeanaProxy/dcterms:requires/taggedLiterals", "europeanaProxy/dcterms:requires/languages", "europeanaProxy/dcterms:requires/literalsPerLanguage", "providerProxy/dcterms:tableOfContents/taggedLiterals", "providerProxy/dcterms:tableOfContents/languages", "providerProxy/dcterms:tableOfContents/literalsPerLanguage", "europeanaProxy/dcterms:tableOfContents/taggedLiterals", "europeanaProxy/dcterms:tableOfContents/languages", "europeanaProxy/dcterms:tableOfContents/literalsPerLanguage", "providerProxy/edm:currentLocation/taggedLiterals", "providerProxy/edm:currentLocation/languages", "providerProxy/edm:currentLocation/literalsPerLanguage", "europeanaProxy/edm:currentLocation/taggedLiterals", "europeanaProxy/edm:currentLocation/languages", "europeanaProxy/edm:currentLocation/literalsPerLanguage", "providerProxy/edm:hasMet/taggedLiterals", "providerProxy/edm:hasMet/languages", "providerProxy/edm:hasMet/literalsPerLanguage", "europeanaProxy/edm:hasMet/taggedLiterals", "europeanaProxy/edm:hasMet/languages", "europeanaProxy/edm:hasMet/literalsPerLanguage", "providerProxy/edm:hasType/taggedLiterals", "providerProxy/edm:hasType/languages", "providerProxy/edm:hasType/literalsPerLanguage", "europeanaProxy/edm:hasType/taggedLiterals", "europeanaProxy/edm:hasType/languages", "europeanaProxy/edm:hasType/literalsPerLanguage", "providerProxy/edm:incorporates/taggedLiterals", "providerProxy/edm:incorporates/languages", "providerProxy/edm:incorporates/literalsPerLanguage", "europeanaProxy/edm:incorporates/taggedLiterals", "europeanaProxy/edm:incorporates/languages", "europeanaProxy/edm:incorporates/literalsPerLanguage", "providerProxy/edm:isDerivativeOf/taggedLiterals", "providerProxy/edm:isDerivativeOf/languages", "providerProxy/edm:isDerivativeOf/literalsPerLanguage", "europeanaProxy/edm:isDerivativeOf/taggedLiterals", "europeanaProxy/edm:isDerivativeOf/languages", "europeanaProxy/edm:isDerivativeOf/literalsPerLanguage", "providerProxy/edm:isRelatedTo/taggedLiterals", "providerProxy/edm:isRelatedTo/languages", "providerProxy/edm:isRelatedTo/literalsPerLanguage", "europeanaProxy/edm:isRelatedTo/taggedLiterals", "europeanaProxy/edm:isRelatedTo/languages", "europeanaProxy/edm:isRelatedTo/literalsPerLanguage", "providerProxy/edm:isRepresentationOf/taggedLiterals", "providerProxy/edm:isRepresentationOf/languages", "providerProxy/edm:isRepresentationOf/literalsPerLanguage", "europeanaProxy/edm:isRepresentationOf/taggedLiterals", "europeanaProxy/edm:isRepresentationOf/languages", "europeanaProxy/edm:isRepresentationOf/literalsPerLanguage", "providerProxy/edm:isSimilarTo/taggedLiterals", "providerProxy/edm:isSimilarTo/languages", "providerProxy/edm:isSimilarTo/literalsPerLanguage", "europeanaProxy/edm:isSimilarTo/taggedLiterals", "europeanaProxy/edm:isSimilarTo/languages", "europeanaProxy/edm:isSimilarTo/literalsPerLanguage", "providerProxy/edm:isSuccessorOf/taggedLiterals", "providerProxy/edm:isSuccessorOf/languages", "providerProxy/edm:isSuccessorOf/literalsPerLanguage", "europeanaProxy/edm:isSuccessorOf/taggedLiterals", "europeanaProxy/edm:isSuccessorOf/languages", "europeanaProxy/edm:isSuccessorOf/literalsPerLanguage", "providerProxy/edm:realizes/taggedLiterals", "providerProxy/edm:realizes/languages", "providerProxy/edm:realizes/literalsPerLanguage", "europeanaProxy/edm:realizes/taggedLiterals", "europeanaProxy/edm:realizes/languages", "europeanaProxy/edm:realizes/literalsPerLanguage", "providerProxy/edm:wasPresentAt/taggedLiterals", "providerProxy/edm:wasPresentAt/languages", "providerProxy/edm:wasPresentAt/literalsPerLanguage", "europeanaProxy/edm:wasPresentAt/taggedLiterals", "europeanaProxy/edm:wasPresentAt/languages", "europeanaProxy/edm:wasPresentAt/literalsPerLanguage", "NumberOfLanguagesPerPropertyInProviderProxy", "NumberOfLanguagesPerPropertyInEuropeanaProxy", "NumberOfLanguagesPerPropertyInObject", "TaggedLiteralsInProviderProxy", "TaggedLiteralsInEuropeanaProxy", "DistinctLanguageCountInProviderProxy", "DistinctLanguageCountInEuropeanaProxy", "TaggedLiteralsInObject", "DistinctLanguagesInObject", "TaggedLiteralsPerLanguageInProviderProxy", "TaggedLiteralsPerLanguageInEuropeanaProxy", "TaggedLiteralsPerLanguageInObject");
		assertEquals(312, calculator.getHeader().size());
		assertEquals(expected, calculator.getHeader());
	}

	@Test
	public void testGetHeadersSkipped() {
		EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhXmlSchema());
		calculator.setSkippedEntryChecker(new EdmSkippedEntryChecker());

		List<String> expected = Arrays.asList("providerProxy/dc:title/taggedLiterals", "providerProxy/dc:title/languages", "providerProxy/dc:title/literalsPerLanguage", "europeanaProxy/dc:title/taggedLiterals", "europeanaProxy/dc:title/languages", "europeanaProxy/dc:title/literalsPerLanguage", "providerProxy/dcterms:alternative/taggedLiterals", "providerProxy/dcterms:alternative/languages", "providerProxy/dcterms:alternative/literalsPerLanguage", "europeanaProxy/dcterms:alternative/taggedLiterals", "europeanaProxy/dcterms:alternative/languages", "europeanaProxy/dcterms:alternative/literalsPerLanguage", "providerProxy/dc:description/taggedLiterals", "providerProxy/dc:description/languages", "providerProxy/dc:description/literalsPerLanguage", "europeanaProxy/dc:description/taggedLiterals", "europeanaProxy/dc:description/languages", "europeanaProxy/dc:description/literalsPerLanguage", "providerProxy/dc:creator/taggedLiterals", "providerProxy/dc:creator/languages", "providerProxy/dc:creator/literalsPerLanguage", "europeanaProxy/dc:creator/taggedLiterals", "europeanaProxy/dc:creator/languages", "europeanaProxy/dc:creator/literalsPerLanguage", "providerProxy/dc:publisher/taggedLiterals", "providerProxy/dc:publisher/languages", "providerProxy/dc:publisher/literalsPerLanguage", "europeanaProxy/dc:publisher/taggedLiterals", "europeanaProxy/dc:publisher/languages", "europeanaProxy/dc:publisher/literalsPerLanguage", "providerProxy/dc:contributor/taggedLiterals", "providerProxy/dc:contributor/languages", "providerProxy/dc:contributor/literalsPerLanguage", "europeanaProxy/dc:contributor/taggedLiterals", "europeanaProxy/dc:contributor/languages", "europeanaProxy/dc:contributor/literalsPerLanguage", "providerProxy/dc:type/taggedLiterals", "providerProxy/dc:type/languages", "providerProxy/dc:type/literalsPerLanguage", "europeanaProxy/dc:type/taggedLiterals", "europeanaProxy/dc:type/languages", "europeanaProxy/dc:type/literalsPerLanguage", "providerProxy/dc:identifier/taggedLiterals", "providerProxy/dc:identifier/languages", "providerProxy/dc:identifier/literalsPerLanguage", "europeanaProxy/dc:identifier/taggedLiterals", "europeanaProxy/dc:identifier/languages", "europeanaProxy/dc:identifier/literalsPerLanguage", "providerProxy/dc:language/taggedLiterals", "providerProxy/dc:language/languages", "providerProxy/dc:language/literalsPerLanguage", "europeanaProxy/dc:language/taggedLiterals", "europeanaProxy/dc:language/languages", "europeanaProxy/dc:language/literalsPerLanguage", "providerProxy/dc:coverage/taggedLiterals", "providerProxy/dc:coverage/languages", "providerProxy/dc:coverage/literalsPerLanguage", "europeanaProxy/dc:coverage/taggedLiterals", "europeanaProxy/dc:coverage/languages", "europeanaProxy/dc:coverage/literalsPerLanguage", "providerProxy/dcterms:temporal/taggedLiterals", "providerProxy/dcterms:temporal/languages", "providerProxy/dcterms:temporal/literalsPerLanguage", "europeanaProxy/dcterms:temporal/taggedLiterals", "europeanaProxy/dcterms:temporal/languages", "europeanaProxy/dcterms:temporal/literalsPerLanguage", "providerProxy/dcterms:spatial/taggedLiterals", "providerProxy/dcterms:spatial/languages", "providerProxy/dcterms:spatial/literalsPerLanguage", "europeanaProxy/dcterms:spatial/taggedLiterals", "europeanaProxy/dcterms:spatial/languages", "europeanaProxy/dcterms:spatial/literalsPerLanguage", "providerProxy/dc:subject/taggedLiterals", "providerProxy/dc:subject/languages", "providerProxy/dc:subject/literalsPerLanguage", "europeanaProxy/dc:subject/taggedLiterals", "europeanaProxy/dc:subject/languages", "europeanaProxy/dc:subject/literalsPerLanguage", "providerProxy/dc:date/taggedLiterals", "providerProxy/dc:date/languages", "providerProxy/dc:date/literalsPerLanguage", "europeanaProxy/dc:date/taggedLiterals", "europeanaProxy/dc:date/languages", "europeanaProxy/dc:date/literalsPerLanguage", "providerProxy/dcterms:created/taggedLiterals", "providerProxy/dcterms:created/languages", "providerProxy/dcterms:created/literalsPerLanguage", "europeanaProxy/dcterms:created/taggedLiterals", "europeanaProxy/dcterms:created/languages", "europeanaProxy/dcterms:created/literalsPerLanguage", "providerProxy/dcterms:issued/taggedLiterals", "providerProxy/dcterms:issued/languages", "providerProxy/dcterms:issued/literalsPerLanguage", "europeanaProxy/dcterms:issued/taggedLiterals", "europeanaProxy/dcterms:issued/languages", "europeanaProxy/dcterms:issued/literalsPerLanguage", "providerProxy/dcterms:extent/taggedLiterals", "providerProxy/dcterms:extent/languages", "providerProxy/dcterms:extent/literalsPerLanguage", "europeanaProxy/dcterms:extent/taggedLiterals", "europeanaProxy/dcterms:extent/languages", "europeanaProxy/dcterms:extent/literalsPerLanguage", "providerProxy/dcterms:medium/taggedLiterals", "providerProxy/dcterms:medium/languages", "providerProxy/dcterms:medium/literalsPerLanguage", "europeanaProxy/dcterms:medium/taggedLiterals", "europeanaProxy/dcterms:medium/languages", "europeanaProxy/dcterms:medium/literalsPerLanguage", "providerProxy/dcterms:provenance/taggedLiterals", "providerProxy/dcterms:provenance/languages", "providerProxy/dcterms:provenance/literalsPerLanguage", "europeanaProxy/dcterms:provenance/taggedLiterals", "europeanaProxy/dcterms:provenance/languages", "europeanaProxy/dcterms:provenance/literalsPerLanguage", "providerProxy/dcterms:hasPart/taggedLiterals", "providerProxy/dcterms:hasPart/languages", "providerProxy/dcterms:hasPart/literalsPerLanguage", "europeanaProxy/dcterms:hasPart/taggedLiterals", "europeanaProxy/dcterms:hasPart/languages", "europeanaProxy/dcterms:hasPart/literalsPerLanguage", "providerProxy/dcterms:isPartOf/taggedLiterals", "providerProxy/dcterms:isPartOf/languages", "providerProxy/dcterms:isPartOf/literalsPerLanguage", "europeanaProxy/dcterms:isPartOf/taggedLiterals", "europeanaProxy/dcterms:isPartOf/languages", "europeanaProxy/dcterms:isPartOf/literalsPerLanguage", "providerProxy/dc:format/taggedLiterals", "providerProxy/dc:format/languages", "providerProxy/dc:format/literalsPerLanguage", "europeanaProxy/dc:format/taggedLiterals", "europeanaProxy/dc:format/languages", "europeanaProxy/dc:format/literalsPerLanguage", "providerProxy/dc:source/taggedLiterals", "providerProxy/dc:source/languages", "providerProxy/dc:source/literalsPerLanguage", "europeanaProxy/dc:source/taggedLiterals", "europeanaProxy/dc:source/languages", "europeanaProxy/dc:source/literalsPerLanguage", "providerProxy/dc:rights/taggedLiterals", "providerProxy/dc:rights/languages", "providerProxy/dc:rights/literalsPerLanguage", "europeanaProxy/dc:rights/taggedLiterals", "europeanaProxy/dc:rights/languages", "europeanaProxy/dc:rights/literalsPerLanguage", "providerProxy/dc:relation/taggedLiterals", "providerProxy/dc:relation/languages", "providerProxy/dc:relation/literalsPerLanguage", "europeanaProxy/dc:relation/taggedLiterals", "europeanaProxy/dc:relation/languages", "europeanaProxy/dc:relation/literalsPerLanguage", "providerProxy/edm:year/taggedLiterals", "providerProxy/edm:year/languages", "providerProxy/edm:year/literalsPerLanguage", "europeanaProxy/edm:year/taggedLiterals", "europeanaProxy/edm:year/languages", "europeanaProxy/edm:year/literalsPerLanguage", "providerProxy/edm:userTag/taggedLiterals", "providerProxy/edm:userTag/languages", "providerProxy/edm:userTag/literalsPerLanguage", "europeanaProxy/edm:userTag/taggedLiterals", "europeanaProxy/edm:userTag/languages", "europeanaProxy/edm:userTag/literalsPerLanguage", "providerProxy/dcterms:conformsTo/taggedLiterals", "providerProxy/dcterms:conformsTo/languages", "providerProxy/dcterms:conformsTo/literalsPerLanguage", "europeanaProxy/dcterms:conformsTo/taggedLiterals", "europeanaProxy/dcterms:conformsTo/languages", "europeanaProxy/dcterms:conformsTo/literalsPerLanguage", "providerProxy/dcterms:hasFormat/taggedLiterals", "providerProxy/dcterms:hasFormat/languages", "providerProxy/dcterms:hasFormat/literalsPerLanguage", "europeanaProxy/dcterms:hasFormat/taggedLiterals", "europeanaProxy/dcterms:hasFormat/languages", "europeanaProxy/dcterms:hasFormat/literalsPerLanguage", "providerProxy/dcterms:hasVersion/taggedLiterals", "providerProxy/dcterms:hasVersion/languages", "providerProxy/dcterms:hasVersion/literalsPerLanguage", "europeanaProxy/dcterms:hasVersion/taggedLiterals", "europeanaProxy/dcterms:hasVersion/languages", "europeanaProxy/dcterms:hasVersion/literalsPerLanguage", "providerProxy/dcterms:isFormatOf/taggedLiterals", "providerProxy/dcterms:isFormatOf/languages", "providerProxy/dcterms:isFormatOf/literalsPerLanguage", "europeanaProxy/dcterms:isFormatOf/taggedLiterals", "europeanaProxy/dcterms:isFormatOf/languages", "europeanaProxy/dcterms:isFormatOf/literalsPerLanguage", "providerProxy/dcterms:isReferencedBy/taggedLiterals", "providerProxy/dcterms:isReferencedBy/languages", "providerProxy/dcterms:isReferencedBy/literalsPerLanguage", "europeanaProxy/dcterms:isReferencedBy/taggedLiterals", "europeanaProxy/dcterms:isReferencedBy/languages", "europeanaProxy/dcterms:isReferencedBy/literalsPerLanguage", "providerProxy/dcterms:isReplacedBy/taggedLiterals", "providerProxy/dcterms:isReplacedBy/languages", "providerProxy/dcterms:isReplacedBy/literalsPerLanguage", "europeanaProxy/dcterms:isReplacedBy/taggedLiterals", "europeanaProxy/dcterms:isReplacedBy/languages", "europeanaProxy/dcterms:isReplacedBy/literalsPerLanguage", "providerProxy/dcterms:isRequiredBy/taggedLiterals", "providerProxy/dcterms:isRequiredBy/languages", "providerProxy/dcterms:isRequiredBy/literalsPerLanguage", "europeanaProxy/dcterms:isRequiredBy/taggedLiterals", "europeanaProxy/dcterms:isRequiredBy/languages", "europeanaProxy/dcterms:isRequiredBy/literalsPerLanguage", "providerProxy/dcterms:isVersionOf/taggedLiterals", "providerProxy/dcterms:isVersionOf/languages", "providerProxy/dcterms:isVersionOf/literalsPerLanguage", "europeanaProxy/dcterms:isVersionOf/taggedLiterals", "europeanaProxy/dcterms:isVersionOf/languages", "europeanaProxy/dcterms:isVersionOf/literalsPerLanguage", "providerProxy/dcterms:references/taggedLiterals", "providerProxy/dcterms:references/languages", "providerProxy/dcterms:references/literalsPerLanguage", "europeanaProxy/dcterms:references/taggedLiterals", "europeanaProxy/dcterms:references/languages", "europeanaProxy/dcterms:references/literalsPerLanguage", "providerProxy/dcterms:replaces/taggedLiterals", "providerProxy/dcterms:replaces/languages", "providerProxy/dcterms:replaces/literalsPerLanguage", "europeanaProxy/dcterms:replaces/taggedLiterals", "europeanaProxy/dcterms:replaces/languages", "europeanaProxy/dcterms:replaces/literalsPerLanguage", "providerProxy/dcterms:requires/taggedLiterals", "providerProxy/dcterms:requires/languages", "providerProxy/dcterms:requires/literalsPerLanguage", "europeanaProxy/dcterms:requires/taggedLiterals", "europeanaProxy/dcterms:requires/languages", "europeanaProxy/dcterms:requires/literalsPerLanguage", "providerProxy/dcterms:tableOfContents/taggedLiterals", "providerProxy/dcterms:tableOfContents/languages", "providerProxy/dcterms:tableOfContents/literalsPerLanguage", "europeanaProxy/dcterms:tableOfContents/taggedLiterals", "europeanaProxy/dcterms:tableOfContents/languages", "europeanaProxy/dcterms:tableOfContents/literalsPerLanguage", "providerProxy/edm:currentLocation/taggedLiterals", "providerProxy/edm:currentLocation/languages", "providerProxy/edm:currentLocation/literalsPerLanguage", "europeanaProxy/edm:currentLocation/taggedLiterals", "europeanaProxy/edm:currentLocation/languages", "europeanaProxy/edm:currentLocation/literalsPerLanguage", "providerProxy/edm:hasMet/taggedLiterals", "providerProxy/edm:hasMet/languages", "providerProxy/edm:hasMet/literalsPerLanguage", "europeanaProxy/edm:hasMet/taggedLiterals", "europeanaProxy/edm:hasMet/languages", "europeanaProxy/edm:hasMet/literalsPerLanguage", "providerProxy/edm:hasType/taggedLiterals", "providerProxy/edm:hasType/languages", "providerProxy/edm:hasType/literalsPerLanguage", "europeanaProxy/edm:hasType/taggedLiterals", "europeanaProxy/edm:hasType/languages", "europeanaProxy/edm:hasType/literalsPerLanguage", "providerProxy/edm:incorporates/taggedLiterals", "providerProxy/edm:incorporates/languages", "providerProxy/edm:incorporates/literalsPerLanguage", "europeanaProxy/edm:incorporates/taggedLiterals", "europeanaProxy/edm:incorporates/languages", "europeanaProxy/edm:incorporates/literalsPerLanguage", "providerProxy/edm:isDerivativeOf/taggedLiterals", "providerProxy/edm:isDerivativeOf/languages", "providerProxy/edm:isDerivativeOf/literalsPerLanguage", "europeanaProxy/edm:isDerivativeOf/taggedLiterals", "europeanaProxy/edm:isDerivativeOf/languages", "europeanaProxy/edm:isDerivativeOf/literalsPerLanguage", "providerProxy/edm:isRelatedTo/taggedLiterals", "providerProxy/edm:isRelatedTo/languages", "providerProxy/edm:isRelatedTo/literalsPerLanguage", "europeanaProxy/edm:isRelatedTo/taggedLiterals", "europeanaProxy/edm:isRelatedTo/languages", "europeanaProxy/edm:isRelatedTo/literalsPerLanguage", "providerProxy/edm:isRepresentationOf/taggedLiterals", "providerProxy/edm:isRepresentationOf/languages", "providerProxy/edm:isRepresentationOf/literalsPerLanguage", "europeanaProxy/edm:isRepresentationOf/taggedLiterals", "europeanaProxy/edm:isRepresentationOf/languages", "europeanaProxy/edm:isRepresentationOf/literalsPerLanguage", "providerProxy/edm:isSimilarTo/taggedLiterals", "providerProxy/edm:isSimilarTo/languages", "providerProxy/edm:isSimilarTo/literalsPerLanguage", "europeanaProxy/edm:isSimilarTo/taggedLiterals", "europeanaProxy/edm:isSimilarTo/languages", "europeanaProxy/edm:isSimilarTo/literalsPerLanguage", "providerProxy/edm:isSuccessorOf/taggedLiterals", "providerProxy/edm:isSuccessorOf/languages", "providerProxy/edm:isSuccessorOf/literalsPerLanguage", "europeanaProxy/edm:isSuccessorOf/taggedLiterals", "europeanaProxy/edm:isSuccessorOf/languages", "europeanaProxy/edm:isSuccessorOf/literalsPerLanguage", "providerProxy/edm:realizes/taggedLiterals", "providerProxy/edm:realizes/languages", "providerProxy/edm:realizes/literalsPerLanguage", "europeanaProxy/edm:realizes/taggedLiterals", "europeanaProxy/edm:realizes/languages", "europeanaProxy/edm:realizes/literalsPerLanguage", "providerProxy/edm:wasPresentAt/taggedLiterals", "providerProxy/edm:wasPresentAt/languages", "providerProxy/edm:wasPresentAt/literalsPerLanguage", "europeanaProxy/edm:wasPresentAt/taggedLiterals", "europeanaProxy/edm:wasPresentAt/languages", "europeanaProxy/edm:wasPresentAt/literalsPerLanguage", "NumberOfLanguagesPerPropertyInProviderProxy", "NumberOfLanguagesPerPropertyInEuropeanaProxy", "NumberOfLanguagesPerPropertyInObject", "TaggedLiteralsInProviderProxy", "TaggedLiteralsInEuropeanaProxy", "DistinctLanguageCountInProviderProxy", "DistinctLanguageCountInEuropeanaProxy", "TaggedLiteralsInObject", "DistinctLanguagesInObject", "TaggedLiteralsPerLanguageInProviderProxy", "TaggedLiteralsPerLanguageInEuropeanaProxy", "TaggedLiteralsPerLanguageInObject");
		assertEquals(312, calculator.getHeader().size());
		assertEquals(expected, calculator.getHeader());

		calculator.setResultType(EdmMultilingualitySaturationCalculator.ResultTypes.EXTENDED);
		expected = Arrays.asList("providerProxy/dc:title/taggedLiterals", "providerProxy/dc:title/languages", "providerProxy/dc:title/literalsPerLanguage", "europeanaProxy/dc:title/taggedLiterals", "europeanaProxy/dc:title/languages", "europeanaProxy/dc:title/literalsPerLanguage", "providerProxy/dcterms:alternative/taggedLiterals", "providerProxy/dcterms:alternative/languages", "providerProxy/dcterms:alternative/literalsPerLanguage", "europeanaProxy/dcterms:alternative/taggedLiterals", "europeanaProxy/dcterms:alternative/languages", "europeanaProxy/dcterms:alternative/literalsPerLanguage", "providerProxy/dc:description/taggedLiterals", "providerProxy/dc:description/languages", "providerProxy/dc:description/literalsPerLanguage", "europeanaProxy/dc:description/taggedLiterals", "europeanaProxy/dc:description/languages", "europeanaProxy/dc:description/literalsPerLanguage", "providerProxy/dc:creator/taggedLiterals", "providerProxy/dc:creator/languages", "providerProxy/dc:creator/literalsPerLanguage", "europeanaProxy/dc:creator/taggedLiterals", "europeanaProxy/dc:creator/languages", "europeanaProxy/dc:creator/literalsPerLanguage", "providerProxy/dc:publisher/taggedLiterals", "providerProxy/dc:publisher/languages", "providerProxy/dc:publisher/literalsPerLanguage", "europeanaProxy/dc:publisher/taggedLiterals", "europeanaProxy/dc:publisher/languages", "europeanaProxy/dc:publisher/literalsPerLanguage", "providerProxy/dc:contributor/taggedLiterals", "providerProxy/dc:contributor/languages", "providerProxy/dc:contributor/literalsPerLanguage", "europeanaProxy/dc:contributor/taggedLiterals", "europeanaProxy/dc:contributor/languages", "europeanaProxy/dc:contributor/literalsPerLanguage", "providerProxy/dc:type/taggedLiterals", "providerProxy/dc:type/languages", "providerProxy/dc:type/literalsPerLanguage", "europeanaProxy/dc:type/taggedLiterals", "europeanaProxy/dc:type/languages", "europeanaProxy/dc:type/literalsPerLanguage", "providerProxy/dc:identifier/taggedLiterals", "providerProxy/dc:identifier/languages", "providerProxy/dc:identifier/literalsPerLanguage", "europeanaProxy/dc:identifier/taggedLiterals", "europeanaProxy/dc:identifier/languages", "europeanaProxy/dc:identifier/literalsPerLanguage", "providerProxy/dc:language/taggedLiterals", "providerProxy/dc:language/languages", "providerProxy/dc:language/literalsPerLanguage", "europeanaProxy/dc:language/taggedLiterals", "europeanaProxy/dc:language/languages", "europeanaProxy/dc:language/literalsPerLanguage", "providerProxy/dc:coverage/taggedLiterals", "providerProxy/dc:coverage/languages", "providerProxy/dc:coverage/literalsPerLanguage", "europeanaProxy/dc:coverage/taggedLiterals", "europeanaProxy/dc:coverage/languages", "europeanaProxy/dc:coverage/literalsPerLanguage", "providerProxy/dcterms:temporal/taggedLiterals", "providerProxy/dcterms:temporal/languages", "providerProxy/dcterms:temporal/literalsPerLanguage", "europeanaProxy/dcterms:temporal/taggedLiterals", "europeanaProxy/dcterms:temporal/languages", "europeanaProxy/dcterms:temporal/literalsPerLanguage", "providerProxy/dcterms:spatial/taggedLiterals", "providerProxy/dcterms:spatial/languages", "providerProxy/dcterms:spatial/literalsPerLanguage", "europeanaProxy/dcterms:spatial/taggedLiterals", "europeanaProxy/dcterms:spatial/languages", "europeanaProxy/dcterms:spatial/literalsPerLanguage", "providerProxy/dc:subject/taggedLiterals", "providerProxy/dc:subject/languages", "providerProxy/dc:subject/literalsPerLanguage", "europeanaProxy/dc:subject/taggedLiterals", "europeanaProxy/dc:subject/languages", "europeanaProxy/dc:subject/literalsPerLanguage", "providerProxy/dc:date/taggedLiterals", "providerProxy/dc:date/languages", "providerProxy/dc:date/literalsPerLanguage", "europeanaProxy/dc:date/taggedLiterals", "europeanaProxy/dc:date/languages", "europeanaProxy/dc:date/literalsPerLanguage", "providerProxy/dcterms:created/taggedLiterals", "providerProxy/dcterms:created/languages", "providerProxy/dcterms:created/literalsPerLanguage", "europeanaProxy/dcterms:created/taggedLiterals", "europeanaProxy/dcterms:created/languages", "europeanaProxy/dcterms:created/literalsPerLanguage", "providerProxy/dcterms:issued/taggedLiterals", "providerProxy/dcterms:issued/languages", "providerProxy/dcterms:issued/literalsPerLanguage", "europeanaProxy/dcterms:issued/taggedLiterals", "europeanaProxy/dcterms:issued/languages", "europeanaProxy/dcterms:issued/literalsPerLanguage", "providerProxy/dcterms:extent/taggedLiterals", "providerProxy/dcterms:extent/languages", "providerProxy/dcterms:extent/literalsPerLanguage", "europeanaProxy/dcterms:extent/taggedLiterals", "europeanaProxy/dcterms:extent/languages", "europeanaProxy/dcterms:extent/literalsPerLanguage", "providerProxy/dcterms:medium/taggedLiterals", "providerProxy/dcterms:medium/languages", "providerProxy/dcterms:medium/literalsPerLanguage", "europeanaProxy/dcterms:medium/taggedLiterals", "europeanaProxy/dcterms:medium/languages", "europeanaProxy/dcterms:medium/literalsPerLanguage", "providerProxy/dcterms:provenance/taggedLiterals", "providerProxy/dcterms:provenance/languages", "providerProxy/dcterms:provenance/literalsPerLanguage", "europeanaProxy/dcterms:provenance/taggedLiterals", "europeanaProxy/dcterms:provenance/languages", "europeanaProxy/dcterms:provenance/literalsPerLanguage", "providerProxy/dcterms:hasPart/taggedLiterals", "providerProxy/dcterms:hasPart/languages", "providerProxy/dcterms:hasPart/literalsPerLanguage", "europeanaProxy/dcterms:hasPart/taggedLiterals", "europeanaProxy/dcterms:hasPart/languages", "europeanaProxy/dcterms:hasPart/literalsPerLanguage", "providerProxy/dcterms:isPartOf/taggedLiterals", "providerProxy/dcterms:isPartOf/languages", "providerProxy/dcterms:isPartOf/literalsPerLanguage", "europeanaProxy/dcterms:isPartOf/taggedLiterals", "europeanaProxy/dcterms:isPartOf/languages", "europeanaProxy/dcterms:isPartOf/literalsPerLanguage", "providerProxy/dc:format/taggedLiterals", "providerProxy/dc:format/languages", "providerProxy/dc:format/literalsPerLanguage", "europeanaProxy/dc:format/taggedLiterals", "europeanaProxy/dc:format/languages", "europeanaProxy/dc:format/literalsPerLanguage", "providerProxy/dc:source/taggedLiterals", "providerProxy/dc:source/languages", "providerProxy/dc:source/literalsPerLanguage", "europeanaProxy/dc:source/taggedLiterals", "europeanaProxy/dc:source/languages", "europeanaProxy/dc:source/literalsPerLanguage", "providerProxy/dc:rights/taggedLiterals", "providerProxy/dc:rights/languages", "providerProxy/dc:rights/literalsPerLanguage", "europeanaProxy/dc:rights/taggedLiterals", "europeanaProxy/dc:rights/languages", "europeanaProxy/dc:rights/literalsPerLanguage", "providerProxy/dc:relation/taggedLiterals", "providerProxy/dc:relation/languages", "providerProxy/dc:relation/literalsPerLanguage", "europeanaProxy/dc:relation/taggedLiterals", "europeanaProxy/dc:relation/languages", "europeanaProxy/dc:relation/literalsPerLanguage", "providerProxy/edm:year/taggedLiterals", "providerProxy/edm:year/languages", "providerProxy/edm:year/literalsPerLanguage", "europeanaProxy/edm:year/taggedLiterals", "europeanaProxy/edm:year/languages", "europeanaProxy/edm:year/literalsPerLanguage", "providerProxy/edm:userTag/taggedLiterals", "providerProxy/edm:userTag/languages", "providerProxy/edm:userTag/literalsPerLanguage", "europeanaProxy/edm:userTag/taggedLiterals", "europeanaProxy/edm:userTag/languages", "europeanaProxy/edm:userTag/literalsPerLanguage", "providerProxy/dcterms:conformsTo/taggedLiterals", "providerProxy/dcterms:conformsTo/languages", "providerProxy/dcterms:conformsTo/literalsPerLanguage", "europeanaProxy/dcterms:conformsTo/taggedLiterals", "europeanaProxy/dcterms:conformsTo/languages", "europeanaProxy/dcterms:conformsTo/literalsPerLanguage", "providerProxy/dcterms:hasFormat/taggedLiterals", "providerProxy/dcterms:hasFormat/languages", "providerProxy/dcterms:hasFormat/literalsPerLanguage", "europeanaProxy/dcterms:hasFormat/taggedLiterals", "europeanaProxy/dcterms:hasFormat/languages", "europeanaProxy/dcterms:hasFormat/literalsPerLanguage", "providerProxy/dcterms:hasVersion/taggedLiterals", "providerProxy/dcterms:hasVersion/languages", "providerProxy/dcterms:hasVersion/literalsPerLanguage", "europeanaProxy/dcterms:hasVersion/taggedLiterals", "europeanaProxy/dcterms:hasVersion/languages", "europeanaProxy/dcterms:hasVersion/literalsPerLanguage", "providerProxy/dcterms:isFormatOf/taggedLiterals", "providerProxy/dcterms:isFormatOf/languages", "providerProxy/dcterms:isFormatOf/literalsPerLanguage", "europeanaProxy/dcterms:isFormatOf/taggedLiterals", "europeanaProxy/dcterms:isFormatOf/languages", "europeanaProxy/dcterms:isFormatOf/literalsPerLanguage", "providerProxy/dcterms:isReferencedBy/taggedLiterals", "providerProxy/dcterms:isReferencedBy/languages", "providerProxy/dcterms:isReferencedBy/literalsPerLanguage", "europeanaProxy/dcterms:isReferencedBy/taggedLiterals", "europeanaProxy/dcterms:isReferencedBy/languages", "europeanaProxy/dcterms:isReferencedBy/literalsPerLanguage", "providerProxy/dcterms:isReplacedBy/taggedLiterals", "providerProxy/dcterms:isReplacedBy/languages", "providerProxy/dcterms:isReplacedBy/literalsPerLanguage", "europeanaProxy/dcterms:isReplacedBy/taggedLiterals", "europeanaProxy/dcterms:isReplacedBy/languages", "europeanaProxy/dcterms:isReplacedBy/literalsPerLanguage", "providerProxy/dcterms:isRequiredBy/taggedLiterals", "providerProxy/dcterms:isRequiredBy/languages", "providerProxy/dcterms:isRequiredBy/literalsPerLanguage", "europeanaProxy/dcterms:isRequiredBy/taggedLiterals", "europeanaProxy/dcterms:isRequiredBy/languages", "europeanaProxy/dcterms:isRequiredBy/literalsPerLanguage", "providerProxy/dcterms:isVersionOf/taggedLiterals", "providerProxy/dcterms:isVersionOf/languages", "providerProxy/dcterms:isVersionOf/literalsPerLanguage", "europeanaProxy/dcterms:isVersionOf/taggedLiterals", "europeanaProxy/dcterms:isVersionOf/languages", "europeanaProxy/dcterms:isVersionOf/literalsPerLanguage", "providerProxy/dcterms:references/taggedLiterals", "providerProxy/dcterms:references/languages", "providerProxy/dcterms:references/literalsPerLanguage", "europeanaProxy/dcterms:references/taggedLiterals", "europeanaProxy/dcterms:references/languages", "europeanaProxy/dcterms:references/literalsPerLanguage", "providerProxy/dcterms:replaces/taggedLiterals", "providerProxy/dcterms:replaces/languages", "providerProxy/dcterms:replaces/literalsPerLanguage", "europeanaProxy/dcterms:replaces/taggedLiterals", "europeanaProxy/dcterms:replaces/languages", "europeanaProxy/dcterms:replaces/literalsPerLanguage", "providerProxy/dcterms:requires/taggedLiterals", "providerProxy/dcterms:requires/languages", "providerProxy/dcterms:requires/literalsPerLanguage", "europeanaProxy/dcterms:requires/taggedLiterals", "europeanaProxy/dcterms:requires/languages", "europeanaProxy/dcterms:requires/literalsPerLanguage", "providerProxy/dcterms:tableOfContents/taggedLiterals", "providerProxy/dcterms:tableOfContents/languages", "providerProxy/dcterms:tableOfContents/literalsPerLanguage", "europeanaProxy/dcterms:tableOfContents/taggedLiterals", "europeanaProxy/dcterms:tableOfContents/languages", "europeanaProxy/dcterms:tableOfContents/literalsPerLanguage", "providerProxy/edm:currentLocation/taggedLiterals", "providerProxy/edm:currentLocation/languages", "providerProxy/edm:currentLocation/literalsPerLanguage", "europeanaProxy/edm:currentLocation/taggedLiterals", "europeanaProxy/edm:currentLocation/languages", "europeanaProxy/edm:currentLocation/literalsPerLanguage", "providerProxy/edm:hasMet/taggedLiterals", "providerProxy/edm:hasMet/languages", "providerProxy/edm:hasMet/literalsPerLanguage", "europeanaProxy/edm:hasMet/taggedLiterals", "europeanaProxy/edm:hasMet/languages", "europeanaProxy/edm:hasMet/literalsPerLanguage", "providerProxy/edm:hasType/taggedLiterals", "providerProxy/edm:hasType/languages", "providerProxy/edm:hasType/literalsPerLanguage", "europeanaProxy/edm:hasType/taggedLiterals", "europeanaProxy/edm:hasType/languages", "europeanaProxy/edm:hasType/literalsPerLanguage", "providerProxy/edm:incorporates/taggedLiterals", "providerProxy/edm:incorporates/languages", "providerProxy/edm:incorporates/literalsPerLanguage", "europeanaProxy/edm:incorporates/taggedLiterals", "europeanaProxy/edm:incorporates/languages", "europeanaProxy/edm:incorporates/literalsPerLanguage", "providerProxy/edm:isDerivativeOf/taggedLiterals", "providerProxy/edm:isDerivativeOf/languages", "providerProxy/edm:isDerivativeOf/literalsPerLanguage", "europeanaProxy/edm:isDerivativeOf/taggedLiterals", "europeanaProxy/edm:isDerivativeOf/languages", "europeanaProxy/edm:isDerivativeOf/literalsPerLanguage", "providerProxy/edm:isRelatedTo/taggedLiterals", "providerProxy/edm:isRelatedTo/languages", "providerProxy/edm:isRelatedTo/literalsPerLanguage", "europeanaProxy/edm:isRelatedTo/taggedLiterals", "europeanaProxy/edm:isRelatedTo/languages", "europeanaProxy/edm:isRelatedTo/literalsPerLanguage", "providerProxy/edm:isRepresentationOf/taggedLiterals", "providerProxy/edm:isRepresentationOf/languages", "providerProxy/edm:isRepresentationOf/literalsPerLanguage", "europeanaProxy/edm:isRepresentationOf/taggedLiterals", "europeanaProxy/edm:isRepresentationOf/languages", "europeanaProxy/edm:isRepresentationOf/literalsPerLanguage", "providerProxy/edm:isSimilarTo/taggedLiterals", "providerProxy/edm:isSimilarTo/languages", "providerProxy/edm:isSimilarTo/literalsPerLanguage", "europeanaProxy/edm:isSimilarTo/taggedLiterals", "europeanaProxy/edm:isSimilarTo/languages", "europeanaProxy/edm:isSimilarTo/literalsPerLanguage", "providerProxy/edm:isSuccessorOf/taggedLiterals", "providerProxy/edm:isSuccessorOf/languages", "providerProxy/edm:isSuccessorOf/literalsPerLanguage", "europeanaProxy/edm:isSuccessorOf/taggedLiterals", "europeanaProxy/edm:isSuccessorOf/languages", "europeanaProxy/edm:isSuccessorOf/literalsPerLanguage", "providerProxy/edm:realizes/taggedLiterals", "providerProxy/edm:realizes/languages", "providerProxy/edm:realizes/literalsPerLanguage", "europeanaProxy/edm:realizes/taggedLiterals", "europeanaProxy/edm:realizes/languages", "europeanaProxy/edm:realizes/literalsPerLanguage", "providerProxy/edm:wasPresentAt/taggedLiterals", "providerProxy/edm:wasPresentAt/languages", "providerProxy/edm:wasPresentAt/literalsPerLanguage", "europeanaProxy/edm:wasPresentAt/taggedLiterals", "europeanaProxy/edm:wasPresentAt/languages", "europeanaProxy/edm:wasPresentAt/literalsPerLanguage", "NumberOfLanguagesPerPropertyInProviderProxy", "NumberOfLanguagesPerPropertyInEuropeanaProxy", "NumberOfLanguagesPerPropertyInObject", "TaggedLiteralsInProviderProxy", "TaggedLiteralsInEuropeanaProxy", "DistinctLanguageCountInProviderProxy", "DistinctLanguageCountInEuropeanaProxy", "TaggedLiteralsInObject", "DistinctLanguagesInObject", "TaggedLiteralsPerLanguageInProviderProxy", "TaggedLiteralsPerLanguageInEuropeanaProxy", "TaggedLiteralsPerLanguageInObject");
		assertEquals(312, calculator.getHeader().size());
		assertEquals(expected, calculator.getHeader());
	}

	// @Test
	public void testIssue8MultipleSameLanguages() throws URISyntaxException, IOException {
		EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhXmlSchema());
		JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("issue-examples/issue8-multiple-same-languages.json"));
		calculator.measure(cache);
		Map<String, Double> languages = calculator.getSaturationMap();
		assertEquals(new Double(0.5), languages.get("Proxy/dc:title"));
		assertEquals(new Double(0.7058823529411764), languages.get("Place/skos:prefLabel"));
	}

	// @Test
	public void testIssue8MultipleSameLanguagesSkipped() throws URISyntaxException, IOException {
		EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhXmlSchema());
		calculator.setSkippedEntryChecker(new EdmSkippedEntryChecker());
		JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("issue-examples/issue8-multiple-same-languages.json"));
		calculator.measure(cache);
		Map<String, Double> languages = calculator.getSaturationMap();
		assertEquals(new Double(0.5), languages.get("Proxy/dc:title"));
		assertEquals(new Double(-1.0), languages.get("Place/skos:prefLabel"));
	}

	// @Test
	public void testComplexResponse() throws URISyntaxException, IOException {
		EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhXmlSchema());
		calculator.setResultType(EdmMultilingualitySaturationCalculator.ResultTypes.EXTENDED);
		JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("issue-examples/issue8-multiple-same-languages.json"));
		calculator.measure(cache);
		String csv = calculator.getCsv(true, CompressionLevel.NORMAL);
		assertEquals("\"Proxy/dc:title:sum\":1.0,\"Proxy/dc:title:average\":1.0,\"Proxy/dc:title:normalized\":0.5,\"Proxy/dcterms:alternative:sum\":-1.0,\"Proxy/dcterms:alternative:average\":-1.0,\"Proxy/dcterms:alternative:normalized\":-1.0,\"Proxy/dc:description:sum\":1.0,\"Proxy/dc:description:average\":1.0,\"Proxy/dc:description:normalized\":0.5,\"Proxy/dc:creator:sum\":0.0,\"Proxy/dc:creator:average\":0.0,\"Proxy/dc:creator:normalized\":0.0,\"Proxy/dc:publisher:sum\":0.0,\"Proxy/dc:publisher:average\":0.0,\"Proxy/dc:publisher:normalized\":0.0,\"Proxy/dc:contributor:sum\":-1.0,\"Proxy/dc:contributor:average\":-1.0,\"Proxy/dc:contributor:normalized\":-1.0,\"Proxy/dc:type:sum\":3.0,\"Proxy/dc:type:average\":3.0,\"Proxy/dc:type:normalized\":0.75,\"Proxy/dc:identifier:sum\":0.0,\"Proxy/dc:identifier:average\":0.0,\"Proxy/dc:identifier:normalized\":0.0,\"Proxy/dc:language:sum\":0.0,\"Proxy/dc:language:average\":0.0,\"Proxy/dc:language:normalized\":0.0,\"Proxy/dc:coverage:sum\":2.0,\"Proxy/dc:coverage:average\":2.0,\"Proxy/dc:coverage:normalized\":0.666667,\"Proxy/dcterms:temporal:sum\":-1.0,\"Proxy/dcterms:temporal:average\":-1.0,\"Proxy/dcterms:temporal:normalized\":-1.0,\"Proxy/dcterms:spatial:sum\":0.0,\"Proxy/dcterms:spatial:average\":0.0,\"Proxy/dcterms:spatial:normalized\":0.0,\"Proxy/dc:subject:sum\":3.0,\"Proxy/dc:subject:average\":3.0,\"Proxy/dc:subject:normalized\":0.75,\"Proxy/dc:date:sum\":-1.0,\"Proxy/dc:date:average\":-1.0,\"Proxy/dc:date:normalized\":-1.0,\"Proxy/dcterms:created:sum\":0.0,\"Proxy/dcterms:created:average\":0.0,\"Proxy/dcterms:created:normalized\":0.0,\"Proxy/dcterms:issued:sum\":-1.0,\"Proxy/dcterms:issued:average\":-1.0,\"Proxy/dcterms:issued:normalized\":-1.0,\"Proxy/dcterms:extent:sum\":2.0,\"Proxy/dcterms:extent:average\":2.0,\"Proxy/dcterms:extent:normalized\":0.666667,\"Proxy/dcterms:medium:sum\":-1.0,\"Proxy/dcterms:medium:average\":-1.0,\"Proxy/dcterms:medium:normalized\":-1.0,\"Proxy/dcterms:provenance:sum\":1.0,\"Proxy/dcterms:provenance:average\":1.0,\"Proxy/dcterms:provenance:normalized\":0.5,\"Proxy/dcterms:hasPart:sum\":-1.0,\"Proxy/dcterms:hasPart:average\":-1.0,\"Proxy/dcterms:hasPart:normalized\":-1.0,\"Proxy/dcterms:isPartOf:sum\":-1.0,\"Proxy/dcterms:isPartOf:average\":-1.0,\"Proxy/dcterms:isPartOf:normalized\":-1.0,\"Proxy/dc:format:sum\":3.0,\"Proxy/dc:format:average\":3.0,\"Proxy/dc:format:normalized\":0.75,\"Proxy/dc:source:sum\":-1.0,\"Proxy/dc:source:average\":-1.0,\"Proxy/dc:source:normalized\":-1.0,\"Proxy/dc:rights:sum\":2.0,\"Proxy/dc:rights:average\":2.0,\"Proxy/dc:rights:normalized\":0.666667,\"Proxy/dc:relation:sum\":-1.0,\"Proxy/dc:relation:average\":-1.0,\"Proxy/dc:relation:normalized\":-1.0,\"Proxy/edm:europeanaProxy:sum\":0.0,\"Proxy/edm:europeanaProxy:average\":0.0,\"Proxy/edm:europeanaProxy:normalized\":0.0,\"Proxy/edm:year:sum\":-1.0,\"Proxy/edm:year:average\":-1.0,\"Proxy/edm:year:normalized\":-1.0,\"Proxy/edm:userTag:sum\":-1.0,\"Proxy/edm:userTag:average\":-1.0,\"Proxy/edm:userTag:normalized\":-1.0,\"Proxy/ore:proxyIn:sum\":3.0,\"Proxy/ore:proxyIn:average\":3.0,\"Proxy/ore:proxyIn:normalized\":0.75,\"Proxy/ore:proxyFor:sum\":3.0,\"Proxy/ore:proxyFor:average\":3.0,\"Proxy/ore:proxyFor:normalized\":0.75,\"Proxy/dcterms:conformsTo:sum\":-1.0,\"Proxy/dcterms:conformsTo:average\":-1.0,\"Proxy/dcterms:conformsTo:normalized\":-1.0,\"Proxy/dcterms:hasFormat:sum\":-1.0,\"Proxy/dcterms:hasFormat:average\":-1.0,\"Proxy/dcterms:hasFormat:normalized\":-1.0,\"Proxy/dcterms:hasVersion:sum\":-1.0,\"Proxy/dcterms:hasVersion:average\":-1.0,\"Proxy/dcterms:hasVersion:normalized\":-1.0,\"Proxy/dcterms:isFormatOf:sum\":-1.0,\"Proxy/dcterms:isFormatOf:average\":-1.0,\"Proxy/dcterms:isFormatOf:normalized\":-1.0,\"Proxy/dcterms:isReferencedBy:sum\":0.0,\"Proxy/dcterms:isReferencedBy:average\":0.0,\"Proxy/dcterms:isReferencedBy:normalized\":0.0,\"Proxy/dcterms:isReplacedBy:sum\":-1.0,\"Proxy/dcterms:isReplacedBy:average\":-1.0,\"Proxy/dcterms:isReplacedBy:normalized\":-1.0,\"Proxy/dcterms:isRequiredBy:sum\":-1.0,\"Proxy/dcterms:isRequiredBy:average\":-1.0,\"Proxy/dcterms:isRequiredBy:normalized\":-1.0,\"Proxy/dcterms:isVersionOf:sum\":-1.0,\"Proxy/dcterms:isVersionOf:average\":-1.0,\"Proxy/dcterms:isVersionOf:normalized\":-1.0,\"Proxy/dcterms:references:sum\":-1.0,\"Proxy/dcterms:references:average\":-1.0,\"Proxy/dcterms:references:normalized\":-1.0,\"Proxy/dcterms:replaces:sum\":-1.0,\"Proxy/dcterms:replaces:average\":-1.0,\"Proxy/dcterms:replaces:normalized\":-1.0,\"Proxy/dcterms:requires:sum\":-1.0,\"Proxy/dcterms:requires:average\":-1.0,\"Proxy/dcterms:requires:normalized\":-1.0,\"Proxy/dcterms:tableOfContents:sum\":-1.0,\"Proxy/dcterms:tableOfContents:average\":-1.0,\"Proxy/dcterms:tableOfContents:normalized\":-1.0,\"Proxy/edm:currentLocation:sum\":-1.0,\"Proxy/edm:currentLocation:average\":-1.0,\"Proxy/edm:currentLocation:normalized\":-1.0,\"Proxy/edm:hasMet:sum\":-1.0,\"Proxy/edm:hasMet:average\":-1.0,\"Proxy/edm:hasMet:normalized\":-1.0,\"Proxy/edm:hasType:sum\":-1.0,\"Proxy/edm:hasType:average\":-1.0,\"Proxy/edm:hasType:normalized\":-1.0,\"Proxy/edm:incorporates:sum\":-1.0,\"Proxy/edm:incorporates:average\":-1.0,\"Proxy/edm:incorporates:normalized\":-1.0,\"Proxy/edm:isDerivativeOf:sum\":-1.0,\"Proxy/edm:isDerivativeOf:average\":-1.0,\"Proxy/edm:isDerivativeOf:normalized\":-1.0,\"Proxy/edm:isRelatedTo:sum\":-1.0,\"Proxy/edm:isRelatedTo:average\":-1.0,\"Proxy/edm:isRelatedTo:normalized\":-1.0,\"Proxy/edm:isRepresentationOf:sum\":-1.0,\"Proxy/edm:isRepresentationOf:average\":-1.0,\"Proxy/edm:isRepresentationOf:normalized\":-1.0,\"Proxy/edm:isSimilarTo:sum\":-1.0,\"Proxy/edm:isSimilarTo:average\":-1.0,\"Proxy/edm:isSimilarTo:normalized\":-1.0,\"Proxy/edm:isSuccessorOf:sum\":-1.0,\"Proxy/edm:isSuccessorOf:average\":-1.0,\"Proxy/edm:isSuccessorOf:normalized\":-1.0,\"Proxy/edm:realizes:sum\":-1.0,\"Proxy/edm:realizes:average\":-1.0,\"Proxy/edm:realizes:normalized\":-1.0,\"Proxy/edm:wasPresentAt:sum\":-1.0,\"Proxy/edm:wasPresentAt:average\":-1.0,\"Proxy/edm:wasPresentAt:normalized\":-1.0,\"Aggregation/edm:rights:sum\":3.0,\"Aggregation/edm:rights:average\":3.0,\"Aggregation/edm:rights:normalized\":0.75,\"Aggregation/edm:provider:sum\":0.0,\"Aggregation/edm:provider:average\":0.0,\"Aggregation/edm:provider:normalized\":0.0,\"Aggregation/edm:dataProvider:sum\":0.0,\"Aggregation/edm:dataProvider:average\":0.0,\"Aggregation/edm:dataProvider:normalized\":0.0,\"Aggregation/dc:rights:sum\":2.0,\"Aggregation/dc:rights:average\":2.0,\"Aggregation/dc:rights:normalized\":0.666667,\"Aggregation/edm:ugc:sum\":-1.0,\"Aggregation/edm:ugc:average\":-1.0,\"Aggregation/edm:ugc:normalized\":-1.0,\"Aggregation/edm:aggregatedCHO:sum\":3.0,\"Aggregation/edm:aggregatedCHO:average\":3.0,\"Aggregation/edm:aggregatedCHO:normalized\":0.75,\"Aggregation/edm:intermediateProvider:sum\":-1.0,\"Aggregation/edm:intermediateProvider:average\":-1.0,\"Aggregation/edm:intermediateProvider:normalized\":-1.0,\"Place/dcterms:isPartOf:sum\":-1.0,\"Place/dcterms:isPartOf:average\":-1.0,\"Place/dcterms:isPartOf:normalized\":-1.0,\"Place/dcterms:hasPart:sum\":-1.0,\"Place/dcterms:hasPart:average\":-1.0,\"Place/dcterms:hasPart:normalized\":-1.0,\"Place/skos:prefLabel:sum\":2.4,\"Place/skos:prefLabel:average\":2.4,\"Place/skos:prefLabel:normalized\":0.705882,\"Place/skos:altLabel:sum\":-1.0,\"Place/skos:altLabel:average\":-1.0,\"Place/skos:altLabel:normalized\":-1.0,\"Place/skos:note:sum\":-1.0,\"Place/skos:note:average\":-1.0,\"Place/skos:note:normalized\":-1.0,\"Agent/edm:begin:sum\":-1.0,\"Agent/edm:begin:average\":-1.0,\"Agent/edm:begin:normalized\":-1.0,\"Agent/edm:end:sum\":-1.0,\"Agent/edm:end:average\":-1.0,\"Agent/edm:end:normalized\":-1.0,\"Agent/edm:hasMet:sum\":-1.0,\"Agent/edm:hasMet:average\":-1.0,\"Agent/edm:hasMet:normalized\":-1.0,\"Agent/edm:isRelatedTo:sum\":-1.0,\"Agent/edm:isRelatedTo:average\":-1.0,\"Agent/edm:isRelatedTo:normalized\":-1.0,\"Agent/owl:sameAs:sum\":-1.0,\"Agent/owl:sameAs:average\":-1.0,\"Agent/owl:sameAs:normalized\":-1.0,\"Agent/foaf:name:sum\":-1.0,\"Agent/foaf:name:average\":-1.0,\"Agent/foaf:name:normalized\":-1.0,\"Agent/dc:date:sum\":-1.0,\"Agent/dc:date:average\":-1.0,\"Agent/dc:date:normalized\":-1.0,\"Agent/dc:identifier:sum\":-1.0,\"Agent/dc:identifier:average\":-1.0,\"Agent/dc:identifier:normalized\":-1.0,\"Agent/rdaGr2:dateOfBirth:sum\":-1.0,\"Agent/rdaGr2:dateOfBirth:average\":-1.0,\"Agent/rdaGr2:dateOfBirth:normalized\":-1.0,\"Agent/rdaGr2:placeOfBirth:sum\":-1.0,\"Agent/rdaGr2:placeOfBirth:average\":-1.0,\"Agent/rdaGr2:placeOfBirth:normalized\":-1.0,\"Agent/rdaGr2:dateOfDeath:sum\":-1.0,\"Agent/rdaGr2:dateOfDeath:average\":-1.0,\"Agent/rdaGr2:dateOfDeath:normalized\":-1.0,\"Agent/rdaGr2:placeOfDeath:sum\":-1.0,\"Agent/rdaGr2:placeOfDeath:average\":-1.0,\"Agent/rdaGr2:placeOfDeath:normalized\":-1.0,\"Agent/rdaGr2:dateOfEstablishment:sum\":-1.0,\"Agent/rdaGr2:dateOfEstablishment:average\":-1.0,\"Agent/rdaGr2:dateOfEstablishment:normalized\":-1.0,\"Agent/rdaGr2:dateOfTermination:sum\":-1.0,\"Agent/rdaGr2:dateOfTermination:average\":-1.0,\"Agent/rdaGr2:dateOfTermination:normalized\":-1.0,\"Agent/rdaGr2:gender:sum\":-1.0,\"Agent/rdaGr2:gender:average\":-1.0,\"Agent/rdaGr2:gender:normalized\":-1.0,\"Agent/rdaGr2:professionOrOccupation:sum\":1.0,\"Agent/rdaGr2:professionOrOccupation:average\":0.5,\"Agent/rdaGr2:professionOrOccupation:normalized\":0.333333,\"Agent/rdaGr2:biographicalInformation:sum\":-1.0,\"Agent/rdaGr2:biographicalInformation:average\":-1.0,\"Agent/rdaGr2:biographicalInformation:normalized\":-1.0,\"Agent/skos:prefLabel:sum\":0.0,\"Agent/skos:prefLabel:average\":0.0,\"Agent/skos:prefLabel:normalized\":0.0,\"Agent/skos:altLabel:sum\":-1.0,\"Agent/skos:altLabel:average\":-1.0,\"Agent/skos:altLabel:normalized\":-1.0,\"Agent/skos:note:sum\":-1.0,\"Agent/skos:note:average\":-1.0,\"Agent/skos:note:normalized\":-1.0,\"Timespan/edm:begin:sum\":-1.0,\"Timespan/edm:begin:average\":-1.0,\"Timespan/edm:begin:normalized\":-1.0,\"Timespan/edm:end:sum\":-1.0,\"Timespan/edm:end:average\":-1.0,\"Timespan/edm:end:normalized\":-1.0,\"Timespan/dcterms:isPartOf:sum\":-1.0,\"Timespan/dcterms:isPartOf:average\":-1.0,\"Timespan/dcterms:isPartOf:normalized\":-1.0,\"Timespan/dcterms:hasPart:sum\":-1.0,\"Timespan/dcterms:hasPart:average\":-1.0,\"Timespan/dcterms:hasPart:normalized\":-1.0,\"Timespan/edm:isNextInSequence:sum\":-1.0,\"Timespan/edm:isNextInSequence:average\":-1.0,\"Timespan/edm:isNextInSequence:normalized\":-1.0,\"Timespan/owl:sameAs:sum\":-1.0,\"Timespan/owl:sameAs:average\":-1.0,\"Timespan/owl:sameAs:normalized\":-1.0,\"Timespan/skos:prefLabel:sum\":-1.0,\"Timespan/skos:prefLabel:average\":-1.0,\"Timespan/skos:prefLabel:normalized\":-1.0,\"Timespan/skos:altLabel:sum\":-1.0,\"Timespan/skos:altLabel:average\":-1.0,\"Timespan/skos:altLabel:normalized\":-1.0,\"Timespan/skos:note:sum\":-1.0,\"Timespan/skos:note:average\":-1.0,\"Timespan/skos:note:normalized\":-1.0,\"Concept/skos:broader:sum\":3.0,\"Concept/skos:broader:average\":1.0,\"Concept/skos:broader:normalized\":0.5,\"Concept/skos:narrower:sum\":3.0,\"Concept/skos:narrower:average\":1.0,\"Concept/skos:narrower:normalized\":0.5,\"Concept/skos:related:sum\":-1.0,\"Concept/skos:related:average\":-1.0,\"Concept/skos:related:normalized\":-1.0,\"Concept/skos:broadMatch:sum\":-1.0,\"Concept/skos:broadMatch:average\":-1.0,\"Concept/skos:broadMatch:normalized\":-1.0,\"Concept/skos:narrowMatch:sum\":-1.0,\"Concept/skos:narrowMatch:average\":-1.0,\"Concept/skos:narrowMatch:normalized\":-1.0,\"Concept/skos:relatedMatch:sum\":-1.0,\"Concept/skos:relatedMatch:average\":-1.0,\"Concept/skos:relatedMatch:normalized\":-1.0,\"Concept/skos:exactMatch:sum\":-1.0,\"Concept/skos:exactMatch:average\":-1.0,\"Concept/skos:exactMatch:normalized\":-1.0,\"Concept/skos:closeMatch:sum\":-1.0,\"Concept/skos:closeMatch:average\":-1.0,\"Concept/skos:closeMatch:normalized\":-1.0,\"Concept/skos:notation:sum\":-1.0,\"Concept/skos:notation:average\":-1.0,\"Concept/skos:notation:normalized\":-1.0,\"Concept/skos:inScheme:sum\":-1.0,\"Concept/skos:inScheme:average\":-1.0,\"Concept/skos:inScheme:normalized\":-1.0,\"Concept/skos:prefLabel:sum\":2.3,\"Concept/skos:prefLabel:average\":0.766667,\"Concept/skos:prefLabel:normalized\":0.433962,\"Concept/skos:altLabel:sum\":2.3,\"Concept/skos:altLabel:average\":0.766667,\"Concept/skos:altLabel:normalized\":0.433962,\"Concept/skos:note:sum\":0.0,\"Concept/skos:note:average\":0.0,\"Concept/skos:note:normalized\":0.0,\"multilingualitySaturation:sum\":46.0,\"multilingualitySaturation:average\":1.4375,\"multilingualitySaturation:normalized\":0.589744", csv);

		csv = calculator.getCsv(false, CompressionLevel.NORMAL);
		assertEquals("1.0,1.0,0.5,-1.0,-1.0,-1.0,1.0,1.0,0.5,0.0,0.0,0.0,0.0,0.0,0.0,-1.0,-1.0,-1.0,3.0,3.0,0.75,0.0,0.0,0.0,0.0,0.0,0.0,2.0,2.0,0.666667,-1.0,-1.0,-1.0,0.0,0.0,0.0,3.0,3.0,0.75,-1.0,-1.0,-1.0,0.0,0.0,0.0,-1.0,-1.0,-1.0,2.0,2.0,0.666667,-1.0,-1.0,-1.0,1.0,1.0,0.5,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,3.0,3.0,0.75,-1.0,-1.0,-1.0,2.0,2.0,0.666667,-1.0,-1.0,-1.0,0.0,0.0,0.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,3.0,3.0,0.75,3.0,3.0,0.75,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,0.0,0.0,0.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,3.0,3.0,0.75,0.0,0.0,0.0,0.0,0.0,0.0,2.0,2.0,0.666667,-1.0,-1.0,-1.0,3.0,3.0,0.75,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,2.4,2.4,0.705882,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,0.5,0.333333,-1.0,-1.0,-1.0,0.0,0.0,0.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,3.0,1.0,0.5,3.0,1.0,0.5,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,2.3,0.766667,0.433962,2.3,0.766667,0.433962,0.0,0.0,0.0,46.0,1.4375,0.589744", csv);

		csv = calculator.getCsv(false, CompressionLevel.WITHOUT_TRAILING_ZEROS);
		assertEquals("1,1,0.5,-1,-1,-1,1,1,0.5,0,0,0,0,0,0,-1,-1,-1,3,3,0.75,0,0,0,0,0,0,2,2,0.666667,-1,-1,-1,0,0,0,3,3,0.75,-1,-1,-1,0,0,0,-1,-1,-1,2,2,0.666667,-1,-1,-1,1,1,0.5,-1,-1,-1,-1,-1,-1,3,3,0.75,-1,-1,-1,2,2,0.666667,-1,-1,-1,0,0,0,-1,-1,-1,-1,-1,-1,3,3,0.75,3,3,0.75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,3,0.75,0,0,0,0,0,0,2,2,0.666667,-1,-1,-1,3,3,0.75,-1,-1,-1,-1,-1,-1,-1,-1,-1,2.4,2.4,0.705882,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,0.5,0.333333,-1,-1,-1,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,1,0.5,3,1,0.5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2.3,0.766667,0.433962,2.3,0.766667,0.433962,0,0,0,46,1.4375,0.589744", csv);
	}

	// @Test
	public void testComplexResponseSkipped() throws URISyntaxException, IOException {
		EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhXmlSchema());
		calculator.setSkippedEntryChecker(new EdmSkippedEntryChecker());
		calculator.setResultType(EdmMultilingualitySaturationCalculator.ResultTypes.EXTENDED);
		JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("issue-examples/issue8-multiple-same-languages.json"));
		calculator.measure(cache);

		String csv = calculator.getCsv(true, CompressionLevel.NORMAL);
		assertEquals("\"Proxy/dc:title:sum\":1.0,\"Proxy/dc:title:average\":1.0,\"Proxy/dc:title:normalized\":0.5,\"Proxy/dcterms:alternative:sum\":-1.0,\"Proxy/dcterms:alternative:average\":-1.0,\"Proxy/dcterms:alternative:normalized\":-1.0,\"Proxy/dc:description:sum\":1.0,\"Proxy/dc:description:average\":1.0,\"Proxy/dc:description:normalized\":0.5,\"Proxy/dc:creator:sum\":0.0,\"Proxy/dc:creator:average\":0.0,\"Proxy/dc:creator:normalized\":0.0,\"Proxy/dc:publisher:sum\":0.0,\"Proxy/dc:publisher:average\":0.0,\"Proxy/dc:publisher:normalized\":0.0,\"Proxy/dc:contributor:sum\":-1.0,\"Proxy/dc:contributor:average\":-1.0,\"Proxy/dc:contributor:normalized\":-1.0,\"Proxy/dc:type:sum\":3.0,\"Proxy/dc:type:average\":3.0,\"Proxy/dc:type:normalized\":0.75,\"Proxy/dc:identifier:sum\":0.0,\"Proxy/dc:identifier:average\":0.0,\"Proxy/dc:identifier:normalized\":0.0,\"Proxy/dc:language:sum\":0.0,\"Proxy/dc:language:average\":0.0,\"Proxy/dc:language:normalized\":0.0,\"Proxy/dc:coverage:sum\":2.0,\"Proxy/dc:coverage:average\":2.0,\"Proxy/dc:coverage:normalized\":0.666667,\"Proxy/dcterms:temporal:sum\":-1.0,\"Proxy/dcterms:temporal:average\":-1.0,\"Proxy/dcterms:temporal:normalized\":-1.0,\"Proxy/dcterms:spatial:sum\":0.0,\"Proxy/dcterms:spatial:average\":0.0,\"Proxy/dcterms:spatial:normalized\":0.0,\"Proxy/dc:subject:sum\":3.0,\"Proxy/dc:subject:average\":3.0,\"Proxy/dc:subject:normalized\":0.75,\"Proxy/dc:date:sum\":-1.0,\"Proxy/dc:date:average\":-1.0,\"Proxy/dc:date:normalized\":-1.0,\"Proxy/dcterms:created:sum\":0.0,\"Proxy/dcterms:created:average\":0.0,\"Proxy/dcterms:created:normalized\":0.0,\"Proxy/dcterms:issued:sum\":-1.0,\"Proxy/dcterms:issued:average\":-1.0,\"Proxy/dcterms:issued:normalized\":-1.0,\"Proxy/dcterms:extent:sum\":2.0,\"Proxy/dcterms:extent:average\":2.0,\"Proxy/dcterms:extent:normalized\":0.666667,\"Proxy/dcterms:medium:sum\":-1.0,\"Proxy/dcterms:medium:average\":-1.0,\"Proxy/dcterms:medium:normalized\":-1.0,\"Proxy/dcterms:provenance:sum\":1.0,\"Proxy/dcterms:provenance:average\":1.0,\"Proxy/dcterms:provenance:normalized\":0.5,\"Proxy/dcterms:hasPart:sum\":-1.0,\"Proxy/dcterms:hasPart:average\":-1.0,\"Proxy/dcterms:hasPart:normalized\":-1.0,\"Proxy/dcterms:isPartOf:sum\":-1.0,\"Proxy/dcterms:isPartOf:average\":-1.0,\"Proxy/dcterms:isPartOf:normalized\":-1.0,\"Proxy/dc:format:sum\":3.0,\"Proxy/dc:format:average\":3.0,\"Proxy/dc:format:normalized\":0.75,\"Proxy/dc:source:sum\":-1.0,\"Proxy/dc:source:average\":-1.0,\"Proxy/dc:source:normalized\":-1.0,\"Proxy/dc:rights:sum\":2.0,\"Proxy/dc:rights:average\":2.0,\"Proxy/dc:rights:normalized\":0.666667,\"Proxy/dc:relation:sum\":-1.0,\"Proxy/dc:relation:average\":-1.0,\"Proxy/dc:relation:normalized\":-1.0,\"Proxy/edm:europeanaProxy:sum\":0.0,\"Proxy/edm:europeanaProxy:average\":0.0,\"Proxy/edm:europeanaProxy:normalized\":0.0,\"Proxy/edm:year:sum\":-1.0,\"Proxy/edm:year:average\":-1.0,\"Proxy/edm:year:normalized\":-1.0,\"Proxy/edm:userTag:sum\":-1.0,\"Proxy/edm:userTag:average\":-1.0,\"Proxy/edm:userTag:normalized\":-1.0,\"Proxy/ore:proxyIn:sum\":3.0,\"Proxy/ore:proxyIn:average\":3.0,\"Proxy/ore:proxyIn:normalized\":0.75,\"Proxy/ore:proxyFor:sum\":3.0,\"Proxy/ore:proxyFor:average\":3.0,\"Proxy/ore:proxyFor:normalized\":0.75,\"Proxy/dcterms:conformsTo:sum\":-1.0,\"Proxy/dcterms:conformsTo:average\":-1.0,\"Proxy/dcterms:conformsTo:normalized\":-1.0,\"Proxy/dcterms:hasFormat:sum\":-1.0,\"Proxy/dcterms:hasFormat:average\":-1.0,\"Proxy/dcterms:hasFormat:normalized\":-1.0,\"Proxy/dcterms:hasVersion:sum\":-1.0,\"Proxy/dcterms:hasVersion:average\":-1.0,\"Proxy/dcterms:hasVersion:normalized\":-1.0,\"Proxy/dcterms:isFormatOf:sum\":-1.0,\"Proxy/dcterms:isFormatOf:average\":-1.0,\"Proxy/dcterms:isFormatOf:normalized\":-1.0,\"Proxy/dcterms:isReferencedBy:sum\":0.0,\"Proxy/dcterms:isReferencedBy:average\":0.0,\"Proxy/dcterms:isReferencedBy:normalized\":0.0,\"Proxy/dcterms:isReplacedBy:sum\":-1.0,\"Proxy/dcterms:isReplacedBy:average\":-1.0,\"Proxy/dcterms:isReplacedBy:normalized\":-1.0,\"Proxy/dcterms:isRequiredBy:sum\":-1.0,\"Proxy/dcterms:isRequiredBy:average\":-1.0,\"Proxy/dcterms:isRequiredBy:normalized\":-1.0,\"Proxy/dcterms:isVersionOf:sum\":-1.0,\"Proxy/dcterms:isVersionOf:average\":-1.0,\"Proxy/dcterms:isVersionOf:normalized\":-1.0,\"Proxy/dcterms:references:sum\":-1.0,\"Proxy/dcterms:references:average\":-1.0,\"Proxy/dcterms:references:normalized\":-1.0,\"Proxy/dcterms:replaces:sum\":-1.0,\"Proxy/dcterms:replaces:average\":-1.0,\"Proxy/dcterms:replaces:normalized\":-1.0,\"Proxy/dcterms:requires:sum\":-1.0,\"Proxy/dcterms:requires:average\":-1.0,\"Proxy/dcterms:requires:normalized\":-1.0,\"Proxy/dcterms:tableOfContents:sum\":-1.0,\"Proxy/dcterms:tableOfContents:average\":-1.0,\"Proxy/dcterms:tableOfContents:normalized\":-1.0,\"Proxy/edm:currentLocation:sum\":-1.0,\"Proxy/edm:currentLocation:average\":-1.0,\"Proxy/edm:currentLocation:normalized\":-1.0,\"Proxy/edm:hasMet:sum\":-1.0,\"Proxy/edm:hasMet:average\":-1.0,\"Proxy/edm:hasMet:normalized\":-1.0,\"Proxy/edm:hasType:sum\":-1.0,\"Proxy/edm:hasType:average\":-1.0,\"Proxy/edm:hasType:normalized\":-1.0,\"Proxy/edm:incorporates:sum\":-1.0,\"Proxy/edm:incorporates:average\":-1.0,\"Proxy/edm:incorporates:normalized\":-1.0,\"Proxy/edm:isDerivativeOf:sum\":-1.0,\"Proxy/edm:isDerivativeOf:average\":-1.0,\"Proxy/edm:isDerivativeOf:normalized\":-1.0,\"Proxy/edm:isRelatedTo:sum\":-1.0,\"Proxy/edm:isRelatedTo:average\":-1.0,\"Proxy/edm:isRelatedTo:normalized\":-1.0,\"Proxy/edm:isRepresentationOf:sum\":-1.0,\"Proxy/edm:isRepresentationOf:average\":-1.0,\"Proxy/edm:isRepresentationOf:normalized\":-1.0,\"Proxy/edm:isSimilarTo:sum\":-1.0,\"Proxy/edm:isSimilarTo:average\":-1.0,\"Proxy/edm:isSimilarTo:normalized\":-1.0,\"Proxy/edm:isSuccessorOf:sum\":-1.0,\"Proxy/edm:isSuccessorOf:average\":-1.0,\"Proxy/edm:isSuccessorOf:normalized\":-1.0,\"Proxy/edm:realizes:sum\":-1.0,\"Proxy/edm:realizes:average\":-1.0,\"Proxy/edm:realizes:normalized\":-1.0,\"Proxy/edm:wasPresentAt:sum\":-1.0,\"Proxy/edm:wasPresentAt:average\":-1.0,\"Proxy/edm:wasPresentAt:normalized\":-1.0,\"Aggregation/edm:rights:sum\":3.0,\"Aggregation/edm:rights:average\":3.0,\"Aggregation/edm:rights:normalized\":0.75,\"Aggregation/edm:provider:sum\":0.0,\"Aggregation/edm:provider:average\":0.0,\"Aggregation/edm:provider:normalized\":0.0,\"Aggregation/edm:dataProvider:sum\":0.0,\"Aggregation/edm:dataProvider:average\":0.0,\"Aggregation/edm:dataProvider:normalized\":0.0,\"Aggregation/dc:rights:sum\":2.0,\"Aggregation/dc:rights:average\":2.0,\"Aggregation/dc:rights:normalized\":0.666667,\"Aggregation/edm:ugc:sum\":-1.0,\"Aggregation/edm:ugc:average\":-1.0,\"Aggregation/edm:ugc:normalized\":-1.0,\"Aggregation/edm:aggregatedCHO:sum\":3.0,\"Aggregation/edm:aggregatedCHO:average\":3.0,\"Aggregation/edm:aggregatedCHO:normalized\":0.75,\"Aggregation/edm:intermediateProvider:sum\":-1.0,\"Aggregation/edm:intermediateProvider:average\":-1.0,\"Aggregation/edm:intermediateProvider:normalized\":-1.0,\"Place/dcterms:isPartOf:sum\":-1.0,\"Place/dcterms:isPartOf:average\":-1.0,\"Place/dcterms:isPartOf:normalized\":-1.0,\"Place/dcterms:hasPart:sum\":-1.0,\"Place/dcterms:hasPart:average\":-1.0,\"Place/dcterms:hasPart:normalized\":-1.0,\"Place/skos:prefLabel:sum\":-1.0,\"Place/skos:prefLabel:average\":-1.0,\"Place/skos:prefLabel:normalized\":-1.0,\"Place/skos:altLabel:sum\":-1.0,\"Place/skos:altLabel:average\":-1.0,\"Place/skos:altLabel:normalized\":-1.0,\"Place/skos:note:sum\":-1.0,\"Place/skos:note:average\":-1.0,\"Place/skos:note:normalized\":-1.0,\"Agent/edm:begin:sum\":-1.0,\"Agent/edm:begin:average\":-1.0,\"Agent/edm:begin:normalized\":-1.0,\"Agent/edm:end:sum\":-1.0,\"Agent/edm:end:average\":-1.0,\"Agent/edm:end:normalized\":-1.0,\"Agent/edm:hasMet:sum\":-1.0,\"Agent/edm:hasMet:average\":-1.0,\"Agent/edm:hasMet:normalized\":-1.0,\"Agent/edm:isRelatedTo:sum\":-1.0,\"Agent/edm:isRelatedTo:average\":-1.0,\"Agent/edm:isRelatedTo:normalized\":-1.0,\"Agent/owl:sameAs:sum\":-1.0,\"Agent/owl:sameAs:average\":-1.0,\"Agent/owl:sameAs:normalized\":-1.0,\"Agent/foaf:name:sum\":-1.0,\"Agent/foaf:name:average\":-1.0,\"Agent/foaf:name:normalized\":-1.0,\"Agent/dc:date:sum\":-1.0,\"Agent/dc:date:average\":-1.0,\"Agent/dc:date:normalized\":-1.0,\"Agent/dc:identifier:sum\":-1.0,\"Agent/dc:identifier:average\":-1.0,\"Agent/dc:identifier:normalized\":-1.0,\"Agent/rdaGr2:dateOfBirth:sum\":-1.0,\"Agent/rdaGr2:dateOfBirth:average\":-1.0,\"Agent/rdaGr2:dateOfBirth:normalized\":-1.0,\"Agent/rdaGr2:placeOfBirth:sum\":-1.0,\"Agent/rdaGr2:placeOfBirth:average\":-1.0,\"Agent/rdaGr2:placeOfBirth:normalized\":-1.0,\"Agent/rdaGr2:dateOfDeath:sum\":-1.0,\"Agent/rdaGr2:dateOfDeath:average\":-1.0,\"Agent/rdaGr2:dateOfDeath:normalized\":-1.0,\"Agent/rdaGr2:placeOfDeath:sum\":-1.0,\"Agent/rdaGr2:placeOfDeath:average\":-1.0,\"Agent/rdaGr2:placeOfDeath:normalized\":-1.0,\"Agent/rdaGr2:dateOfEstablishment:sum\":-1.0,\"Agent/rdaGr2:dateOfEstablishment:average\":-1.0,\"Agent/rdaGr2:dateOfEstablishment:normalized\":-1.0,\"Agent/rdaGr2:dateOfTermination:sum\":-1.0,\"Agent/rdaGr2:dateOfTermination:average\":-1.0,\"Agent/rdaGr2:dateOfTermination:normalized\":-1.0,\"Agent/rdaGr2:gender:sum\":-1.0,\"Agent/rdaGr2:gender:average\":-1.0,\"Agent/rdaGr2:gender:normalized\":-1.0,\"Agent/rdaGr2:professionOrOccupation:sum\":1.0,\"Agent/rdaGr2:professionOrOccupation:average\":0.5,\"Agent/rdaGr2:professionOrOccupation:normalized\":0.333333,\"Agent/rdaGr2:biographicalInformation:sum\":-1.0,\"Agent/rdaGr2:biographicalInformation:average\":-1.0,\"Agent/rdaGr2:biographicalInformation:normalized\":-1.0,\"Agent/skos:prefLabel:sum\":0.0,\"Agent/skos:prefLabel:average\":0.0,\"Agent/skos:prefLabel:normalized\":0.0,\"Agent/skos:altLabel:sum\":-1.0,\"Agent/skos:altLabel:average\":-1.0,\"Agent/skos:altLabel:normalized\":-1.0,\"Agent/skos:note:sum\":-1.0,\"Agent/skos:note:average\":-1.0,\"Agent/skos:note:normalized\":-1.0,\"Timespan/edm:begin:sum\":-1.0,\"Timespan/edm:begin:average\":-1.0,\"Timespan/edm:begin:normalized\":-1.0,\"Timespan/edm:end:sum\":-1.0,\"Timespan/edm:end:average\":-1.0,\"Timespan/edm:end:normalized\":-1.0,\"Timespan/dcterms:isPartOf:sum\":-1.0,\"Timespan/dcterms:isPartOf:average\":-1.0,\"Timespan/dcterms:isPartOf:normalized\":-1.0,\"Timespan/dcterms:hasPart:sum\":-1.0,\"Timespan/dcterms:hasPart:average\":-1.0,\"Timespan/dcterms:hasPart:normalized\":-1.0,\"Timespan/edm:isNextInSequence:sum\":-1.0,\"Timespan/edm:isNextInSequence:average\":-1.0,\"Timespan/edm:isNextInSequence:normalized\":-1.0,\"Timespan/owl:sameAs:sum\":-1.0,\"Timespan/owl:sameAs:average\":-1.0,\"Timespan/owl:sameAs:normalized\":-1.0,\"Timespan/skos:prefLabel:sum\":-1.0,\"Timespan/skos:prefLabel:average\":-1.0,\"Timespan/skos:prefLabel:normalized\":-1.0,\"Timespan/skos:altLabel:sum\":-1.0,\"Timespan/skos:altLabel:average\":-1.0,\"Timespan/skos:altLabel:normalized\":-1.0,\"Timespan/skos:note:sum\":-1.0,\"Timespan/skos:note:average\":-1.0,\"Timespan/skos:note:normalized\":-1.0,\"Concept/skos:broader:sum\":3.0,\"Concept/skos:broader:average\":1.0,\"Concept/skos:broader:normalized\":0.5,\"Concept/skos:narrower:sum\":3.0,\"Concept/skos:narrower:average\":1.0,\"Concept/skos:narrower:normalized\":0.5,\"Concept/skos:related:sum\":-1.0,\"Concept/skos:related:average\":-1.0,\"Concept/skos:related:normalized\":-1.0,\"Concept/skos:broadMatch:sum\":-1.0,\"Concept/skos:broadMatch:average\":-1.0,\"Concept/skos:broadMatch:normalized\":-1.0,\"Concept/skos:narrowMatch:sum\":-1.0,\"Concept/skos:narrowMatch:average\":-1.0,\"Concept/skos:narrowMatch:normalized\":-1.0,\"Concept/skos:relatedMatch:sum\":-1.0,\"Concept/skos:relatedMatch:average\":-1.0,\"Concept/skos:relatedMatch:normalized\":-1.0,\"Concept/skos:exactMatch:sum\":-1.0,\"Concept/skos:exactMatch:average\":-1.0,\"Concept/skos:exactMatch:normalized\":-1.0,\"Concept/skos:closeMatch:sum\":-1.0,\"Concept/skos:closeMatch:average\":-1.0,\"Concept/skos:closeMatch:normalized\":-1.0,\"Concept/skos:notation:sum\":-1.0,\"Concept/skos:notation:average\":-1.0,\"Concept/skos:notation:normalized\":-1.0,\"Concept/skos:inScheme:sum\":-1.0,\"Concept/skos:inScheme:average\":-1.0,\"Concept/skos:inScheme:normalized\":-1.0,\"Concept/skos:prefLabel:sum\":2.3,\"Concept/skos:prefLabel:average\":0.766667,\"Concept/skos:prefLabel:normalized\":0.433962,\"Concept/skos:altLabel:sum\":2.3,\"Concept/skos:altLabel:average\":0.766667,\"Concept/skos:altLabel:normalized\":0.433962,\"Concept/skos:note:sum\":0.0,\"Concept/skos:note:average\":0.0,\"Concept/skos:note:normalized\":0.0,\"multilingualitySaturation:sum\":43.6,\"multilingualitySaturation:average\":1.406452,\"multilingualitySaturation:normalized\":0.58445", csv);

		csv = calculator.getCsv(false, CompressionLevel.NORMAL);
		assertEquals("1.0,1.0,0.5,-1.0,-1.0,-1.0,1.0,1.0,0.5,0.0,0.0,0.0,0.0,0.0,0.0,-1.0,-1.0,-1.0,3.0,3.0,0.75,0.0,0.0,0.0,0.0,0.0,0.0,2.0,2.0,0.666667,-1.0,-1.0,-1.0,0.0,0.0,0.0,3.0,3.0,0.75,-1.0,-1.0,-1.0,0.0,0.0,0.0,-1.0,-1.0,-1.0,2.0,2.0,0.666667,-1.0,-1.0,-1.0,1.0,1.0,0.5,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,3.0,3.0,0.75,-1.0,-1.0,-1.0,2.0,2.0,0.666667,-1.0,-1.0,-1.0,0.0,0.0,0.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,3.0,3.0,0.75,3.0,3.0,0.75,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,0.0,0.0,0.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,3.0,3.0,0.75,0.0,0.0,0.0,0.0,0.0,0.0,2.0,2.0,0.666667,-1.0,-1.0,-1.0,3.0,3.0,0.75,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,0.5,0.333333,-1.0,-1.0,-1.0,0.0,0.0,0.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,3.0,1.0,0.5,3.0,1.0,0.5,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,2.3,0.766667,0.433962,2.3,0.766667,0.433962,0.0,0.0,0.0,43.6,1.406452,0.58445", csv);

		csv = calculator.getCsv(false, CompressionLevel.WITHOUT_TRAILING_ZEROS);
		assertEquals("1,1,0.5,-1,-1,-1,1,1,0.5,0,0,0,0,0,0,-1,-1,-1,3,3,0.75,0,0,0,0,0,0,2,2,0.666667,-1,-1,-1,0,0,0,3,3,0.75,-1,-1,-1,0,0,0,-1,-1,-1,2,2,0.666667,-1,-1,-1,1,1,0.5,-1,-1,-1,-1,-1,-1,3,3,0.75,-1,-1,-1,2,2,0.666667,-1,-1,-1,0,0,0,-1,-1,-1,-1,-1,-1,3,3,0.75,3,3,0.75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,3,0.75,0,0,0,0,0,0,2,2,0.666667,-1,-1,-1,3,3,0.75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,0.5,0.333333,-1,-1,-1,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,1,0.5,3,1,0.5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2.3,0.766667,0.433962,2.3,0.766667,0.433962,0,0,0,43.6,1.406452,0.58445", csv);
	}

}
