package de.gwdg.europeanaqa.api.calculator;

import de.gwdg.europeanaqa.api.model.MultilingualityResultType;
import de.gwdg.metadataqa.api.model.JsonPathCache;
import de.gwdg.metadataqa.api.schema.EdmOaiPmhJsonSchema;
import de.gwdg.metadataqa.api.util.CompressionLevel;
import de.gwdg.metadataqa.api.util.FileUtils;
import java.io.IOException;
import java.net.URISyntaxException;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import org.apache.commons.lang3.StringUtils;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import static org.junit.Assert.*;

/**
 *
 * @author Péter Király <peter.kiraly at gwdg.de>
 */
public class EdmMultilingualitySaturationCalculatorTest {

  EdmMultilingualitySaturationCalculator calculator;

  public EdmMultilingualitySaturationCalculatorTest() {
  }

  @BeforeClass
  public static void setUpClass() {
  }

  @AfterClass
  public static void tearDownClass() {
  }

  @Before
  public void setUp() {
    calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhJsonSchema());
  }

  @After
  public void tearDown() {
  }

  @Test
  public void testConstructor() {
    EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhJsonSchema());
    assertNotNull(calculator);
  }

  @Test
  public void testPaths() throws URISyntaxException, IOException {
    JsonPathCache cache = new JsonPathCache(
        FileUtils.readFirstLine("general/test.json"));
    String path = "$.['skos:Concept']"
        + "[?(@['@about'] == 'http://dbpedia.org/resource/Portrait')]"
        + "['skos:prefLabel']";
    assertEquals(12, cache.get(path).size());
  }

  @Test
  public void selectEntityById() {
    String path = calculator.selectEntityById(
        "$.['skos:Concept']", "http://dbpedia.org/resource/Pierre-Paul_Prud'hon");

    String expected = "$.['skos:Concept']"
        + "[?(@['@about'] == 'http://dbpedia.org/resource/Pierre-Paul_Prud\\'hon')]"
        + "['skos:prefLabel']";
    assertEquals(expected, path);
  }

  @Test
  public void testMeasure() throws URISyntaxException, IOException {
    JsonPathCache cache = new JsonPathCache(
        FileUtils.readFirstLine("general/test.json"));
    calculator.measure(cache);
    assertNotNull(calculator.getCsv(false, CompressionLevel.NORMAL));
    assertEquals("1.0,1.0,1.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,5.0,2.0,2.5,12.0,12.0,1.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,1.5,12.0,5.0,6.0,12.0,2.0,12.0,18.0,12.0,3.0,1.0,1.5", calculator.getCsv(false, CompressionLevel.NORMAL));
  }

  @Test
  public void testMeasurePlace() throws URISyntaxException, IOException {
    JsonPathCache cache = new JsonPathCache(
        FileUtils.readFirstLine("general/test-place.json"));
    calculator.measure(cache);
    assertNotNull(calculator.getCsv(false, CompressionLevel.NORMAL));
    assertEquals("0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,115.0,98.0,1.173469,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,98.0,98.0,0.0,115.0,0.0,98.0,115.0,98.0,0.0,1.173469,1.173469", calculator.getCsv(false, CompressionLevel.NORMAL));
  }

  @Test
  public void testMeasureSkipped() throws URISyntaxException, IOException {
    EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhJsonSchema());
    calculator.setSkippedEntryChecker(new EdmSkippedEntryChecker());
    JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("general/test.json"));
    calculator.measure(cache);
    assertNotNull(calculator.getCsv(false, CompressionLevel.NORMAL));
    assertEquals("1.0,1.0,1.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,5.0,2.0,2.5,12.0,12.0,1.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,1.5,12.0,5.0,6.0,12.0,2.0,12.0,18.0,12.0,3.0,1.0,1.5", calculator.getCsv(false, CompressionLevel.NORMAL));

    cache = new JsonPathCache(FileUtils.readFirstLine("general/test-place.json"));
    calculator.measure(cache);
    assertNotNull(calculator.getCsv(false, CompressionLevel.NORMAL));
    assertEquals("0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,115.0,98.0,1.173469,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,98.0,98.0,0.0,115.0,0.0,98.0,115.0,98.0,0.0,1.173469,1.173469", calculator.getCsv(false, CompressionLevel.NORMAL));
  }

  @Test
  public void testCountersGetLanguageMap() throws URISyntaxException, IOException {
    EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhJsonSchema());
    JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("general/test.json"));
    calculator.measure(cache);
    String languages = calculator.getCsv(true, CompressionLevel.NORMAL);
    assertNotNull(languages);
    assertEquals(
        "\"providerProxy/dc:title/taggedLiterals\":1.0,\"providerProxy/dc:title/languages\":1.0,\"providerProxy/dc:title/literalsPerLanguage\":1.0,\"europeanaProxy/dc:title/taggedLiterals\":-1.0,\"europeanaProxy/dc:title/languages\":0.0,\"europeanaProxy/dc:title/literalsPerLanguage\":0.0,\"providerProxy/dcterms:alternative/taggedLiterals\":-1.0,\"providerProxy/dcterms:alternative/languages\":0.0,\"providerProxy/dcterms:alternative/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:alternative/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:alternative/languages\":0.0,\"europeanaProxy/dcterms:alternative/literalsPerLanguage\":0.0,\"providerProxy/dc:description/taggedLiterals\":-1.0,\"providerProxy/dc:description/languages\":0.0,\"providerProxy/dc:description/literalsPerLanguage\":0.0,\"europeanaProxy/dc:description/taggedLiterals\":-1.0,\"europeanaProxy/dc:description/languages\":0.0,\"europeanaProxy/dc:description/literalsPerLanguage\":0.0,\"providerProxy/dc:creator/taggedLiterals\":-1.0,\"providerProxy/dc:creator/languages\":0.0,\"providerProxy/dc:creator/literalsPerLanguage\":0.0,\"europeanaProxy/dc:creator/taggedLiterals\":-1.0,\"europeanaProxy/dc:creator/languages\":0.0,\"europeanaProxy/dc:creator/literalsPerLanguage\":0.0,\"providerProxy/dc:publisher/taggedLiterals\":-1.0,\"providerProxy/dc:publisher/languages\":0.0,\"providerProxy/dc:publisher/literalsPerLanguage\":0.0,\"europeanaProxy/dc:publisher/taggedLiterals\":-1.0,\"europeanaProxy/dc:publisher/languages\":0.0,\"europeanaProxy/dc:publisher/literalsPerLanguage\":0.0,\"providerProxy/dc:contributor/taggedLiterals\":-1.0,\"providerProxy/dc:contributor/languages\":0.0,\"providerProxy/dc:contributor/literalsPerLanguage\":0.0,\"europeanaProxy/dc:contributor/taggedLiterals\":-1.0,\"europeanaProxy/dc:contributor/languages\":0.0,\"europeanaProxy/dc:contributor/literalsPerLanguage\":0.0,\"providerProxy/dc:type/taggedLiterals\":0.0,\"providerProxy/dc:type/languages\":0.0,\"providerProxy/dc:type/literalsPerLanguage\":0.0,\"europeanaProxy/dc:type/taggedLiterals\":-1.0,\"europeanaProxy/dc:type/languages\":0.0,\"europeanaProxy/dc:type/literalsPerLanguage\":0.0,\"providerProxy/dc:identifier/taggedLiterals\":0.0,\"providerProxy/dc:identifier/languages\":0.0,\"providerProxy/dc:identifier/literalsPerLanguage\":0.0,\"europeanaProxy/dc:identifier/taggedLiterals\":-1.0,\"europeanaProxy/dc:identifier/languages\":0.0,\"europeanaProxy/dc:identifier/literalsPerLanguage\":0.0,\"providerProxy/dc:language/taggedLiterals\":-1.0,\"providerProxy/dc:language/languages\":0.0,\"providerProxy/dc:language/literalsPerLanguage\":0.0,\"europeanaProxy/dc:language/taggedLiterals\":-1.0,\"europeanaProxy/dc:language/languages\":0.0,\"europeanaProxy/dc:language/literalsPerLanguage\":0.0,\"providerProxy/dc:coverage/taggedLiterals\":-1.0,\"providerProxy/dc:coverage/languages\":0.0,\"providerProxy/dc:coverage/literalsPerLanguage\":0.0,\"europeanaProxy/dc:coverage/taggedLiterals\":-1.0,\"europeanaProxy/dc:coverage/languages\":0.0,\"europeanaProxy/dc:coverage/literalsPerLanguage\":0.0,\"providerProxy/dcterms:temporal/taggedLiterals\":-1.0,\"providerProxy/dcterms:temporal/languages\":0.0,\"providerProxy/dcterms:temporal/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:temporal/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:temporal/languages\":0.0,\"europeanaProxy/dcterms:temporal/literalsPerLanguage\":0.0,\"providerProxy/dcterms:spatial/taggedLiterals\":-1.0,\"providerProxy/dcterms:spatial/languages\":0.0,\"providerProxy/dcterms:spatial/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:spatial/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:spatial/languages\":0.0,\"europeanaProxy/dcterms:spatial/literalsPerLanguage\":0.0,\"providerProxy/dc:subject/taggedLiterals\":5.0,\"providerProxy/dc:subject/languages\":2.0,\"providerProxy/dc:subject/literalsPerLanguage\":2.5,\"europeanaProxy/dc:subject/taggedLiterals\":12.0,\"europeanaProxy/dc:subject/languages\":12.0,\"europeanaProxy/dc:subject/literalsPerLanguage\":1.0,\"providerProxy/dc:date/taggedLiterals\":-1.0,\"providerProxy/dc:date/languages\":0.0,\"providerProxy/dc:date/literalsPerLanguage\":0.0,\"europeanaProxy/dc:date/taggedLiterals\":-1.0,\"europeanaProxy/dc:date/languages\":0.0,\"europeanaProxy/dc:date/literalsPerLanguage\":0.0,\"providerProxy/dcterms:created/taggedLiterals\":-1.0,\"providerProxy/dcterms:created/languages\":0.0,\"providerProxy/dcterms:created/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:created/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:created/languages\":0.0,\"europeanaProxy/dcterms:created/literalsPerLanguage\":0.0,\"providerProxy/dcterms:issued/taggedLiterals\":-1.0,\"providerProxy/dcterms:issued/languages\":0.0,\"providerProxy/dcterms:issued/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:issued/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:issued/languages\":0.0,\"europeanaProxy/dcterms:issued/literalsPerLanguage\":0.0,\"providerProxy/dcterms:extent/taggedLiterals\":-1.0,\"providerProxy/dcterms:extent/languages\":0.0,\"providerProxy/dcterms:extent/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:extent/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:extent/languages\":0.0,\"europeanaProxy/dcterms:extent/literalsPerLanguage\":0.0,\"providerProxy/dcterms:medium/taggedLiterals\":-1.0,\"providerProxy/dcterms:medium/languages\":0.0,\"providerProxy/dcterms:medium/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:medium/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:medium/languages\":0.0,\"europeanaProxy/dcterms:medium/literalsPerLanguage\":0.0,\"providerProxy/dcterms:provenance/taggedLiterals\":-1.0,\"providerProxy/dcterms:provenance/languages\":0.0,\"providerProxy/dcterms:provenance/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:provenance/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:provenance/languages\":0.0,\"europeanaProxy/dcterms:provenance/literalsPerLanguage\":0.0,\"providerProxy/dcterms:hasPart/taggedLiterals\":-1.0,\"providerProxy/dcterms:hasPart/languages\":0.0,\"providerProxy/dcterms:hasPart/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:hasPart/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:hasPart/languages\":0.0,\"europeanaProxy/dcterms:hasPart/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isPartOf/taggedLiterals\":0.0,\"providerProxy/dcterms:isPartOf/languages\":0.0,\"providerProxy/dcterms:isPartOf/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isPartOf/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isPartOf/languages\":0.0,\"europeanaProxy/dcterms:isPartOf/literalsPerLanguage\":0.0,\"providerProxy/dc:format/taggedLiterals\":-1.0,\"providerProxy/dc:format/languages\":0.0,\"providerProxy/dc:format/literalsPerLanguage\":0.0,\"europeanaProxy/dc:format/taggedLiterals\":-1.0,\"europeanaProxy/dc:format/languages\":0.0,\"europeanaProxy/dc:format/literalsPerLanguage\":0.0,\"providerProxy/dc:source/taggedLiterals\":-1.0,\"providerProxy/dc:source/languages\":0.0,\"providerProxy/dc:source/literalsPerLanguage\":0.0,\"europeanaProxy/dc:source/taggedLiterals\":-1.0,\"europeanaProxy/dc:source/languages\":0.0,\"europeanaProxy/dc:source/literalsPerLanguage\":0.0,\"providerProxy/dc:rights/taggedLiterals\":0.0,\"providerProxy/dc:rights/languages\":0.0,\"providerProxy/dc:rights/literalsPerLanguage\":0.0,\"europeanaProxy/dc:rights/taggedLiterals\":-1.0,\"europeanaProxy/dc:rights/languages\":0.0,\"europeanaProxy/dc:rights/literalsPerLanguage\":0.0,\"providerProxy/dc:relation/taggedLiterals\":-1.0,\"providerProxy/dc:relation/languages\":0.0,\"providerProxy/dc:relation/literalsPerLanguage\":0.0,\"europeanaProxy/dc:relation/taggedLiterals\":-1.0,\"europeanaProxy/dc:relation/languages\":0.0,\"europeanaProxy/dc:relation/literalsPerLanguage\":0.0,\"providerProxy/edm:year/taggedLiterals\":-1.0,\"providerProxy/edm:year/languages\":0.0,\"providerProxy/edm:year/literalsPerLanguage\":0.0,\"europeanaProxy/edm:year/taggedLiterals\":-1.0,\"europeanaProxy/edm:year/languages\":0.0,\"europeanaProxy/edm:year/literalsPerLanguage\":0.0,\"providerProxy/edm:userTag/taggedLiterals\":-1.0,\"providerProxy/edm:userTag/languages\":0.0,\"providerProxy/edm:userTag/literalsPerLanguage\":0.0,\"europeanaProxy/edm:userTag/taggedLiterals\":-1.0,\"europeanaProxy/edm:userTag/languages\":0.0,\"europeanaProxy/edm:userTag/literalsPerLanguage\":0.0,\"providerProxy/dcterms:conformsTo/taggedLiterals\":-1.0,\"providerProxy/dcterms:conformsTo/languages\":0.0,\"providerProxy/dcterms:conformsTo/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:conformsTo/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:conformsTo/languages\":0.0,\"europeanaProxy/dcterms:conformsTo/literalsPerLanguage\":0.0,\"providerProxy/dcterms:hasFormat/taggedLiterals\":0.0,\"providerProxy/dcterms:hasFormat/languages\":0.0,\"providerProxy/dcterms:hasFormat/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:hasFormat/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:hasFormat/languages\":0.0,\"europeanaProxy/dcterms:hasFormat/literalsPerLanguage\":0.0,\"providerProxy/dcterms:hasVersion/taggedLiterals\":-1.0,\"providerProxy/dcterms:hasVersion/languages\":0.0,\"providerProxy/dcterms:hasVersion/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:hasVersion/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:hasVersion/languages\":0.0,\"europeanaProxy/dcterms:hasVersion/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isFormatOf/taggedLiterals\":-1.0,\"providerProxy/dcterms:isFormatOf/languages\":0.0,\"providerProxy/dcterms:isFormatOf/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isFormatOf/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isFormatOf/languages\":0.0,\"europeanaProxy/dcterms:isFormatOf/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isReferencedBy/taggedLiterals\":-1.0,\"providerProxy/dcterms:isReferencedBy/languages\":0.0,\"providerProxy/dcterms:isReferencedBy/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isReferencedBy/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isReferencedBy/languages\":0.0,\"europeanaProxy/dcterms:isReferencedBy/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isReplacedBy/taggedLiterals\":-1.0,\"providerProxy/dcterms:isReplacedBy/languages\":0.0,\"providerProxy/dcterms:isReplacedBy/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isReplacedBy/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isReplacedBy/languages\":0.0,\"europeanaProxy/dcterms:isReplacedBy/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isRequiredBy/taggedLiterals\":-1.0,\"providerProxy/dcterms:isRequiredBy/languages\":0.0,\"providerProxy/dcterms:isRequiredBy/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isRequiredBy/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isRequiredBy/languages\":0.0,\"europeanaProxy/dcterms:isRequiredBy/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isVersionOf/taggedLiterals\":-1.0,\"providerProxy/dcterms:isVersionOf/languages\":0.0,\"providerProxy/dcterms:isVersionOf/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isVersionOf/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isVersionOf/languages\":0.0,\"europeanaProxy/dcterms:isVersionOf/literalsPerLanguage\":0.0,\"providerProxy/dcterms:references/taggedLiterals\":-1.0,\"providerProxy/dcterms:references/languages\":0.0,\"providerProxy/dcterms:references/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:references/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:references/languages\":0.0,\"europeanaProxy/dcterms:references/literalsPerLanguage\":0.0,\"providerProxy/dcterms:replaces/taggedLiterals\":-1.0,\"providerProxy/dcterms:replaces/languages\":0.0,\"providerProxy/dcterms:replaces/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:replaces/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:replaces/languages\":0.0,\"europeanaProxy/dcterms:replaces/literalsPerLanguage\":0.0,\"providerProxy/dcterms:requires/taggedLiterals\":-1.0,\"providerProxy/dcterms:requires/languages\":0.0,\"providerProxy/dcterms:requires/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:requires/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:requires/languages\":0.0,\"europeanaProxy/dcterms:requires/literalsPerLanguage\":0.0,\"providerProxy/dcterms:tableOfContents/taggedLiterals\":-1.0,\"providerProxy/dcterms:tableOfContents/languages\":0.0,\"providerProxy/dcterms:tableOfContents/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:tableOfContents/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:tableOfContents/languages\":0.0,\"europeanaProxy/dcterms:tableOfContents/literalsPerLanguage\":0.0,\"providerProxy/edm:currentLocation/taggedLiterals\":-1.0,\"providerProxy/edm:currentLocation/languages\":0.0,\"providerProxy/edm:currentLocation/literalsPerLanguage\":0.0,\"europeanaProxy/edm:currentLocation/taggedLiterals\":-1.0,\"europeanaProxy/edm:currentLocation/languages\":0.0,\"europeanaProxy/edm:currentLocation/literalsPerLanguage\":0.0,\"providerProxy/edm:hasMet/taggedLiterals\":-1.0,\"providerProxy/edm:hasMet/languages\":0.0,\"providerProxy/edm:hasMet/literalsPerLanguage\":0.0,\"europeanaProxy/edm:hasMet/taggedLiterals\":-1.0,\"europeanaProxy/edm:hasMet/languages\":0.0,\"europeanaProxy/edm:hasMet/literalsPerLanguage\":0.0,\"providerProxy/edm:hasType/taggedLiterals\":-1.0,\"providerProxy/edm:hasType/languages\":0.0,\"providerProxy/edm:hasType/literalsPerLanguage\":0.0,\"europeanaProxy/edm:hasType/taggedLiterals\":-1.0,\"europeanaProxy/edm:hasType/languages\":0.0,\"europeanaProxy/edm:hasType/literalsPerLanguage\":0.0,\"providerProxy/edm:incorporates/taggedLiterals\":-1.0,\"providerProxy/edm:incorporates/languages\":0.0,\"providerProxy/edm:incorporates/literalsPerLanguage\":0.0,\"europeanaProxy/edm:incorporates/taggedLiterals\":-1.0,\"europeanaProxy/edm:incorporates/languages\":0.0,\"europeanaProxy/edm:incorporates/literalsPerLanguage\":0.0,\"providerProxy/edm:isDerivativeOf/taggedLiterals\":-1.0,\"providerProxy/edm:isDerivativeOf/languages\":0.0,\"providerProxy/edm:isDerivativeOf/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isDerivativeOf/taggedLiterals\":-1.0,\"europeanaProxy/edm:isDerivativeOf/languages\":0.0,\"europeanaProxy/edm:isDerivativeOf/literalsPerLanguage\":0.0,\"providerProxy/edm:isRelatedTo/taggedLiterals\":-1.0,\"providerProxy/edm:isRelatedTo/languages\":0.0,\"providerProxy/edm:isRelatedTo/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isRelatedTo/taggedLiterals\":-1.0,\"europeanaProxy/edm:isRelatedTo/languages\":0.0,\"europeanaProxy/edm:isRelatedTo/literalsPerLanguage\":0.0,\"providerProxy/edm:isRepresentationOf/taggedLiterals\":-1.0,\"providerProxy/edm:isRepresentationOf/languages\":0.0,\"providerProxy/edm:isRepresentationOf/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isRepresentationOf/taggedLiterals\":-1.0,\"europeanaProxy/edm:isRepresentationOf/languages\":0.0,\"europeanaProxy/edm:isRepresentationOf/literalsPerLanguage\":0.0,\"providerProxy/edm:isSimilarTo/taggedLiterals\":-1.0,\"providerProxy/edm:isSimilarTo/languages\":0.0,\"providerProxy/edm:isSimilarTo/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isSimilarTo/taggedLiterals\":-1.0,\"europeanaProxy/edm:isSimilarTo/languages\":0.0,\"europeanaProxy/edm:isSimilarTo/literalsPerLanguage\":0.0,\"providerProxy/edm:isSuccessorOf/taggedLiterals\":-1.0,\"providerProxy/edm:isSuccessorOf/languages\":0.0,\"providerProxy/edm:isSuccessorOf/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isSuccessorOf/taggedLiterals\":-1.0,\"europeanaProxy/edm:isSuccessorOf/languages\":0.0,\"europeanaProxy/edm:isSuccessorOf/literalsPerLanguage\":0.0,\"providerProxy/edm:realizes/taggedLiterals\":-1.0,\"providerProxy/edm:realizes/languages\":0.0,\"providerProxy/edm:realizes/literalsPerLanguage\":0.0,\"europeanaProxy/edm:realizes/taggedLiterals\":-1.0,\"europeanaProxy/edm:realizes/languages\":0.0,\"europeanaProxy/edm:realizes/literalsPerLanguage\":0.0,\"providerProxy/edm:wasPresentAt/taggedLiterals\":-1.0,\"providerProxy/edm:wasPresentAt/languages\":0.0,\"providerProxy/edm:wasPresentAt/literalsPerLanguage\":0.0,\"europeanaProxy/edm:wasPresentAt/taggedLiterals\":-1.0,\"europeanaProxy/edm:wasPresentAt/languages\":0.0,\"europeanaProxy/edm:wasPresentAt/literalsPerLanguage\":0.0,\"NumberOfLanguagesPerPropertyInProviderProxy\":1.5,\"NumberOfLanguagesPerPropertyInEuropeanaProxy\":12.0,\"NumberOfLanguagesPerPropertyInObject\":5.0,\"TaggedLiteralsInProviderProxy\":6.0,\"TaggedLiteralsInEuropeanaProxy\":12.0,\"DistinctLanguageCountInProviderProxy\":2.0,\"DistinctLanguageCountInEuropeanaProxy\":12.0,\"TaggedLiteralsInObject\":18.0,\"DistinctLanguagesInObject\":12.0,\"TaggedLiteralsPerLanguageInProviderProxy\":3.0,\"TaggedLiteralsPerLanguageInEuropeanaProxy\":1.0,\"TaggedLiteralsPerLanguageInObject\":1.5",
        languages
    );
  }

  @Test
  public void testCountersGetLanguageMapSkipped() throws URISyntaxException, IOException {
    EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhJsonSchema());
    calculator.setSkippedEntryChecker(new EdmSkippedEntryChecker());
    JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("general/test.json"));
    calculator.measure(cache);
    String languages = calculator.getCsv(true, CompressionLevel.NORMAL);
    assertNotNull(languages);
    assertEquals(
        "\"providerProxy/dc:title/taggedLiterals\":1.0,\"providerProxy/dc:title/languages\":1.0,\"providerProxy/dc:title/literalsPerLanguage\":1.0,\"europeanaProxy/dc:title/taggedLiterals\":-1.0,\"europeanaProxy/dc:title/languages\":0.0,\"europeanaProxy/dc:title/literalsPerLanguage\":0.0,\"providerProxy/dcterms:alternative/taggedLiterals\":-1.0,\"providerProxy/dcterms:alternative/languages\":0.0,\"providerProxy/dcterms:alternative/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:alternative/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:alternative/languages\":0.0,\"europeanaProxy/dcterms:alternative/literalsPerLanguage\":0.0,\"providerProxy/dc:description/taggedLiterals\":-1.0,\"providerProxy/dc:description/languages\":0.0,\"providerProxy/dc:description/literalsPerLanguage\":0.0,\"europeanaProxy/dc:description/taggedLiterals\":-1.0,\"europeanaProxy/dc:description/languages\":0.0,\"europeanaProxy/dc:description/literalsPerLanguage\":0.0,\"providerProxy/dc:creator/taggedLiterals\":-1.0,\"providerProxy/dc:creator/languages\":0.0,\"providerProxy/dc:creator/literalsPerLanguage\":0.0,\"europeanaProxy/dc:creator/taggedLiterals\":-1.0,\"europeanaProxy/dc:creator/languages\":0.0,\"europeanaProxy/dc:creator/literalsPerLanguage\":0.0,\"providerProxy/dc:publisher/taggedLiterals\":-1.0,\"providerProxy/dc:publisher/languages\":0.0,\"providerProxy/dc:publisher/literalsPerLanguage\":0.0,\"europeanaProxy/dc:publisher/taggedLiterals\":-1.0,\"europeanaProxy/dc:publisher/languages\":0.0,\"europeanaProxy/dc:publisher/literalsPerLanguage\":0.0,\"providerProxy/dc:contributor/taggedLiterals\":-1.0,\"providerProxy/dc:contributor/languages\":0.0,\"providerProxy/dc:contributor/literalsPerLanguage\":0.0,\"europeanaProxy/dc:contributor/taggedLiterals\":-1.0,\"europeanaProxy/dc:contributor/languages\":0.0,\"europeanaProxy/dc:contributor/literalsPerLanguage\":0.0,\"providerProxy/dc:type/taggedLiterals\":0.0,\"providerProxy/dc:type/languages\":0.0,\"providerProxy/dc:type/literalsPerLanguage\":0.0,\"europeanaProxy/dc:type/taggedLiterals\":-1.0,\"europeanaProxy/dc:type/languages\":0.0,\"europeanaProxy/dc:type/literalsPerLanguage\":0.0,\"providerProxy/dc:identifier/taggedLiterals\":0.0,\"providerProxy/dc:identifier/languages\":0.0,\"providerProxy/dc:identifier/literalsPerLanguage\":0.0,\"europeanaProxy/dc:identifier/taggedLiterals\":-1.0,\"europeanaProxy/dc:identifier/languages\":0.0,\"europeanaProxy/dc:identifier/literalsPerLanguage\":0.0,\"providerProxy/dc:language/taggedLiterals\":-1.0,\"providerProxy/dc:language/languages\":0.0,\"providerProxy/dc:language/literalsPerLanguage\":0.0,\"europeanaProxy/dc:language/taggedLiterals\":-1.0,\"europeanaProxy/dc:language/languages\":0.0,\"europeanaProxy/dc:language/literalsPerLanguage\":0.0,\"providerProxy/dc:coverage/taggedLiterals\":-1.0,\"providerProxy/dc:coverage/languages\":0.0,\"providerProxy/dc:coverage/literalsPerLanguage\":0.0,\"europeanaProxy/dc:coverage/taggedLiterals\":-1.0,\"europeanaProxy/dc:coverage/languages\":0.0,\"europeanaProxy/dc:coverage/literalsPerLanguage\":0.0,\"providerProxy/dcterms:temporal/taggedLiterals\":-1.0,\"providerProxy/dcterms:temporal/languages\":0.0,\"providerProxy/dcterms:temporal/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:temporal/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:temporal/languages\":0.0,\"europeanaProxy/dcterms:temporal/literalsPerLanguage\":0.0,\"providerProxy/dcterms:spatial/taggedLiterals\":-1.0,\"providerProxy/dcterms:spatial/languages\":0.0,\"providerProxy/dcterms:spatial/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:spatial/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:spatial/languages\":0.0,\"europeanaProxy/dcterms:spatial/literalsPerLanguage\":0.0,\"providerProxy/dc:subject/taggedLiterals\":5.0,\"providerProxy/dc:subject/languages\":2.0,\"providerProxy/dc:subject/literalsPerLanguage\":2.5,\"europeanaProxy/dc:subject/taggedLiterals\":12.0,\"europeanaProxy/dc:subject/languages\":12.0,\"europeanaProxy/dc:subject/literalsPerLanguage\":1.0,\"providerProxy/dc:date/taggedLiterals\":-1.0,\"providerProxy/dc:date/languages\":0.0,\"providerProxy/dc:date/literalsPerLanguage\":0.0,\"europeanaProxy/dc:date/taggedLiterals\":-1.0,\"europeanaProxy/dc:date/languages\":0.0,\"europeanaProxy/dc:date/literalsPerLanguage\":0.0,\"providerProxy/dcterms:created/taggedLiterals\":-1.0,\"providerProxy/dcterms:created/languages\":0.0,\"providerProxy/dcterms:created/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:created/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:created/languages\":0.0,\"europeanaProxy/dcterms:created/literalsPerLanguage\":0.0,\"providerProxy/dcterms:issued/taggedLiterals\":-1.0,\"providerProxy/dcterms:issued/languages\":0.0,\"providerProxy/dcterms:issued/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:issued/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:issued/languages\":0.0,\"europeanaProxy/dcterms:issued/literalsPerLanguage\":0.0,\"providerProxy/dcterms:extent/taggedLiterals\":-1.0,\"providerProxy/dcterms:extent/languages\":0.0,\"providerProxy/dcterms:extent/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:extent/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:extent/languages\":0.0,\"europeanaProxy/dcterms:extent/literalsPerLanguage\":0.0,\"providerProxy/dcterms:medium/taggedLiterals\":-1.0,\"providerProxy/dcterms:medium/languages\":0.0,\"providerProxy/dcterms:medium/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:medium/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:medium/languages\":0.0,\"europeanaProxy/dcterms:medium/literalsPerLanguage\":0.0,\"providerProxy/dcterms:provenance/taggedLiterals\":-1.0,\"providerProxy/dcterms:provenance/languages\":0.0,\"providerProxy/dcterms:provenance/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:provenance/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:provenance/languages\":0.0,\"europeanaProxy/dcterms:provenance/literalsPerLanguage\":0.0,\"providerProxy/dcterms:hasPart/taggedLiterals\":-1.0,\"providerProxy/dcterms:hasPart/languages\":0.0,\"providerProxy/dcterms:hasPart/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:hasPart/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:hasPart/languages\":0.0,\"europeanaProxy/dcterms:hasPart/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isPartOf/taggedLiterals\":0.0,\"providerProxy/dcterms:isPartOf/languages\":0.0,\"providerProxy/dcterms:isPartOf/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isPartOf/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isPartOf/languages\":0.0,\"europeanaProxy/dcterms:isPartOf/literalsPerLanguage\":0.0,\"providerProxy/dc:format/taggedLiterals\":-1.0,\"providerProxy/dc:format/languages\":0.0,\"providerProxy/dc:format/literalsPerLanguage\":0.0,\"europeanaProxy/dc:format/taggedLiterals\":-1.0,\"europeanaProxy/dc:format/languages\":0.0,\"europeanaProxy/dc:format/literalsPerLanguage\":0.0,\"providerProxy/dc:source/taggedLiterals\":-1.0,\"providerProxy/dc:source/languages\":0.0,\"providerProxy/dc:source/literalsPerLanguage\":0.0,\"europeanaProxy/dc:source/taggedLiterals\":-1.0,\"europeanaProxy/dc:source/languages\":0.0,\"europeanaProxy/dc:source/literalsPerLanguage\":0.0,\"providerProxy/dc:rights/taggedLiterals\":0.0,\"providerProxy/dc:rights/languages\":0.0,\"providerProxy/dc:rights/literalsPerLanguage\":0.0,\"europeanaProxy/dc:rights/taggedLiterals\":-1.0,\"europeanaProxy/dc:rights/languages\":0.0,\"europeanaProxy/dc:rights/literalsPerLanguage\":0.0,\"providerProxy/dc:relation/taggedLiterals\":-1.0,\"providerProxy/dc:relation/languages\":0.0,\"providerProxy/dc:relation/literalsPerLanguage\":0.0,\"europeanaProxy/dc:relation/taggedLiterals\":-1.0,\"europeanaProxy/dc:relation/languages\":0.0,\"europeanaProxy/dc:relation/literalsPerLanguage\":0.0,\"providerProxy/edm:year/taggedLiterals\":-1.0,\"providerProxy/edm:year/languages\":0.0,\"providerProxy/edm:year/literalsPerLanguage\":0.0,\"europeanaProxy/edm:year/taggedLiterals\":-1.0,\"europeanaProxy/edm:year/languages\":0.0,\"europeanaProxy/edm:year/literalsPerLanguage\":0.0,\"providerProxy/edm:userTag/taggedLiterals\":-1.0,\"providerProxy/edm:userTag/languages\":0.0,\"providerProxy/edm:userTag/literalsPerLanguage\":0.0,\"europeanaProxy/edm:userTag/taggedLiterals\":-1.0,\"europeanaProxy/edm:userTag/languages\":0.0,\"europeanaProxy/edm:userTag/literalsPerLanguage\":0.0,\"providerProxy/dcterms:conformsTo/taggedLiterals\":-1.0,\"providerProxy/dcterms:conformsTo/languages\":0.0,\"providerProxy/dcterms:conformsTo/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:conformsTo/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:conformsTo/languages\":0.0,\"europeanaProxy/dcterms:conformsTo/literalsPerLanguage\":0.0,\"providerProxy/dcterms:hasFormat/taggedLiterals\":0.0,\"providerProxy/dcterms:hasFormat/languages\":0.0,\"providerProxy/dcterms:hasFormat/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:hasFormat/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:hasFormat/languages\":0.0,\"europeanaProxy/dcterms:hasFormat/literalsPerLanguage\":0.0,\"providerProxy/dcterms:hasVersion/taggedLiterals\":-1.0,\"providerProxy/dcterms:hasVersion/languages\":0.0,\"providerProxy/dcterms:hasVersion/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:hasVersion/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:hasVersion/languages\":0.0,\"europeanaProxy/dcterms:hasVersion/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isFormatOf/taggedLiterals\":-1.0,\"providerProxy/dcterms:isFormatOf/languages\":0.0,\"providerProxy/dcterms:isFormatOf/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isFormatOf/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isFormatOf/languages\":0.0,\"europeanaProxy/dcterms:isFormatOf/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isReferencedBy/taggedLiterals\":-1.0,\"providerProxy/dcterms:isReferencedBy/languages\":0.0,\"providerProxy/dcterms:isReferencedBy/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isReferencedBy/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isReferencedBy/languages\":0.0,\"europeanaProxy/dcterms:isReferencedBy/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isReplacedBy/taggedLiterals\":-1.0,\"providerProxy/dcterms:isReplacedBy/languages\":0.0,\"providerProxy/dcterms:isReplacedBy/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isReplacedBy/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isReplacedBy/languages\":0.0,\"europeanaProxy/dcterms:isReplacedBy/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isRequiredBy/taggedLiterals\":-1.0,\"providerProxy/dcterms:isRequiredBy/languages\":0.0,\"providerProxy/dcterms:isRequiredBy/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isRequiredBy/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isRequiredBy/languages\":0.0,\"europeanaProxy/dcterms:isRequiredBy/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isVersionOf/taggedLiterals\":-1.0,\"providerProxy/dcterms:isVersionOf/languages\":0.0,\"providerProxy/dcterms:isVersionOf/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isVersionOf/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isVersionOf/languages\":0.0,\"europeanaProxy/dcterms:isVersionOf/literalsPerLanguage\":0.0,\"providerProxy/dcterms:references/taggedLiterals\":-1.0,\"providerProxy/dcterms:references/languages\":0.0,\"providerProxy/dcterms:references/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:references/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:references/languages\":0.0,\"europeanaProxy/dcterms:references/literalsPerLanguage\":0.0,\"providerProxy/dcterms:replaces/taggedLiterals\":-1.0,\"providerProxy/dcterms:replaces/languages\":0.0,\"providerProxy/dcterms:replaces/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:replaces/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:replaces/languages\":0.0,\"europeanaProxy/dcterms:replaces/literalsPerLanguage\":0.0,\"providerProxy/dcterms:requires/taggedLiterals\":-1.0,\"providerProxy/dcterms:requires/languages\":0.0,\"providerProxy/dcterms:requires/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:requires/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:requires/languages\":0.0,\"europeanaProxy/dcterms:requires/literalsPerLanguage\":0.0,\"providerProxy/dcterms:tableOfContents/taggedLiterals\":-1.0,\"providerProxy/dcterms:tableOfContents/languages\":0.0,\"providerProxy/dcterms:tableOfContents/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:tableOfContents/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:tableOfContents/languages\":0.0,\"europeanaProxy/dcterms:tableOfContents/literalsPerLanguage\":0.0,\"providerProxy/edm:currentLocation/taggedLiterals\":-1.0,\"providerProxy/edm:currentLocation/languages\":0.0,\"providerProxy/edm:currentLocation/literalsPerLanguage\":0.0,\"europeanaProxy/edm:currentLocation/taggedLiterals\":-1.0,\"europeanaProxy/edm:currentLocation/languages\":0.0,\"europeanaProxy/edm:currentLocation/literalsPerLanguage\":0.0,\"providerProxy/edm:hasMet/taggedLiterals\":-1.0,\"providerProxy/edm:hasMet/languages\":0.0,\"providerProxy/edm:hasMet/literalsPerLanguage\":0.0,\"europeanaProxy/edm:hasMet/taggedLiterals\":-1.0,\"europeanaProxy/edm:hasMet/languages\":0.0,\"europeanaProxy/edm:hasMet/literalsPerLanguage\":0.0,\"providerProxy/edm:hasType/taggedLiterals\":-1.0,\"providerProxy/edm:hasType/languages\":0.0,\"providerProxy/edm:hasType/literalsPerLanguage\":0.0,\"europeanaProxy/edm:hasType/taggedLiterals\":-1.0,\"europeanaProxy/edm:hasType/languages\":0.0,\"europeanaProxy/edm:hasType/literalsPerLanguage\":0.0,\"providerProxy/edm:incorporates/taggedLiterals\":-1.0,\"providerProxy/edm:incorporates/languages\":0.0,\"providerProxy/edm:incorporates/literalsPerLanguage\":0.0,\"europeanaProxy/edm:incorporates/taggedLiterals\":-1.0,\"europeanaProxy/edm:incorporates/languages\":0.0,\"europeanaProxy/edm:incorporates/literalsPerLanguage\":0.0,\"providerProxy/edm:isDerivativeOf/taggedLiterals\":-1.0,\"providerProxy/edm:isDerivativeOf/languages\":0.0,\"providerProxy/edm:isDerivativeOf/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isDerivativeOf/taggedLiterals\":-1.0,\"europeanaProxy/edm:isDerivativeOf/languages\":0.0,\"europeanaProxy/edm:isDerivativeOf/literalsPerLanguage\":0.0,\"providerProxy/edm:isRelatedTo/taggedLiterals\":-1.0,\"providerProxy/edm:isRelatedTo/languages\":0.0,\"providerProxy/edm:isRelatedTo/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isRelatedTo/taggedLiterals\":-1.0,\"europeanaProxy/edm:isRelatedTo/languages\":0.0,\"europeanaProxy/edm:isRelatedTo/literalsPerLanguage\":0.0,\"providerProxy/edm:isRepresentationOf/taggedLiterals\":-1.0,\"providerProxy/edm:isRepresentationOf/languages\":0.0,\"providerProxy/edm:isRepresentationOf/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isRepresentationOf/taggedLiterals\":-1.0,\"europeanaProxy/edm:isRepresentationOf/languages\":0.0,\"europeanaProxy/edm:isRepresentationOf/literalsPerLanguage\":0.0,\"providerProxy/edm:isSimilarTo/taggedLiterals\":-1.0,\"providerProxy/edm:isSimilarTo/languages\":0.0,\"providerProxy/edm:isSimilarTo/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isSimilarTo/taggedLiterals\":-1.0,\"europeanaProxy/edm:isSimilarTo/languages\":0.0,\"europeanaProxy/edm:isSimilarTo/literalsPerLanguage\":0.0,\"providerProxy/edm:isSuccessorOf/taggedLiterals\":-1.0,\"providerProxy/edm:isSuccessorOf/languages\":0.0,\"providerProxy/edm:isSuccessorOf/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isSuccessorOf/taggedLiterals\":-1.0,\"europeanaProxy/edm:isSuccessorOf/languages\":0.0,\"europeanaProxy/edm:isSuccessorOf/literalsPerLanguage\":0.0,\"providerProxy/edm:realizes/taggedLiterals\":-1.0,\"providerProxy/edm:realizes/languages\":0.0,\"providerProxy/edm:realizes/literalsPerLanguage\":0.0,\"europeanaProxy/edm:realizes/taggedLiterals\":-1.0,\"europeanaProxy/edm:realizes/languages\":0.0,\"europeanaProxy/edm:realizes/literalsPerLanguage\":0.0,\"providerProxy/edm:wasPresentAt/taggedLiterals\":-1.0,\"providerProxy/edm:wasPresentAt/languages\":0.0,\"providerProxy/edm:wasPresentAt/literalsPerLanguage\":0.0,\"europeanaProxy/edm:wasPresentAt/taggedLiterals\":-1.0,\"europeanaProxy/edm:wasPresentAt/languages\":0.0,\"europeanaProxy/edm:wasPresentAt/literalsPerLanguage\":0.0,\"NumberOfLanguagesPerPropertyInProviderProxy\":1.5,\"NumberOfLanguagesPerPropertyInEuropeanaProxy\":12.0,\"NumberOfLanguagesPerPropertyInObject\":5.0,\"TaggedLiteralsInProviderProxy\":6.0,\"TaggedLiteralsInEuropeanaProxy\":12.0,\"DistinctLanguageCountInProviderProxy\":2.0,\"DistinctLanguageCountInEuropeanaProxy\":12.0,\"TaggedLiteralsInObject\":18.0,\"DistinctLanguagesInObject\":12.0,\"TaggedLiteralsPerLanguageInProviderProxy\":3.0,\"TaggedLiteralsPerLanguageInEuropeanaProxy\":1.0,\"TaggedLiteralsPerLanguageInObject\":1.5",
        languages
    );
  }

  @Test
  public void testCountersGetLanguageMapForPLace() throws URISyntaxException, IOException {
    EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhJsonSchema());
    JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("general/test-place.json"));
    calculator.measure(cache);
    String languages = calculator.getCsv(true, CompressionLevel.NORMAL);
    assertNotNull(languages);
    assertEquals(
        "\"providerProxy/dc:title/taggedLiterals\":0.0,\"providerProxy/dc:title/languages\":0.0,\"providerProxy/dc:title/literalsPerLanguage\":0.0,\"europeanaProxy/dc:title/taggedLiterals\":-1.0,\"europeanaProxy/dc:title/languages\":0.0,\"europeanaProxy/dc:title/literalsPerLanguage\":0.0,\"providerProxy/dcterms:alternative/taggedLiterals\":-1.0,\"providerProxy/dcterms:alternative/languages\":0.0,\"providerProxy/dcterms:alternative/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:alternative/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:alternative/languages\":0.0,\"europeanaProxy/dcterms:alternative/literalsPerLanguage\":0.0,\"providerProxy/dc:description/taggedLiterals\":0.0,\"providerProxy/dc:description/languages\":0.0,\"providerProxy/dc:description/literalsPerLanguage\":0.0,\"europeanaProxy/dc:description/taggedLiterals\":-1.0,\"europeanaProxy/dc:description/languages\":0.0,\"europeanaProxy/dc:description/literalsPerLanguage\":0.0,\"providerProxy/dc:creator/taggedLiterals\":0.0,\"providerProxy/dc:creator/languages\":0.0,\"providerProxy/dc:creator/literalsPerLanguage\":0.0,\"europeanaProxy/dc:creator/taggedLiterals\":-1.0,\"europeanaProxy/dc:creator/languages\":0.0,\"europeanaProxy/dc:creator/literalsPerLanguage\":0.0,\"providerProxy/dc:publisher/taggedLiterals\":-1.0,\"providerProxy/dc:publisher/languages\":0.0,\"providerProxy/dc:publisher/literalsPerLanguage\":0.0,\"europeanaProxy/dc:publisher/taggedLiterals\":-1.0,\"europeanaProxy/dc:publisher/languages\":0.0,\"europeanaProxy/dc:publisher/literalsPerLanguage\":0.0,\"providerProxy/dc:contributor/taggedLiterals\":0.0,\"providerProxy/dc:contributor/languages\":0.0,\"providerProxy/dc:contributor/literalsPerLanguage\":0.0,\"europeanaProxy/dc:contributor/taggedLiterals\":-1.0,\"europeanaProxy/dc:contributor/languages\":0.0,\"europeanaProxy/dc:contributor/literalsPerLanguage\":0.0,\"providerProxy/dc:type/taggedLiterals\":0.0,\"providerProxy/dc:type/languages\":0.0,\"providerProxy/dc:type/literalsPerLanguage\":0.0,\"europeanaProxy/dc:type/taggedLiterals\":-1.0,\"europeanaProxy/dc:type/languages\":0.0,\"europeanaProxy/dc:type/literalsPerLanguage\":0.0,\"providerProxy/dc:identifier/taggedLiterals\":0.0,\"providerProxy/dc:identifier/languages\":0.0,\"providerProxy/dc:identifier/literalsPerLanguage\":0.0,\"europeanaProxy/dc:identifier/taggedLiterals\":-1.0,\"europeanaProxy/dc:identifier/languages\":0.0,\"europeanaProxy/dc:identifier/literalsPerLanguage\":0.0,\"providerProxy/dc:language/taggedLiterals\":0.0,\"providerProxy/dc:language/languages\":0.0,\"providerProxy/dc:language/literalsPerLanguage\":0.0,\"europeanaProxy/dc:language/taggedLiterals\":-1.0,\"europeanaProxy/dc:language/languages\":0.0,\"europeanaProxy/dc:language/literalsPerLanguage\":0.0,\"providerProxy/dc:coverage/taggedLiterals\":0.0,\"providerProxy/dc:coverage/languages\":0.0,\"providerProxy/dc:coverage/literalsPerLanguage\":0.0,\"europeanaProxy/dc:coverage/taggedLiterals\":-1.0,\"europeanaProxy/dc:coverage/languages\":0.0,\"europeanaProxy/dc:coverage/literalsPerLanguage\":0.0,\"providerProxy/dcterms:temporal/taggedLiterals\":0.0,\"providerProxy/dcterms:temporal/languages\":0.0,\"providerProxy/dcterms:temporal/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:temporal/taggedLiterals\":0.0,\"europeanaProxy/dcterms:temporal/languages\":0.0,\"europeanaProxy/dcterms:temporal/literalsPerLanguage\":0.0,\"providerProxy/dcterms:spatial/taggedLiterals\":0.0,\"providerProxy/dcterms:spatial/languages\":0.0,\"providerProxy/dcterms:spatial/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:spatial/taggedLiterals\":115.0,\"europeanaProxy/dcterms:spatial/languages\":98.0,\"europeanaProxy/dcterms:spatial/literalsPerLanguage\":1.173469,\"providerProxy/dc:subject/taggedLiterals\":0.0,\"providerProxy/dc:subject/languages\":0.0,\"providerProxy/dc:subject/literalsPerLanguage\":0.0,\"europeanaProxy/dc:subject/taggedLiterals\":-1.0,\"europeanaProxy/dc:subject/languages\":0.0,\"europeanaProxy/dc:subject/literalsPerLanguage\":0.0,\"providerProxy/dc:date/taggedLiterals\":-1.0,\"providerProxy/dc:date/languages\":0.0,\"providerProxy/dc:date/literalsPerLanguage\":0.0,\"europeanaProxy/dc:date/taggedLiterals\":-1.0,\"europeanaProxy/dc:date/languages\":0.0,\"europeanaProxy/dc:date/literalsPerLanguage\":0.0,\"providerProxy/dcterms:created/taggedLiterals\":-1.0,\"providerProxy/dcterms:created/languages\":0.0,\"providerProxy/dcterms:created/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:created/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:created/languages\":0.0,\"europeanaProxy/dcterms:created/literalsPerLanguage\":0.0,\"providerProxy/dcterms:issued/taggedLiterals\":0.0,\"providerProxy/dcterms:issued/languages\":0.0,\"providerProxy/dcterms:issued/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:issued/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:issued/languages\":0.0,\"europeanaProxy/dcterms:issued/literalsPerLanguage\":0.0,\"providerProxy/dcterms:extent/taggedLiterals\":0.0,\"providerProxy/dcterms:extent/languages\":0.0,\"providerProxy/dcterms:extent/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:extent/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:extent/languages\":0.0,\"europeanaProxy/dcterms:extent/literalsPerLanguage\":0.0,\"providerProxy/dcterms:medium/taggedLiterals\":-1.0,\"providerProxy/dcterms:medium/languages\":0.0,\"providerProxy/dcterms:medium/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:medium/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:medium/languages\":0.0,\"europeanaProxy/dcterms:medium/literalsPerLanguage\":0.0,\"providerProxy/dcterms:provenance/taggedLiterals\":-1.0,\"providerProxy/dcterms:provenance/languages\":0.0,\"providerProxy/dcterms:provenance/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:provenance/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:provenance/languages\":0.0,\"europeanaProxy/dcterms:provenance/literalsPerLanguage\":0.0,\"providerProxy/dcterms:hasPart/taggedLiterals\":0.0,\"providerProxy/dcterms:hasPart/languages\":0.0,\"providerProxy/dcterms:hasPart/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:hasPart/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:hasPart/languages\":0.0,\"europeanaProxy/dcterms:hasPart/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isPartOf/taggedLiterals\":-1.0,\"providerProxy/dcterms:isPartOf/languages\":0.0,\"providerProxy/dcterms:isPartOf/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isPartOf/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isPartOf/languages\":0.0,\"europeanaProxy/dcterms:isPartOf/literalsPerLanguage\":0.0,\"providerProxy/dc:format/taggedLiterals\":0.0,\"providerProxy/dc:format/languages\":0.0,\"providerProxy/dc:format/literalsPerLanguage\":0.0,\"europeanaProxy/dc:format/taggedLiterals\":-1.0,\"europeanaProxy/dc:format/languages\":0.0,\"europeanaProxy/dc:format/literalsPerLanguage\":0.0,\"providerProxy/dc:source/taggedLiterals\":-1.0,\"providerProxy/dc:source/languages\":0.0,\"providerProxy/dc:source/literalsPerLanguage\":0.0,\"europeanaProxy/dc:source/taggedLiterals\":-1.0,\"europeanaProxy/dc:source/languages\":0.0,\"europeanaProxy/dc:source/literalsPerLanguage\":0.0,\"providerProxy/dc:rights/taggedLiterals\":-1.0,\"providerProxy/dc:rights/languages\":0.0,\"providerProxy/dc:rights/literalsPerLanguage\":0.0,\"europeanaProxy/dc:rights/taggedLiterals\":-1.0,\"europeanaProxy/dc:rights/languages\":0.0,\"europeanaProxy/dc:rights/literalsPerLanguage\":0.0,\"providerProxy/dc:relation/taggedLiterals\":-1.0,\"providerProxy/dc:relation/languages\":0.0,\"providerProxy/dc:relation/literalsPerLanguage\":0.0,\"europeanaProxy/dc:relation/taggedLiterals\":-1.0,\"europeanaProxy/dc:relation/languages\":0.0,\"europeanaProxy/dc:relation/literalsPerLanguage\":0.0,\"providerProxy/edm:year/taggedLiterals\":-1.0,\"providerProxy/edm:year/languages\":0.0,\"providerProxy/edm:year/literalsPerLanguage\":0.0,\"europeanaProxy/edm:year/taggedLiterals\":0.0,\"europeanaProxy/edm:year/languages\":0.0,\"europeanaProxy/edm:year/literalsPerLanguage\":0.0,\"providerProxy/edm:userTag/taggedLiterals\":-1.0,\"providerProxy/edm:userTag/languages\":0.0,\"providerProxy/edm:userTag/literalsPerLanguage\":0.0,\"europeanaProxy/edm:userTag/taggedLiterals\":-1.0,\"europeanaProxy/edm:userTag/languages\":0.0,\"europeanaProxy/edm:userTag/literalsPerLanguage\":0.0,\"providerProxy/dcterms:conformsTo/taggedLiterals\":-1.0,\"providerProxy/dcterms:conformsTo/languages\":0.0,\"providerProxy/dcterms:conformsTo/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:conformsTo/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:conformsTo/languages\":0.0,\"europeanaProxy/dcterms:conformsTo/literalsPerLanguage\":0.0,\"providerProxy/dcterms:hasFormat/taggedLiterals\":-1.0,\"providerProxy/dcterms:hasFormat/languages\":0.0,\"providerProxy/dcterms:hasFormat/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:hasFormat/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:hasFormat/languages\":0.0,\"europeanaProxy/dcterms:hasFormat/literalsPerLanguage\":0.0,\"providerProxy/dcterms:hasVersion/taggedLiterals\":-1.0,\"providerProxy/dcterms:hasVersion/languages\":0.0,\"providerProxy/dcterms:hasVersion/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:hasVersion/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:hasVersion/languages\":0.0,\"europeanaProxy/dcterms:hasVersion/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isFormatOf/taggedLiterals\":-1.0,\"providerProxy/dcterms:isFormatOf/languages\":0.0,\"providerProxy/dcterms:isFormatOf/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isFormatOf/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isFormatOf/languages\":0.0,\"europeanaProxy/dcterms:isFormatOf/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isReferencedBy/taggedLiterals\":-1.0,\"providerProxy/dcterms:isReferencedBy/languages\":0.0,\"providerProxy/dcterms:isReferencedBy/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isReferencedBy/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isReferencedBy/languages\":0.0,\"europeanaProxy/dcterms:isReferencedBy/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isReplacedBy/taggedLiterals\":-1.0,\"providerProxy/dcterms:isReplacedBy/languages\":0.0,\"providerProxy/dcterms:isReplacedBy/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isReplacedBy/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isReplacedBy/languages\":0.0,\"europeanaProxy/dcterms:isReplacedBy/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isRequiredBy/taggedLiterals\":-1.0,\"providerProxy/dcterms:isRequiredBy/languages\":0.0,\"providerProxy/dcterms:isRequiredBy/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isRequiredBy/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isRequiredBy/languages\":0.0,\"europeanaProxy/dcterms:isRequiredBy/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isVersionOf/taggedLiterals\":-1.0,\"providerProxy/dcterms:isVersionOf/languages\":0.0,\"providerProxy/dcterms:isVersionOf/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isVersionOf/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isVersionOf/languages\":0.0,\"europeanaProxy/dcterms:isVersionOf/literalsPerLanguage\":0.0,\"providerProxy/dcterms:references/taggedLiterals\":-1.0,\"providerProxy/dcterms:references/languages\":0.0,\"providerProxy/dcterms:references/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:references/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:references/languages\":0.0,\"europeanaProxy/dcterms:references/literalsPerLanguage\":0.0,\"providerProxy/dcterms:replaces/taggedLiterals\":-1.0,\"providerProxy/dcterms:replaces/languages\":0.0,\"providerProxy/dcterms:replaces/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:replaces/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:replaces/languages\":0.0,\"europeanaProxy/dcterms:replaces/literalsPerLanguage\":0.0,\"providerProxy/dcterms:requires/taggedLiterals\":-1.0,\"providerProxy/dcterms:requires/languages\":0.0,\"providerProxy/dcterms:requires/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:requires/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:requires/languages\":0.0,\"europeanaProxy/dcterms:requires/literalsPerLanguage\":0.0,\"providerProxy/dcterms:tableOfContents/taggedLiterals\":-1.0,\"providerProxy/dcterms:tableOfContents/languages\":0.0,\"providerProxy/dcterms:tableOfContents/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:tableOfContents/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:tableOfContents/languages\":0.0,\"europeanaProxy/dcterms:tableOfContents/literalsPerLanguage\":0.0,\"providerProxy/edm:currentLocation/taggedLiterals\":-1.0,\"providerProxy/edm:currentLocation/languages\":0.0,\"providerProxy/edm:currentLocation/literalsPerLanguage\":0.0,\"europeanaProxy/edm:currentLocation/taggedLiterals\":-1.0,\"europeanaProxy/edm:currentLocation/languages\":0.0,\"europeanaProxy/edm:currentLocation/literalsPerLanguage\":0.0,\"providerProxy/edm:hasMet/taggedLiterals\":-1.0,\"providerProxy/edm:hasMet/languages\":0.0,\"providerProxy/edm:hasMet/literalsPerLanguage\":0.0,\"europeanaProxy/edm:hasMet/taggedLiterals\":-1.0,\"europeanaProxy/edm:hasMet/languages\":0.0,\"europeanaProxy/edm:hasMet/literalsPerLanguage\":0.0,\"providerProxy/edm:hasType/taggedLiterals\":-1.0,\"providerProxy/edm:hasType/languages\":0.0,\"providerProxy/edm:hasType/literalsPerLanguage\":0.0,\"europeanaProxy/edm:hasType/taggedLiterals\":-1.0,\"europeanaProxy/edm:hasType/languages\":0.0,\"europeanaProxy/edm:hasType/literalsPerLanguage\":0.0,\"providerProxy/edm:incorporates/taggedLiterals\":-1.0,\"providerProxy/edm:incorporates/languages\":0.0,\"providerProxy/edm:incorporates/literalsPerLanguage\":0.0,\"europeanaProxy/edm:incorporates/taggedLiterals\":-1.0,\"europeanaProxy/edm:incorporates/languages\":0.0,\"europeanaProxy/edm:incorporates/literalsPerLanguage\":0.0,\"providerProxy/edm:isDerivativeOf/taggedLiterals\":-1.0,\"providerProxy/edm:isDerivativeOf/languages\":0.0,\"providerProxy/edm:isDerivativeOf/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isDerivativeOf/taggedLiterals\":-1.0,\"europeanaProxy/edm:isDerivativeOf/languages\":0.0,\"europeanaProxy/edm:isDerivativeOf/literalsPerLanguage\":0.0,\"providerProxy/edm:isRelatedTo/taggedLiterals\":-1.0,\"providerProxy/edm:isRelatedTo/languages\":0.0,\"providerProxy/edm:isRelatedTo/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isRelatedTo/taggedLiterals\":-1.0,\"europeanaProxy/edm:isRelatedTo/languages\":0.0,\"europeanaProxy/edm:isRelatedTo/literalsPerLanguage\":0.0,\"providerProxy/edm:isRepresentationOf/taggedLiterals\":-1.0,\"providerProxy/edm:isRepresentationOf/languages\":0.0,\"providerProxy/edm:isRepresentationOf/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isRepresentationOf/taggedLiterals\":-1.0,\"europeanaProxy/edm:isRepresentationOf/languages\":0.0,\"europeanaProxy/edm:isRepresentationOf/literalsPerLanguage\":0.0,\"providerProxy/edm:isSimilarTo/taggedLiterals\":-1.0,\"providerProxy/edm:isSimilarTo/languages\":0.0,\"providerProxy/edm:isSimilarTo/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isSimilarTo/taggedLiterals\":-1.0,\"europeanaProxy/edm:isSimilarTo/languages\":0.0,\"europeanaProxy/edm:isSimilarTo/literalsPerLanguage\":0.0,\"providerProxy/edm:isSuccessorOf/taggedLiterals\":-1.0,\"providerProxy/edm:isSuccessorOf/languages\":0.0,\"providerProxy/edm:isSuccessorOf/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isSuccessorOf/taggedLiterals\":-1.0,\"europeanaProxy/edm:isSuccessorOf/languages\":0.0,\"europeanaProxy/edm:isSuccessorOf/literalsPerLanguage\":0.0,\"providerProxy/edm:realizes/taggedLiterals\":-1.0,\"providerProxy/edm:realizes/languages\":0.0,\"providerProxy/edm:realizes/literalsPerLanguage\":0.0,\"europeanaProxy/edm:realizes/taggedLiterals\":-1.0,\"europeanaProxy/edm:realizes/languages\":0.0,\"europeanaProxy/edm:realizes/literalsPerLanguage\":0.0,\"providerProxy/edm:wasPresentAt/taggedLiterals\":-1.0,\"providerProxy/edm:wasPresentAt/languages\":0.0,\"providerProxy/edm:wasPresentAt/literalsPerLanguage\":0.0,\"europeanaProxy/edm:wasPresentAt/taggedLiterals\":-1.0,\"europeanaProxy/edm:wasPresentAt/languages\":0.0,\"europeanaProxy/edm:wasPresentAt/literalsPerLanguage\":0.0,\"NumberOfLanguagesPerPropertyInProviderProxy\":0.0,\"NumberOfLanguagesPerPropertyInEuropeanaProxy\":98.0,\"NumberOfLanguagesPerPropertyInObject\":98.0,\"TaggedLiteralsInProviderProxy\":0.0,\"TaggedLiteralsInEuropeanaProxy\":115.0,\"DistinctLanguageCountInProviderProxy\":0.0,\"DistinctLanguageCountInEuropeanaProxy\":98.0,\"TaggedLiteralsInObject\":115.0,\"DistinctLanguagesInObject\":98.0,\"TaggedLiteralsPerLanguageInProviderProxy\":0.0,\"TaggedLiteralsPerLanguageInEuropeanaProxy\":1.173469,\"TaggedLiteralsPerLanguageInObject\":1.173469",
        languages
    );
  }

  @Test
  public void testCountersGetLanguageMapForPLaceSkipped() throws URISyntaxException, IOException {
    EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhJsonSchema());
    calculator.setSkippedEntryChecker(new EdmSkippedEntryChecker());
    JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("general/test-place.json"));
    calculator.measure(cache);
    String languages = calculator.getCsv(true, CompressionLevel.NORMAL);
    assertNotNull(languages);
    assertEquals(
        "\"providerProxy/dc:title/taggedLiterals\":0.0,\"providerProxy/dc:title/languages\":0.0,\"providerProxy/dc:title/literalsPerLanguage\":0.0,\"europeanaProxy/dc:title/taggedLiterals\":-1.0,\"europeanaProxy/dc:title/languages\":0.0,\"europeanaProxy/dc:title/literalsPerLanguage\":0.0,\"providerProxy/dcterms:alternative/taggedLiterals\":-1.0,\"providerProxy/dcterms:alternative/languages\":0.0,\"providerProxy/dcterms:alternative/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:alternative/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:alternative/languages\":0.0,\"europeanaProxy/dcterms:alternative/literalsPerLanguage\":0.0,\"providerProxy/dc:description/taggedLiterals\":0.0,\"providerProxy/dc:description/languages\":0.0,\"providerProxy/dc:description/literalsPerLanguage\":0.0,\"europeanaProxy/dc:description/taggedLiterals\":-1.0,\"europeanaProxy/dc:description/languages\":0.0,\"europeanaProxy/dc:description/literalsPerLanguage\":0.0,\"providerProxy/dc:creator/taggedLiterals\":0.0,\"providerProxy/dc:creator/languages\":0.0,\"providerProxy/dc:creator/literalsPerLanguage\":0.0,\"europeanaProxy/dc:creator/taggedLiterals\":-1.0,\"europeanaProxy/dc:creator/languages\":0.0,\"europeanaProxy/dc:creator/literalsPerLanguage\":0.0,\"providerProxy/dc:publisher/taggedLiterals\":-1.0,\"providerProxy/dc:publisher/languages\":0.0,\"providerProxy/dc:publisher/literalsPerLanguage\":0.0,\"europeanaProxy/dc:publisher/taggedLiterals\":-1.0,\"europeanaProxy/dc:publisher/languages\":0.0,\"europeanaProxy/dc:publisher/literalsPerLanguage\":0.0,\"providerProxy/dc:contributor/taggedLiterals\":0.0,\"providerProxy/dc:contributor/languages\":0.0,\"providerProxy/dc:contributor/literalsPerLanguage\":0.0,\"europeanaProxy/dc:contributor/taggedLiterals\":-1.0,\"europeanaProxy/dc:contributor/languages\":0.0,\"europeanaProxy/dc:contributor/literalsPerLanguage\":0.0,\"providerProxy/dc:type/taggedLiterals\":0.0,\"providerProxy/dc:type/languages\":0.0,\"providerProxy/dc:type/literalsPerLanguage\":0.0,\"europeanaProxy/dc:type/taggedLiterals\":-1.0,\"europeanaProxy/dc:type/languages\":0.0,\"europeanaProxy/dc:type/literalsPerLanguage\":0.0,\"providerProxy/dc:identifier/taggedLiterals\":0.0,\"providerProxy/dc:identifier/languages\":0.0,\"providerProxy/dc:identifier/literalsPerLanguage\":0.0,\"europeanaProxy/dc:identifier/taggedLiterals\":-1.0,\"europeanaProxy/dc:identifier/languages\":0.0,\"europeanaProxy/dc:identifier/literalsPerLanguage\":0.0,\"providerProxy/dc:language/taggedLiterals\":0.0,\"providerProxy/dc:language/languages\":0.0,\"providerProxy/dc:language/literalsPerLanguage\":0.0,\"europeanaProxy/dc:language/taggedLiterals\":-1.0,\"europeanaProxy/dc:language/languages\":0.0,\"europeanaProxy/dc:language/literalsPerLanguage\":0.0,\"providerProxy/dc:coverage/taggedLiterals\":0.0,\"providerProxy/dc:coverage/languages\":0.0,\"providerProxy/dc:coverage/literalsPerLanguage\":0.0,\"europeanaProxy/dc:coverage/taggedLiterals\":-1.0,\"europeanaProxy/dc:coverage/languages\":0.0,\"europeanaProxy/dc:coverage/literalsPerLanguage\":0.0,\"providerProxy/dcterms:temporal/taggedLiterals\":0.0,\"providerProxy/dcterms:temporal/languages\":0.0,\"providerProxy/dcterms:temporal/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:temporal/taggedLiterals\":0.0,\"europeanaProxy/dcterms:temporal/languages\":0.0,\"europeanaProxy/dcterms:temporal/literalsPerLanguage\":0.0,\"providerProxy/dcterms:spatial/taggedLiterals\":0.0,\"providerProxy/dcterms:spatial/languages\":0.0,\"providerProxy/dcterms:spatial/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:spatial/taggedLiterals\":115.0,\"europeanaProxy/dcterms:spatial/languages\":98.0,\"europeanaProxy/dcterms:spatial/literalsPerLanguage\":1.173469,\"providerProxy/dc:subject/taggedLiterals\":0.0,\"providerProxy/dc:subject/languages\":0.0,\"providerProxy/dc:subject/literalsPerLanguage\":0.0,\"europeanaProxy/dc:subject/taggedLiterals\":-1.0,\"europeanaProxy/dc:subject/languages\":0.0,\"europeanaProxy/dc:subject/literalsPerLanguage\":0.0,\"providerProxy/dc:date/taggedLiterals\":-1.0,\"providerProxy/dc:date/languages\":0.0,\"providerProxy/dc:date/literalsPerLanguage\":0.0,\"europeanaProxy/dc:date/taggedLiterals\":-1.0,\"europeanaProxy/dc:date/languages\":0.0,\"europeanaProxy/dc:date/literalsPerLanguage\":0.0,\"providerProxy/dcterms:created/taggedLiterals\":-1.0,\"providerProxy/dcterms:created/languages\":0.0,\"providerProxy/dcterms:created/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:created/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:created/languages\":0.0,\"europeanaProxy/dcterms:created/literalsPerLanguage\":0.0,\"providerProxy/dcterms:issued/taggedLiterals\":0.0,\"providerProxy/dcterms:issued/languages\":0.0,\"providerProxy/dcterms:issued/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:issued/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:issued/languages\":0.0,\"europeanaProxy/dcterms:issued/literalsPerLanguage\":0.0,\"providerProxy/dcterms:extent/taggedLiterals\":0.0,\"providerProxy/dcterms:extent/languages\":0.0,\"providerProxy/dcterms:extent/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:extent/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:extent/languages\":0.0,\"europeanaProxy/dcterms:extent/literalsPerLanguage\":0.0,\"providerProxy/dcterms:medium/taggedLiterals\":-1.0,\"providerProxy/dcterms:medium/languages\":0.0,\"providerProxy/dcterms:medium/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:medium/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:medium/languages\":0.0,\"europeanaProxy/dcterms:medium/literalsPerLanguage\":0.0,\"providerProxy/dcterms:provenance/taggedLiterals\":-1.0,\"providerProxy/dcterms:provenance/languages\":0.0,\"providerProxy/dcterms:provenance/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:provenance/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:provenance/languages\":0.0,\"europeanaProxy/dcterms:provenance/literalsPerLanguage\":0.0,\"providerProxy/dcterms:hasPart/taggedLiterals\":0.0,\"providerProxy/dcterms:hasPart/languages\":0.0,\"providerProxy/dcterms:hasPart/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:hasPart/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:hasPart/languages\":0.0,\"europeanaProxy/dcterms:hasPart/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isPartOf/taggedLiterals\":-1.0,\"providerProxy/dcterms:isPartOf/languages\":0.0,\"providerProxy/dcterms:isPartOf/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isPartOf/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isPartOf/languages\":0.0,\"europeanaProxy/dcterms:isPartOf/literalsPerLanguage\":0.0,\"providerProxy/dc:format/taggedLiterals\":0.0,\"providerProxy/dc:format/languages\":0.0,\"providerProxy/dc:format/literalsPerLanguage\":0.0,\"europeanaProxy/dc:format/taggedLiterals\":-1.0,\"europeanaProxy/dc:format/languages\":0.0,\"europeanaProxy/dc:format/literalsPerLanguage\":0.0,\"providerProxy/dc:source/taggedLiterals\":-1.0,\"providerProxy/dc:source/languages\":0.0,\"providerProxy/dc:source/literalsPerLanguage\":0.0,\"europeanaProxy/dc:source/taggedLiterals\":-1.0,\"europeanaProxy/dc:source/languages\":0.0,\"europeanaProxy/dc:source/literalsPerLanguage\":0.0,\"providerProxy/dc:rights/taggedLiterals\":-1.0,\"providerProxy/dc:rights/languages\":0.0,\"providerProxy/dc:rights/literalsPerLanguage\":0.0,\"europeanaProxy/dc:rights/taggedLiterals\":-1.0,\"europeanaProxy/dc:rights/languages\":0.0,\"europeanaProxy/dc:rights/literalsPerLanguage\":0.0,\"providerProxy/dc:relation/taggedLiterals\":-1.0,\"providerProxy/dc:relation/languages\":0.0,\"providerProxy/dc:relation/literalsPerLanguage\":0.0,\"europeanaProxy/dc:relation/taggedLiterals\":-1.0,\"europeanaProxy/dc:relation/languages\":0.0,\"europeanaProxy/dc:relation/literalsPerLanguage\":0.0,\"providerProxy/edm:year/taggedLiterals\":-1.0,\"providerProxy/edm:year/languages\":0.0,\"providerProxy/edm:year/literalsPerLanguage\":0.0,\"europeanaProxy/edm:year/taggedLiterals\":0.0,\"europeanaProxy/edm:year/languages\":0.0,\"europeanaProxy/edm:year/literalsPerLanguage\":0.0,\"providerProxy/edm:userTag/taggedLiterals\":-1.0,\"providerProxy/edm:userTag/languages\":0.0,\"providerProxy/edm:userTag/literalsPerLanguage\":0.0,\"europeanaProxy/edm:userTag/taggedLiterals\":-1.0,\"europeanaProxy/edm:userTag/languages\":0.0,\"europeanaProxy/edm:userTag/literalsPerLanguage\":0.0,\"providerProxy/dcterms:conformsTo/taggedLiterals\":-1.0,\"providerProxy/dcterms:conformsTo/languages\":0.0,\"providerProxy/dcterms:conformsTo/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:conformsTo/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:conformsTo/languages\":0.0,\"europeanaProxy/dcterms:conformsTo/literalsPerLanguage\":0.0,\"providerProxy/dcterms:hasFormat/taggedLiterals\":-1.0,\"providerProxy/dcterms:hasFormat/languages\":0.0,\"providerProxy/dcterms:hasFormat/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:hasFormat/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:hasFormat/languages\":0.0,\"europeanaProxy/dcterms:hasFormat/literalsPerLanguage\":0.0,\"providerProxy/dcterms:hasVersion/taggedLiterals\":-1.0,\"providerProxy/dcterms:hasVersion/languages\":0.0,\"providerProxy/dcterms:hasVersion/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:hasVersion/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:hasVersion/languages\":0.0,\"europeanaProxy/dcterms:hasVersion/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isFormatOf/taggedLiterals\":-1.0,\"providerProxy/dcterms:isFormatOf/languages\":0.0,\"providerProxy/dcterms:isFormatOf/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isFormatOf/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isFormatOf/languages\":0.0,\"europeanaProxy/dcterms:isFormatOf/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isReferencedBy/taggedLiterals\":-1.0,\"providerProxy/dcterms:isReferencedBy/languages\":0.0,\"providerProxy/dcterms:isReferencedBy/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isReferencedBy/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isReferencedBy/languages\":0.0,\"europeanaProxy/dcterms:isReferencedBy/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isReplacedBy/taggedLiterals\":-1.0,\"providerProxy/dcterms:isReplacedBy/languages\":0.0,\"providerProxy/dcterms:isReplacedBy/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isReplacedBy/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isReplacedBy/languages\":0.0,\"europeanaProxy/dcterms:isReplacedBy/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isRequiredBy/taggedLiterals\":-1.0,\"providerProxy/dcterms:isRequiredBy/languages\":0.0,\"providerProxy/dcterms:isRequiredBy/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isRequiredBy/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isRequiredBy/languages\":0.0,\"europeanaProxy/dcterms:isRequiredBy/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isVersionOf/taggedLiterals\":-1.0,\"providerProxy/dcterms:isVersionOf/languages\":0.0,\"providerProxy/dcterms:isVersionOf/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isVersionOf/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isVersionOf/languages\":0.0,\"europeanaProxy/dcterms:isVersionOf/literalsPerLanguage\":0.0,\"providerProxy/dcterms:references/taggedLiterals\":-1.0,\"providerProxy/dcterms:references/languages\":0.0,\"providerProxy/dcterms:references/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:references/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:references/languages\":0.0,\"europeanaProxy/dcterms:references/literalsPerLanguage\":0.0,\"providerProxy/dcterms:replaces/taggedLiterals\":-1.0,\"providerProxy/dcterms:replaces/languages\":0.0,\"providerProxy/dcterms:replaces/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:replaces/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:replaces/languages\":0.0,\"europeanaProxy/dcterms:replaces/literalsPerLanguage\":0.0,\"providerProxy/dcterms:requires/taggedLiterals\":-1.0,\"providerProxy/dcterms:requires/languages\":0.0,\"providerProxy/dcterms:requires/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:requires/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:requires/languages\":0.0,\"europeanaProxy/dcterms:requires/literalsPerLanguage\":0.0,\"providerProxy/dcterms:tableOfContents/taggedLiterals\":-1.0,\"providerProxy/dcterms:tableOfContents/languages\":0.0,\"providerProxy/dcterms:tableOfContents/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:tableOfContents/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:tableOfContents/languages\":0.0,\"europeanaProxy/dcterms:tableOfContents/literalsPerLanguage\":0.0,\"providerProxy/edm:currentLocation/taggedLiterals\":-1.0,\"providerProxy/edm:currentLocation/languages\":0.0,\"providerProxy/edm:currentLocation/literalsPerLanguage\":0.0,\"europeanaProxy/edm:currentLocation/taggedLiterals\":-1.0,\"europeanaProxy/edm:currentLocation/languages\":0.0,\"europeanaProxy/edm:currentLocation/literalsPerLanguage\":0.0,\"providerProxy/edm:hasMet/taggedLiterals\":-1.0,\"providerProxy/edm:hasMet/languages\":0.0,\"providerProxy/edm:hasMet/literalsPerLanguage\":0.0,\"europeanaProxy/edm:hasMet/taggedLiterals\":-1.0,\"europeanaProxy/edm:hasMet/languages\":0.0,\"europeanaProxy/edm:hasMet/literalsPerLanguage\":0.0,\"providerProxy/edm:hasType/taggedLiterals\":-1.0,\"providerProxy/edm:hasType/languages\":0.0,\"providerProxy/edm:hasType/literalsPerLanguage\":0.0,\"europeanaProxy/edm:hasType/taggedLiterals\":-1.0,\"europeanaProxy/edm:hasType/languages\":0.0,\"europeanaProxy/edm:hasType/literalsPerLanguage\":0.0,\"providerProxy/edm:incorporates/taggedLiterals\":-1.0,\"providerProxy/edm:incorporates/languages\":0.0,\"providerProxy/edm:incorporates/literalsPerLanguage\":0.0,\"europeanaProxy/edm:incorporates/taggedLiterals\":-1.0,\"europeanaProxy/edm:incorporates/languages\":0.0,\"europeanaProxy/edm:incorporates/literalsPerLanguage\":0.0,\"providerProxy/edm:isDerivativeOf/taggedLiterals\":-1.0,\"providerProxy/edm:isDerivativeOf/languages\":0.0,\"providerProxy/edm:isDerivativeOf/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isDerivativeOf/taggedLiterals\":-1.0,\"europeanaProxy/edm:isDerivativeOf/languages\":0.0,\"europeanaProxy/edm:isDerivativeOf/literalsPerLanguage\":0.0,\"providerProxy/edm:isRelatedTo/taggedLiterals\":-1.0,\"providerProxy/edm:isRelatedTo/languages\":0.0,\"providerProxy/edm:isRelatedTo/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isRelatedTo/taggedLiterals\":-1.0,\"europeanaProxy/edm:isRelatedTo/languages\":0.0,\"europeanaProxy/edm:isRelatedTo/literalsPerLanguage\":0.0,\"providerProxy/edm:isRepresentationOf/taggedLiterals\":-1.0,\"providerProxy/edm:isRepresentationOf/languages\":0.0,\"providerProxy/edm:isRepresentationOf/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isRepresentationOf/taggedLiterals\":-1.0,\"europeanaProxy/edm:isRepresentationOf/languages\":0.0,\"europeanaProxy/edm:isRepresentationOf/literalsPerLanguage\":0.0,\"providerProxy/edm:isSimilarTo/taggedLiterals\":-1.0,\"providerProxy/edm:isSimilarTo/languages\":0.0,\"providerProxy/edm:isSimilarTo/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isSimilarTo/taggedLiterals\":-1.0,\"europeanaProxy/edm:isSimilarTo/languages\":0.0,\"europeanaProxy/edm:isSimilarTo/literalsPerLanguage\":0.0,\"providerProxy/edm:isSuccessorOf/taggedLiterals\":-1.0,\"providerProxy/edm:isSuccessorOf/languages\":0.0,\"providerProxy/edm:isSuccessorOf/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isSuccessorOf/taggedLiterals\":-1.0,\"europeanaProxy/edm:isSuccessorOf/languages\":0.0,\"europeanaProxy/edm:isSuccessorOf/literalsPerLanguage\":0.0,\"providerProxy/edm:realizes/taggedLiterals\":-1.0,\"providerProxy/edm:realizes/languages\":0.0,\"providerProxy/edm:realizes/literalsPerLanguage\":0.0,\"europeanaProxy/edm:realizes/taggedLiterals\":-1.0,\"europeanaProxy/edm:realizes/languages\":0.0,\"europeanaProxy/edm:realizes/literalsPerLanguage\":0.0,\"providerProxy/edm:wasPresentAt/taggedLiterals\":-1.0,\"providerProxy/edm:wasPresentAt/languages\":0.0,\"providerProxy/edm:wasPresentAt/literalsPerLanguage\":0.0,\"europeanaProxy/edm:wasPresentAt/taggedLiterals\":-1.0,\"europeanaProxy/edm:wasPresentAt/languages\":0.0,\"europeanaProxy/edm:wasPresentAt/literalsPerLanguage\":0.0,\"NumberOfLanguagesPerPropertyInProviderProxy\":0.0,\"NumberOfLanguagesPerPropertyInEuropeanaProxy\":98.0,\"NumberOfLanguagesPerPropertyInObject\":98.0,\"TaggedLiteralsInProviderProxy\":0.0,\"TaggedLiteralsInEuropeanaProxy\":115.0,\"DistinctLanguageCountInProviderProxy\":0.0,\"DistinctLanguageCountInEuropeanaProxy\":98.0,\"TaggedLiteralsInObject\":115.0,\"DistinctLanguagesInObject\":98.0,\"TaggedLiteralsPerLanguageInProviderProxy\":0.0,\"TaggedLiteralsPerLanguageInEuropeanaProxy\":1.173469,\"TaggedLiteralsPerLanguageInObject\":1.173469",
        languages
    );
  }

  @Test
  public void testGetLanguageMap() throws URISyntaxException, IOException {
    EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhJsonSchema());
    // calculator.setSkippedEntryChecker(new EdmSkippedEntryChecker());
    JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("general/test.json"));
    calculator.measure(cache);

    Map<String, Double> languages = calculator.getSaturationMap();
    assertNotNull(languages);
    assertEquals(312, languages.size());

    assertEquals(new Double(1.0), languages.get("providerProxy/dc:title/taggedLiterals")); languages.remove("providerProxy/dc:title/taggedLiterals");
    assertEquals(new Double(1.0), languages.get("providerProxy/dc:title/languages")); languages.remove("providerProxy/dc:title/languages");
    assertEquals(new Double(1.0), languages.get("providerProxy/dc:title/literalsPerLanguage")); languages.remove("providerProxy/dc:title/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:title/taggedLiterals")); languages.remove("europeanaProxy/dc:title/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:title/languages")); languages.remove("europeanaProxy/dc:title/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:title/literalsPerLanguage")); languages.remove("europeanaProxy/dc:title/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:alternative/taggedLiterals")); languages.remove("providerProxy/dcterms:alternative/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:alternative/languages")); languages.remove("providerProxy/dcterms:alternative/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:alternative/literalsPerLanguage")); languages.remove("providerProxy/dcterms:alternative/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:alternative/taggedLiterals")); languages.remove("europeanaProxy/dcterms:alternative/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:alternative/languages")); languages.remove("europeanaProxy/dcterms:alternative/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:alternative/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:alternative/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:description/taggedLiterals")); languages.remove("providerProxy/dc:description/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:description/languages")); languages.remove("providerProxy/dc:description/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:description/literalsPerLanguage")); languages.remove("providerProxy/dc:description/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:description/taggedLiterals")); languages.remove("europeanaProxy/dc:description/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:description/languages")); languages.remove("europeanaProxy/dc:description/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:description/literalsPerLanguage")); languages.remove("europeanaProxy/dc:description/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:creator/taggedLiterals")); languages.remove("providerProxy/dc:creator/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:creator/languages")); languages.remove("providerProxy/dc:creator/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:creator/literalsPerLanguage")); languages.remove("providerProxy/dc:creator/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:creator/taggedLiterals")); languages.remove("europeanaProxy/dc:creator/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:creator/languages")); languages.remove("europeanaProxy/dc:creator/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:creator/literalsPerLanguage")); languages.remove("europeanaProxy/dc:creator/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:publisher/taggedLiterals")); languages.remove("providerProxy/dc:publisher/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:publisher/languages")); languages.remove("providerProxy/dc:publisher/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:publisher/literalsPerLanguage")); languages.remove("providerProxy/dc:publisher/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:publisher/taggedLiterals")); languages.remove("europeanaProxy/dc:publisher/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:publisher/languages")); languages.remove("europeanaProxy/dc:publisher/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:publisher/literalsPerLanguage")); languages.remove("europeanaProxy/dc:publisher/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:contributor/taggedLiterals")); languages.remove("providerProxy/dc:contributor/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:contributor/languages")); languages.remove("providerProxy/dc:contributor/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:contributor/literalsPerLanguage")); languages.remove("providerProxy/dc:contributor/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:contributor/taggedLiterals")); languages.remove("europeanaProxy/dc:contributor/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:contributor/languages")); languages.remove("europeanaProxy/dc:contributor/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:contributor/literalsPerLanguage")); languages.remove("europeanaProxy/dc:contributor/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:type/taggedLiterals")); languages.remove("providerProxy/dc:type/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:type/languages")); languages.remove("providerProxy/dc:type/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:type/literalsPerLanguage")); languages.remove("providerProxy/dc:type/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:type/taggedLiterals")); languages.remove("europeanaProxy/dc:type/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:type/languages")); languages.remove("europeanaProxy/dc:type/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:type/literalsPerLanguage")); languages.remove("europeanaProxy/dc:type/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:identifier/taggedLiterals")); languages.remove("providerProxy/dc:identifier/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:identifier/languages")); languages.remove("providerProxy/dc:identifier/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:identifier/literalsPerLanguage")); languages.remove("providerProxy/dc:identifier/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:identifier/taggedLiterals")); languages.remove("europeanaProxy/dc:identifier/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:identifier/languages")); languages.remove("europeanaProxy/dc:identifier/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:identifier/literalsPerLanguage")); languages.remove("europeanaProxy/dc:identifier/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:language/taggedLiterals")); languages.remove("providerProxy/dc:language/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:language/languages")); languages.remove("providerProxy/dc:language/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:language/literalsPerLanguage")); languages.remove("providerProxy/dc:language/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:language/taggedLiterals")); languages.remove("europeanaProxy/dc:language/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:language/languages")); languages.remove("europeanaProxy/dc:language/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:language/literalsPerLanguage")); languages.remove("europeanaProxy/dc:language/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:coverage/taggedLiterals")); languages.remove("providerProxy/dc:coverage/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:coverage/languages")); languages.remove("providerProxy/dc:coverage/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:coverage/literalsPerLanguage")); languages.remove("providerProxy/dc:coverage/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:coverage/taggedLiterals")); languages.remove("europeanaProxy/dc:coverage/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:coverage/languages")); languages.remove("europeanaProxy/dc:coverage/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:coverage/literalsPerLanguage")); languages.remove("europeanaProxy/dc:coverage/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:temporal/taggedLiterals")); languages.remove("providerProxy/dcterms:temporal/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:temporal/languages")); languages.remove("providerProxy/dcterms:temporal/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:temporal/literalsPerLanguage")); languages.remove("providerProxy/dcterms:temporal/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:temporal/taggedLiterals")); languages.remove("europeanaProxy/dcterms:temporal/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:temporal/languages")); languages.remove("europeanaProxy/dcterms:temporal/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:temporal/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:temporal/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:spatial/taggedLiterals")); languages.remove("providerProxy/dcterms:spatial/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:spatial/languages")); languages.remove("providerProxy/dcterms:spatial/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:spatial/literalsPerLanguage")); languages.remove("providerProxy/dcterms:spatial/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:spatial/taggedLiterals")); languages.remove("europeanaProxy/dcterms:spatial/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:spatial/languages")); languages.remove("europeanaProxy/dcterms:spatial/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:spatial/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:spatial/literalsPerLanguage");
    assertEquals(new Double(5.0), languages.get("providerProxy/dc:subject/taggedLiterals")); languages.remove("providerProxy/dc:subject/taggedLiterals");
    assertEquals(new Double(2.0), languages.get("providerProxy/dc:subject/languages")); languages.remove("providerProxy/dc:subject/languages");
    assertEquals(new Double(2.5), languages.get("providerProxy/dc:subject/literalsPerLanguage")); languages.remove("providerProxy/dc:subject/literalsPerLanguage");
    assertEquals(new Double(12.0), languages.get("europeanaProxy/dc:subject/taggedLiterals")); languages.remove("europeanaProxy/dc:subject/taggedLiterals");
    assertEquals(new Double(12.0), languages.get("europeanaProxy/dc:subject/languages")); languages.remove("europeanaProxy/dc:subject/languages");
    assertEquals(new Double(1.0), languages.get("europeanaProxy/dc:subject/literalsPerLanguage")); languages.remove("europeanaProxy/dc:subject/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:date/taggedLiterals")); languages.remove("providerProxy/dc:date/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:date/languages")); languages.remove("providerProxy/dc:date/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:date/literalsPerLanguage")); languages.remove("providerProxy/dc:date/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:date/taggedLiterals")); languages.remove("europeanaProxy/dc:date/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:date/languages")); languages.remove("europeanaProxy/dc:date/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:date/literalsPerLanguage")); languages.remove("europeanaProxy/dc:date/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:created/taggedLiterals")); languages.remove("providerProxy/dcterms:created/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:created/languages")); languages.remove("providerProxy/dcterms:created/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:created/literalsPerLanguage")); languages.remove("providerProxy/dcterms:created/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:created/taggedLiterals")); languages.remove("europeanaProxy/dcterms:created/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:created/languages")); languages.remove("europeanaProxy/dcterms:created/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:created/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:created/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:issued/taggedLiterals")); languages.remove("providerProxy/dcterms:issued/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:issued/languages")); languages.remove("providerProxy/dcterms:issued/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:issued/literalsPerLanguage")); languages.remove("providerProxy/dcterms:issued/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:issued/taggedLiterals")); languages.remove("europeanaProxy/dcterms:issued/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:issued/languages")); languages.remove("europeanaProxy/dcterms:issued/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:issued/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:issued/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:extent/taggedLiterals")); languages.remove("providerProxy/dcterms:extent/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:extent/languages")); languages.remove("providerProxy/dcterms:extent/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:extent/literalsPerLanguage")); languages.remove("providerProxy/dcterms:extent/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:extent/taggedLiterals")); languages.remove("europeanaProxy/dcterms:extent/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:extent/languages")); languages.remove("europeanaProxy/dcterms:extent/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:extent/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:extent/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:medium/taggedLiterals")); languages.remove("providerProxy/dcterms:medium/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:medium/languages")); languages.remove("providerProxy/dcterms:medium/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:medium/literalsPerLanguage")); languages.remove("providerProxy/dcterms:medium/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:medium/taggedLiterals")); languages.remove("europeanaProxy/dcterms:medium/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:medium/languages")); languages.remove("europeanaProxy/dcterms:medium/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:medium/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:medium/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:provenance/taggedLiterals")); languages.remove("providerProxy/dcterms:provenance/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:provenance/languages")); languages.remove("providerProxy/dcterms:provenance/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:provenance/literalsPerLanguage")); languages.remove("providerProxy/dcterms:provenance/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:provenance/taggedLiterals")); languages.remove("europeanaProxy/dcterms:provenance/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:provenance/languages")); languages.remove("europeanaProxy/dcterms:provenance/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:provenance/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:provenance/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:hasPart/taggedLiterals")); languages.remove("providerProxy/dcterms:hasPart/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasPart/languages")); languages.remove("providerProxy/dcterms:hasPart/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasPart/literalsPerLanguage")); languages.remove("providerProxy/dcterms:hasPart/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:hasPart/taggedLiterals")); languages.remove("europeanaProxy/dcterms:hasPart/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:hasPart/languages")); languages.remove("europeanaProxy/dcterms:hasPart/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:hasPart/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:hasPart/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isPartOf/taggedLiterals")); languages.remove("providerProxy/dcterms:isPartOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isPartOf/languages")); languages.remove("providerProxy/dcterms:isPartOf/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isPartOf/literalsPerLanguage")); languages.remove("providerProxy/dcterms:isPartOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:isPartOf/taggedLiterals")); languages.remove("europeanaProxy/dcterms:isPartOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isPartOf/languages")); languages.remove("europeanaProxy/dcterms:isPartOf/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isPartOf/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:isPartOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:format/taggedLiterals")); languages.remove("providerProxy/dc:format/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:format/languages")); languages.remove("providerProxy/dc:format/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:format/literalsPerLanguage")); languages.remove("providerProxy/dc:format/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:format/taggedLiterals")); languages.remove("europeanaProxy/dc:format/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:format/languages")); languages.remove("europeanaProxy/dc:format/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:format/literalsPerLanguage")); languages.remove("europeanaProxy/dc:format/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:source/taggedLiterals")); languages.remove("providerProxy/dc:source/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:source/languages")); languages.remove("providerProxy/dc:source/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:source/literalsPerLanguage")); languages.remove("providerProxy/dc:source/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:source/taggedLiterals")); languages.remove("europeanaProxy/dc:source/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:source/languages")); languages.remove("europeanaProxy/dc:source/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:source/literalsPerLanguage")); languages.remove("europeanaProxy/dc:source/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:rights/taggedLiterals")); languages.remove("providerProxy/dc:rights/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:rights/languages")); languages.remove("providerProxy/dc:rights/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:rights/literalsPerLanguage")); languages.remove("providerProxy/dc:rights/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:rights/taggedLiterals")); languages.remove("europeanaProxy/dc:rights/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:rights/languages")); languages.remove("europeanaProxy/dc:rights/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:rights/literalsPerLanguage")); languages.remove("europeanaProxy/dc:rights/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:relation/taggedLiterals")); languages.remove("providerProxy/dc:relation/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:relation/languages")); languages.remove("providerProxy/dc:relation/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:relation/literalsPerLanguage")); languages.remove("providerProxy/dc:relation/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:relation/taggedLiterals")); languages.remove("europeanaProxy/dc:relation/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:relation/languages")); languages.remove("europeanaProxy/dc:relation/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:relation/literalsPerLanguage")); languages.remove("europeanaProxy/dc:relation/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:year/taggedLiterals")); languages.remove("providerProxy/edm:year/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:year/languages")); languages.remove("providerProxy/edm:year/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:year/literalsPerLanguage")); languages.remove("providerProxy/edm:year/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:year/taggedLiterals")); languages.remove("europeanaProxy/edm:year/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:year/languages")); languages.remove("europeanaProxy/edm:year/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:year/literalsPerLanguage")); languages.remove("europeanaProxy/edm:year/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:userTag/taggedLiterals")); languages.remove("providerProxy/edm:userTag/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:userTag/languages")); languages.remove("providerProxy/edm:userTag/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:userTag/literalsPerLanguage")); languages.remove("providerProxy/edm:userTag/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:userTag/taggedLiterals")); languages.remove("europeanaProxy/edm:userTag/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:userTag/languages")); languages.remove("europeanaProxy/edm:userTag/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:userTag/literalsPerLanguage")); languages.remove("europeanaProxy/edm:userTag/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:conformsTo/taggedLiterals")); languages.remove("providerProxy/dcterms:conformsTo/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:conformsTo/languages")); languages.remove("providerProxy/dcterms:conformsTo/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:conformsTo/literalsPerLanguage")); languages.remove("providerProxy/dcterms:conformsTo/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:conformsTo/taggedLiterals")); languages.remove("europeanaProxy/dcterms:conformsTo/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:conformsTo/languages")); languages.remove("europeanaProxy/dcterms:conformsTo/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:conformsTo/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:conformsTo/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasFormat/taggedLiterals")); languages.remove("providerProxy/dcterms:hasFormat/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasFormat/languages")); languages.remove("providerProxy/dcterms:hasFormat/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasFormat/literalsPerLanguage")); languages.remove("providerProxy/dcterms:hasFormat/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:hasFormat/taggedLiterals")); languages.remove("europeanaProxy/dcterms:hasFormat/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:hasFormat/languages")); languages.remove("europeanaProxy/dcterms:hasFormat/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:hasFormat/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:hasFormat/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:hasVersion/taggedLiterals")); languages.remove("providerProxy/dcterms:hasVersion/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasVersion/languages")); languages.remove("providerProxy/dcterms:hasVersion/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasVersion/literalsPerLanguage")); languages.remove("providerProxy/dcterms:hasVersion/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:hasVersion/taggedLiterals")); languages.remove("europeanaProxy/dcterms:hasVersion/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:hasVersion/languages")); languages.remove("europeanaProxy/dcterms:hasVersion/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:hasVersion/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:hasVersion/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:isFormatOf/taggedLiterals")); languages.remove("providerProxy/dcterms:isFormatOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isFormatOf/languages")); languages.remove("providerProxy/dcterms:isFormatOf/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isFormatOf/literalsPerLanguage")); languages.remove("providerProxy/dcterms:isFormatOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:isFormatOf/taggedLiterals")); languages.remove("europeanaProxy/dcterms:isFormatOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isFormatOf/languages")); languages.remove("europeanaProxy/dcterms:isFormatOf/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isFormatOf/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:isFormatOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:isReferencedBy/taggedLiterals")); languages.remove("providerProxy/dcterms:isReferencedBy/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isReferencedBy/languages")); languages.remove("providerProxy/dcterms:isReferencedBy/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isReferencedBy/literalsPerLanguage")); languages.remove("providerProxy/dcterms:isReferencedBy/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:isReferencedBy/taggedLiterals")); languages.remove("europeanaProxy/dcterms:isReferencedBy/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isReferencedBy/languages")); languages.remove("europeanaProxy/dcterms:isReferencedBy/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isReferencedBy/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:isReferencedBy/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:isReplacedBy/taggedLiterals")); languages.remove("providerProxy/dcterms:isReplacedBy/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isReplacedBy/languages")); languages.remove("providerProxy/dcterms:isReplacedBy/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isReplacedBy/literalsPerLanguage")); languages.remove("providerProxy/dcterms:isReplacedBy/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:isReplacedBy/taggedLiterals")); languages.remove("europeanaProxy/dcterms:isReplacedBy/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isReplacedBy/languages")); languages.remove("europeanaProxy/dcterms:isReplacedBy/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isReplacedBy/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:isReplacedBy/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:isRequiredBy/taggedLiterals")); languages.remove("providerProxy/dcterms:isRequiredBy/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isRequiredBy/languages")); languages.remove("providerProxy/dcterms:isRequiredBy/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isRequiredBy/literalsPerLanguage")); languages.remove("providerProxy/dcterms:isRequiredBy/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:isRequiredBy/taggedLiterals")); languages.remove("europeanaProxy/dcterms:isRequiredBy/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isRequiredBy/languages")); languages.remove("europeanaProxy/dcterms:isRequiredBy/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isRequiredBy/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:isRequiredBy/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:isVersionOf/taggedLiterals")); languages.remove("providerProxy/dcterms:isVersionOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isVersionOf/languages")); languages.remove("providerProxy/dcterms:isVersionOf/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isVersionOf/literalsPerLanguage")); languages.remove("providerProxy/dcterms:isVersionOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:isVersionOf/taggedLiterals")); languages.remove("europeanaProxy/dcterms:isVersionOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isVersionOf/languages")); languages.remove("europeanaProxy/dcterms:isVersionOf/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isVersionOf/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:isVersionOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:references/taggedLiterals")); languages.remove("providerProxy/dcterms:references/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:references/languages")); languages.remove("providerProxy/dcterms:references/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:references/literalsPerLanguage")); languages.remove("providerProxy/dcterms:references/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:references/taggedLiterals")); languages.remove("europeanaProxy/dcterms:references/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:references/languages")); languages.remove("europeanaProxy/dcterms:references/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:references/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:references/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:replaces/taggedLiterals")); languages.remove("providerProxy/dcterms:replaces/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:replaces/languages")); languages.remove("providerProxy/dcterms:replaces/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:replaces/literalsPerLanguage")); languages.remove("providerProxy/dcterms:replaces/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:replaces/taggedLiterals")); languages.remove("europeanaProxy/dcterms:replaces/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:replaces/languages")); languages.remove("europeanaProxy/dcterms:replaces/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:replaces/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:replaces/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:requires/taggedLiterals")); languages.remove("providerProxy/dcterms:requires/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:requires/languages")); languages.remove("providerProxy/dcterms:requires/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:requires/literalsPerLanguage")); languages.remove("providerProxy/dcterms:requires/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:requires/taggedLiterals")); languages.remove("europeanaProxy/dcterms:requires/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:requires/languages")); languages.remove("europeanaProxy/dcterms:requires/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:requires/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:requires/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:tableOfContents/taggedLiterals")); languages.remove("providerProxy/dcterms:tableOfContents/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:tableOfContents/languages")); languages.remove("providerProxy/dcterms:tableOfContents/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:tableOfContents/literalsPerLanguage")); languages.remove("providerProxy/dcterms:tableOfContents/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:tableOfContents/taggedLiterals")); languages.remove("europeanaProxy/dcterms:tableOfContents/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:tableOfContents/languages")); languages.remove("europeanaProxy/dcterms:tableOfContents/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:tableOfContents/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:tableOfContents/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:currentLocation/taggedLiterals")); languages.remove("providerProxy/edm:currentLocation/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:currentLocation/languages")); languages.remove("providerProxy/edm:currentLocation/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:currentLocation/literalsPerLanguage")); languages.remove("providerProxy/edm:currentLocation/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:currentLocation/taggedLiterals")); languages.remove("europeanaProxy/edm:currentLocation/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:currentLocation/languages")); languages.remove("europeanaProxy/edm:currentLocation/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:currentLocation/literalsPerLanguage")); languages.remove("europeanaProxy/edm:currentLocation/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:hasMet/taggedLiterals")); languages.remove("providerProxy/edm:hasMet/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:hasMet/languages")); languages.remove("providerProxy/edm:hasMet/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:hasMet/literalsPerLanguage")); languages.remove("providerProxy/edm:hasMet/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:hasMet/taggedLiterals")); languages.remove("europeanaProxy/edm:hasMet/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:hasMet/languages")); languages.remove("europeanaProxy/edm:hasMet/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:hasMet/literalsPerLanguage")); languages.remove("europeanaProxy/edm:hasMet/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:hasType/taggedLiterals")); languages.remove("providerProxy/edm:hasType/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:hasType/languages")); languages.remove("providerProxy/edm:hasType/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:hasType/literalsPerLanguage")); languages.remove("providerProxy/edm:hasType/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:hasType/taggedLiterals")); languages.remove("europeanaProxy/edm:hasType/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:hasType/languages")); languages.remove("europeanaProxy/edm:hasType/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:hasType/literalsPerLanguage")); languages.remove("europeanaProxy/edm:hasType/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:incorporates/taggedLiterals")); languages.remove("providerProxy/edm:incorporates/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:incorporates/languages")); languages.remove("providerProxy/edm:incorporates/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:incorporates/literalsPerLanguage")); languages.remove("providerProxy/edm:incorporates/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:incorporates/taggedLiterals")); languages.remove("europeanaProxy/edm:incorporates/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:incorporates/languages")); languages.remove("europeanaProxy/edm:incorporates/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:incorporates/literalsPerLanguage")); languages.remove("europeanaProxy/edm:incorporates/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:isDerivativeOf/taggedLiterals")); languages.remove("providerProxy/edm:isDerivativeOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isDerivativeOf/languages")); languages.remove("providerProxy/edm:isDerivativeOf/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isDerivativeOf/literalsPerLanguage")); languages.remove("providerProxy/edm:isDerivativeOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:isDerivativeOf/taggedLiterals")); languages.remove("europeanaProxy/edm:isDerivativeOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isDerivativeOf/languages")); languages.remove("europeanaProxy/edm:isDerivativeOf/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isDerivativeOf/literalsPerLanguage")); languages.remove("europeanaProxy/edm:isDerivativeOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:isRelatedTo/taggedLiterals")); languages.remove("providerProxy/edm:isRelatedTo/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isRelatedTo/languages")); languages.remove("providerProxy/edm:isRelatedTo/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isRelatedTo/literalsPerLanguage")); languages.remove("providerProxy/edm:isRelatedTo/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:isRelatedTo/taggedLiterals")); languages.remove("europeanaProxy/edm:isRelatedTo/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isRelatedTo/languages")); languages.remove("europeanaProxy/edm:isRelatedTo/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isRelatedTo/literalsPerLanguage")); languages.remove("europeanaProxy/edm:isRelatedTo/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:isRepresentationOf/taggedLiterals")); languages.remove("providerProxy/edm:isRepresentationOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isRepresentationOf/languages")); languages.remove("providerProxy/edm:isRepresentationOf/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isRepresentationOf/literalsPerLanguage")); languages.remove("providerProxy/edm:isRepresentationOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:isRepresentationOf/taggedLiterals")); languages.remove("europeanaProxy/edm:isRepresentationOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isRepresentationOf/languages")); languages.remove("europeanaProxy/edm:isRepresentationOf/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isRepresentationOf/literalsPerLanguage")); languages.remove("europeanaProxy/edm:isRepresentationOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:isSimilarTo/taggedLiterals")); languages.remove("providerProxy/edm:isSimilarTo/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isSimilarTo/languages")); languages.remove("providerProxy/edm:isSimilarTo/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isSimilarTo/literalsPerLanguage")); languages.remove("providerProxy/edm:isSimilarTo/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:isSimilarTo/taggedLiterals")); languages.remove("europeanaProxy/edm:isSimilarTo/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isSimilarTo/languages")); languages.remove("europeanaProxy/edm:isSimilarTo/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isSimilarTo/literalsPerLanguage")); languages.remove("europeanaProxy/edm:isSimilarTo/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:isSuccessorOf/taggedLiterals")); languages.remove("providerProxy/edm:isSuccessorOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isSuccessorOf/languages")); languages.remove("providerProxy/edm:isSuccessorOf/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isSuccessorOf/literalsPerLanguage")); languages.remove("providerProxy/edm:isSuccessorOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:isSuccessorOf/taggedLiterals")); languages.remove("europeanaProxy/edm:isSuccessorOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isSuccessorOf/languages")); languages.remove("europeanaProxy/edm:isSuccessorOf/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isSuccessorOf/literalsPerLanguage")); languages.remove("europeanaProxy/edm:isSuccessorOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:realizes/taggedLiterals")); languages.remove("providerProxy/edm:realizes/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:realizes/languages")); languages.remove("providerProxy/edm:realizes/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:realizes/literalsPerLanguage")); languages.remove("providerProxy/edm:realizes/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:realizes/taggedLiterals")); languages.remove("europeanaProxy/edm:realizes/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:realizes/languages")); languages.remove("europeanaProxy/edm:realizes/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:realizes/literalsPerLanguage")); languages.remove("europeanaProxy/edm:realizes/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:wasPresentAt/taggedLiterals")); languages.remove("providerProxy/edm:wasPresentAt/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:wasPresentAt/languages")); languages.remove("providerProxy/edm:wasPresentAt/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:wasPresentAt/literalsPerLanguage")); languages.remove("providerProxy/edm:wasPresentAt/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:wasPresentAt/taggedLiterals")); languages.remove("europeanaProxy/edm:wasPresentAt/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:wasPresentAt/languages")); languages.remove("europeanaProxy/edm:wasPresentAt/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:wasPresentAt/literalsPerLanguage")); languages.remove("europeanaProxy/edm:wasPresentAt/literalsPerLanguage");
    assertEquals(new Double(1.5), languages.get("NumberOfLanguagesPerPropertyInProviderProxy")); languages.remove("NumberOfLanguagesPerPropertyInProviderProxy");
    assertEquals(new Double(12.0), languages.get("NumberOfLanguagesPerPropertyInEuropeanaProxy")); languages.remove("NumberOfLanguagesPerPropertyInEuropeanaProxy");
    assertEquals(new Double(5.0), languages.get("NumberOfLanguagesPerPropertyInObject")); languages.remove("NumberOfLanguagesPerPropertyInObject");
    assertEquals(new Double(6.0), languages.get("TaggedLiteralsInProviderProxy")); languages.remove("TaggedLiteralsInProviderProxy");
    assertEquals(new Double(12.0), languages.get("TaggedLiteralsInEuropeanaProxy")); languages.remove("TaggedLiteralsInEuropeanaProxy");
    assertEquals(new Double(2.0), languages.get("DistinctLanguageCountInProviderProxy")); languages.remove("DistinctLanguageCountInProviderProxy");
    assertEquals(new Double(12.0), languages.get("DistinctLanguageCountInEuropeanaProxy")); languages.remove("DistinctLanguageCountInEuropeanaProxy");
    assertEquals(new Double(18.0), languages.get("TaggedLiteralsInObject")); languages.remove("TaggedLiteralsInObject");
    assertEquals(new Double(12.0), languages.get("DistinctLanguagesInObject")); languages.remove("DistinctLanguagesInObject");
    assertEquals(new Double(3.0), languages.get("TaggedLiteralsPerLanguageInProviderProxy")); languages.remove("TaggedLiteralsPerLanguageInProviderProxy");
    assertEquals(new Double(1.0), languages.get("TaggedLiteralsPerLanguageInEuropeanaProxy")); languages.remove("TaggedLiteralsPerLanguageInEuropeanaProxy");
    assertEquals(new Double(1.5), languages.get("TaggedLiteralsPerLanguageInObject")); languages.remove("TaggedLiteralsPerLanguageInObject");

    assertEquals("Language has the following values: " + StringUtils.join(languages.keySet(), ", "),
        0, languages.size());
  }

  @Test
  public void testGetLanguageMapSkipped() throws URISyntaxException, IOException {
    EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhJsonSchema());
    calculator.setSkippedEntryChecker(new EdmSkippedEntryChecker());
    JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("general/test.json"));
    calculator.measure(cache);

    Map<String, Double> languages = calculator.getSaturationMap();
    assertNotNull(languages);
    assertEquals(312, languages.size());

    assertEquals(new Double(1.0), languages.get("providerProxy/dc:title/taggedLiterals")); languages.remove("providerProxy/dc:title/taggedLiterals");
    assertEquals(new Double(1.0), languages.get("providerProxy/dc:title/languages")); languages.remove("providerProxy/dc:title/languages");
    assertEquals(new Double(1.0), languages.get("providerProxy/dc:title/literalsPerLanguage")); languages.remove("providerProxy/dc:title/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:title/taggedLiterals")); languages.remove("europeanaProxy/dc:title/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:title/languages")); languages.remove("europeanaProxy/dc:title/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:title/literalsPerLanguage")); languages.remove("europeanaProxy/dc:title/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:alternative/taggedLiterals")); languages.remove("providerProxy/dcterms:alternative/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:alternative/languages")); languages.remove("providerProxy/dcterms:alternative/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:alternative/literalsPerLanguage")); languages.remove("providerProxy/dcterms:alternative/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:alternative/taggedLiterals")); languages.remove("europeanaProxy/dcterms:alternative/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:alternative/languages")); languages.remove("europeanaProxy/dcterms:alternative/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:alternative/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:alternative/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:description/taggedLiterals")); languages.remove("providerProxy/dc:description/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:description/languages")); languages.remove("providerProxy/dc:description/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:description/literalsPerLanguage")); languages.remove("providerProxy/dc:description/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:description/taggedLiterals")); languages.remove("europeanaProxy/dc:description/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:description/languages")); languages.remove("europeanaProxy/dc:description/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:description/literalsPerLanguage")); languages.remove("europeanaProxy/dc:description/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:creator/taggedLiterals")); languages.remove("providerProxy/dc:creator/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:creator/languages")); languages.remove("providerProxy/dc:creator/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:creator/literalsPerLanguage")); languages.remove("providerProxy/dc:creator/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:creator/taggedLiterals")); languages.remove("europeanaProxy/dc:creator/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:creator/languages")); languages.remove("europeanaProxy/dc:creator/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:creator/literalsPerLanguage")); languages.remove("europeanaProxy/dc:creator/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:publisher/taggedLiterals")); languages.remove("providerProxy/dc:publisher/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:publisher/languages")); languages.remove("providerProxy/dc:publisher/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:publisher/literalsPerLanguage")); languages.remove("providerProxy/dc:publisher/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:publisher/taggedLiterals")); languages.remove("europeanaProxy/dc:publisher/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:publisher/languages")); languages.remove("europeanaProxy/dc:publisher/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:publisher/literalsPerLanguage")); languages.remove("europeanaProxy/dc:publisher/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:contributor/taggedLiterals")); languages.remove("providerProxy/dc:contributor/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:contributor/languages")); languages.remove("providerProxy/dc:contributor/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:contributor/literalsPerLanguage")); languages.remove("providerProxy/dc:contributor/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:contributor/taggedLiterals")); languages.remove("europeanaProxy/dc:contributor/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:contributor/languages")); languages.remove("europeanaProxy/dc:contributor/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:contributor/literalsPerLanguage")); languages.remove("europeanaProxy/dc:contributor/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:type/taggedLiterals")); languages.remove("providerProxy/dc:type/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:type/languages")); languages.remove("providerProxy/dc:type/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:type/literalsPerLanguage")); languages.remove("providerProxy/dc:type/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:type/taggedLiterals")); languages.remove("europeanaProxy/dc:type/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:type/languages")); languages.remove("europeanaProxy/dc:type/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:type/literalsPerLanguage")); languages.remove("europeanaProxy/dc:type/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:identifier/taggedLiterals")); languages.remove("providerProxy/dc:identifier/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:identifier/languages")); languages.remove("providerProxy/dc:identifier/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:identifier/literalsPerLanguage")); languages.remove("providerProxy/dc:identifier/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:identifier/taggedLiterals")); languages.remove("europeanaProxy/dc:identifier/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:identifier/languages")); languages.remove("europeanaProxy/dc:identifier/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:identifier/literalsPerLanguage")); languages.remove("europeanaProxy/dc:identifier/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:language/taggedLiterals")); languages.remove("providerProxy/dc:language/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:language/languages")); languages.remove("providerProxy/dc:language/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:language/literalsPerLanguage")); languages.remove("providerProxy/dc:language/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:language/taggedLiterals")); languages.remove("europeanaProxy/dc:language/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:language/languages")); languages.remove("europeanaProxy/dc:language/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:language/literalsPerLanguage")); languages.remove("europeanaProxy/dc:language/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:coverage/taggedLiterals")); languages.remove("providerProxy/dc:coverage/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:coverage/languages")); languages.remove("providerProxy/dc:coverage/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:coverage/literalsPerLanguage")); languages.remove("providerProxy/dc:coverage/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:coverage/taggedLiterals")); languages.remove("europeanaProxy/dc:coverage/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:coverage/languages")); languages.remove("europeanaProxy/dc:coverage/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:coverage/literalsPerLanguage")); languages.remove("europeanaProxy/dc:coverage/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:temporal/taggedLiterals")); languages.remove("providerProxy/dcterms:temporal/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:temporal/languages")); languages.remove("providerProxy/dcterms:temporal/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:temporal/literalsPerLanguage")); languages.remove("providerProxy/dcterms:temporal/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:temporal/taggedLiterals")); languages.remove("europeanaProxy/dcterms:temporal/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:temporal/languages")); languages.remove("europeanaProxy/dcterms:temporal/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:temporal/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:temporal/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:spatial/taggedLiterals")); languages.remove("providerProxy/dcterms:spatial/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:spatial/languages")); languages.remove("providerProxy/dcterms:spatial/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:spatial/literalsPerLanguage")); languages.remove("providerProxy/dcterms:spatial/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:spatial/taggedLiterals")); languages.remove("europeanaProxy/dcterms:spatial/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:spatial/languages")); languages.remove("europeanaProxy/dcterms:spatial/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:spatial/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:spatial/literalsPerLanguage");
    assertEquals(new Double(5.0), languages.get("providerProxy/dc:subject/taggedLiterals")); languages.remove("providerProxy/dc:subject/taggedLiterals");
    assertEquals(new Double(2.0), languages.get("providerProxy/dc:subject/languages")); languages.remove("providerProxy/dc:subject/languages");
    assertEquals(new Double(2.5), languages.get("providerProxy/dc:subject/literalsPerLanguage")); languages.remove("providerProxy/dc:subject/literalsPerLanguage");
    assertEquals(new Double(12.0), languages.get("europeanaProxy/dc:subject/taggedLiterals")); languages.remove("europeanaProxy/dc:subject/taggedLiterals");
    assertEquals(new Double(12.0), languages.get("europeanaProxy/dc:subject/languages")); languages.remove("europeanaProxy/dc:subject/languages");
    assertEquals(new Double(1.0), languages.get("europeanaProxy/dc:subject/literalsPerLanguage")); languages.remove("europeanaProxy/dc:subject/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:date/taggedLiterals")); languages.remove("providerProxy/dc:date/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:date/languages")); languages.remove("providerProxy/dc:date/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:date/literalsPerLanguage")); languages.remove("providerProxy/dc:date/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:date/taggedLiterals")); languages.remove("europeanaProxy/dc:date/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:date/languages")); languages.remove("europeanaProxy/dc:date/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:date/literalsPerLanguage")); languages.remove("europeanaProxy/dc:date/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:created/taggedLiterals")); languages.remove("providerProxy/dcterms:created/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:created/languages")); languages.remove("providerProxy/dcterms:created/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:created/literalsPerLanguage")); languages.remove("providerProxy/dcterms:created/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:created/taggedLiterals")); languages.remove("europeanaProxy/dcterms:created/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:created/languages")); languages.remove("europeanaProxy/dcterms:created/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:created/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:created/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:issued/taggedLiterals")); languages.remove("providerProxy/dcterms:issued/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:issued/languages")); languages.remove("providerProxy/dcterms:issued/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:issued/literalsPerLanguage")); languages.remove("providerProxy/dcterms:issued/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:issued/taggedLiterals")); languages.remove("europeanaProxy/dcterms:issued/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:issued/languages")); languages.remove("europeanaProxy/dcterms:issued/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:issued/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:issued/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:extent/taggedLiterals")); languages.remove("providerProxy/dcterms:extent/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:extent/languages")); languages.remove("providerProxy/dcterms:extent/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:extent/literalsPerLanguage")); languages.remove("providerProxy/dcterms:extent/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:extent/taggedLiterals")); languages.remove("europeanaProxy/dcterms:extent/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:extent/languages")); languages.remove("europeanaProxy/dcterms:extent/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:extent/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:extent/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:medium/taggedLiterals")); languages.remove("providerProxy/dcterms:medium/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:medium/languages")); languages.remove("providerProxy/dcterms:medium/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:medium/literalsPerLanguage")); languages.remove("providerProxy/dcterms:medium/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:medium/taggedLiterals")); languages.remove("europeanaProxy/dcterms:medium/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:medium/languages")); languages.remove("europeanaProxy/dcterms:medium/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:medium/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:medium/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:provenance/taggedLiterals")); languages.remove("providerProxy/dcterms:provenance/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:provenance/languages")); languages.remove("providerProxy/dcterms:provenance/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:provenance/literalsPerLanguage")); languages.remove("providerProxy/dcterms:provenance/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:provenance/taggedLiterals")); languages.remove("europeanaProxy/dcterms:provenance/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:provenance/languages")); languages.remove("europeanaProxy/dcterms:provenance/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:provenance/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:provenance/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:hasPart/taggedLiterals")); languages.remove("providerProxy/dcterms:hasPart/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasPart/languages")); languages.remove("providerProxy/dcterms:hasPart/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasPart/literalsPerLanguage")); languages.remove("providerProxy/dcterms:hasPart/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:hasPart/taggedLiterals")); languages.remove("europeanaProxy/dcterms:hasPart/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:hasPart/languages")); languages.remove("europeanaProxy/dcterms:hasPart/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:hasPart/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:hasPart/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isPartOf/taggedLiterals")); languages.remove("providerProxy/dcterms:isPartOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isPartOf/languages")); languages.remove("providerProxy/dcterms:isPartOf/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isPartOf/literalsPerLanguage")); languages.remove("providerProxy/dcterms:isPartOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:isPartOf/taggedLiterals")); languages.remove("europeanaProxy/dcterms:isPartOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isPartOf/languages")); languages.remove("europeanaProxy/dcterms:isPartOf/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isPartOf/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:isPartOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:format/taggedLiterals")); languages.remove("providerProxy/dc:format/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:format/languages")); languages.remove("providerProxy/dc:format/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:format/literalsPerLanguage")); languages.remove("providerProxy/dc:format/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:format/taggedLiterals")); languages.remove("europeanaProxy/dc:format/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:format/languages")); languages.remove("europeanaProxy/dc:format/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:format/literalsPerLanguage")); languages.remove("europeanaProxy/dc:format/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:source/taggedLiterals")); languages.remove("providerProxy/dc:source/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:source/languages")); languages.remove("providerProxy/dc:source/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:source/literalsPerLanguage")); languages.remove("providerProxy/dc:source/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:source/taggedLiterals")); languages.remove("europeanaProxy/dc:source/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:source/languages")); languages.remove("europeanaProxy/dc:source/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:source/literalsPerLanguage")); languages.remove("europeanaProxy/dc:source/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:rights/taggedLiterals")); languages.remove("providerProxy/dc:rights/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:rights/languages")); languages.remove("providerProxy/dc:rights/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:rights/literalsPerLanguage")); languages.remove("providerProxy/dc:rights/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:rights/taggedLiterals")); languages.remove("europeanaProxy/dc:rights/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:rights/languages")); languages.remove("europeanaProxy/dc:rights/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:rights/literalsPerLanguage")); languages.remove("europeanaProxy/dc:rights/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:relation/taggedLiterals")); languages.remove("providerProxy/dc:relation/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:relation/languages")); languages.remove("providerProxy/dc:relation/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:relation/literalsPerLanguage")); languages.remove("providerProxy/dc:relation/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:relation/taggedLiterals")); languages.remove("europeanaProxy/dc:relation/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:relation/languages")); languages.remove("europeanaProxy/dc:relation/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:relation/literalsPerLanguage")); languages.remove("europeanaProxy/dc:relation/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:year/taggedLiterals")); languages.remove("providerProxy/edm:year/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:year/languages")); languages.remove("providerProxy/edm:year/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:year/literalsPerLanguage")); languages.remove("providerProxy/edm:year/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:year/taggedLiterals")); languages.remove("europeanaProxy/edm:year/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:year/languages")); languages.remove("europeanaProxy/edm:year/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:year/literalsPerLanguage")); languages.remove("europeanaProxy/edm:year/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:userTag/taggedLiterals")); languages.remove("providerProxy/edm:userTag/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:userTag/languages")); languages.remove("providerProxy/edm:userTag/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:userTag/literalsPerLanguage")); languages.remove("providerProxy/edm:userTag/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:userTag/taggedLiterals")); languages.remove("europeanaProxy/edm:userTag/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:userTag/languages")); languages.remove("europeanaProxy/edm:userTag/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:userTag/literalsPerLanguage")); languages.remove("europeanaProxy/edm:userTag/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:conformsTo/taggedLiterals")); languages.remove("providerProxy/dcterms:conformsTo/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:conformsTo/languages")); languages.remove("providerProxy/dcterms:conformsTo/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:conformsTo/literalsPerLanguage")); languages.remove("providerProxy/dcterms:conformsTo/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:conformsTo/taggedLiterals")); languages.remove("europeanaProxy/dcterms:conformsTo/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:conformsTo/languages")); languages.remove("europeanaProxy/dcterms:conformsTo/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:conformsTo/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:conformsTo/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasFormat/taggedLiterals")); languages.remove("providerProxy/dcterms:hasFormat/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasFormat/languages")); languages.remove("providerProxy/dcterms:hasFormat/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasFormat/literalsPerLanguage")); languages.remove("providerProxy/dcterms:hasFormat/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:hasFormat/taggedLiterals")); languages.remove("europeanaProxy/dcterms:hasFormat/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:hasFormat/languages")); languages.remove("europeanaProxy/dcterms:hasFormat/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:hasFormat/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:hasFormat/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:hasVersion/taggedLiterals")); languages.remove("providerProxy/dcterms:hasVersion/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasVersion/languages")); languages.remove("providerProxy/dcterms:hasVersion/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasVersion/literalsPerLanguage")); languages.remove("providerProxy/dcterms:hasVersion/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:hasVersion/taggedLiterals")); languages.remove("europeanaProxy/dcterms:hasVersion/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:hasVersion/languages")); languages.remove("europeanaProxy/dcterms:hasVersion/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:hasVersion/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:hasVersion/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:isFormatOf/taggedLiterals")); languages.remove("providerProxy/dcterms:isFormatOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isFormatOf/languages")); languages.remove("providerProxy/dcterms:isFormatOf/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isFormatOf/literalsPerLanguage")); languages.remove("providerProxy/dcterms:isFormatOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:isFormatOf/taggedLiterals")); languages.remove("europeanaProxy/dcterms:isFormatOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isFormatOf/languages")); languages.remove("europeanaProxy/dcterms:isFormatOf/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isFormatOf/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:isFormatOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:isReferencedBy/taggedLiterals")); languages.remove("providerProxy/dcterms:isReferencedBy/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isReferencedBy/languages")); languages.remove("providerProxy/dcterms:isReferencedBy/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isReferencedBy/literalsPerLanguage")); languages.remove("providerProxy/dcterms:isReferencedBy/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:isReferencedBy/taggedLiterals")); languages.remove("europeanaProxy/dcterms:isReferencedBy/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isReferencedBy/languages")); languages.remove("europeanaProxy/dcterms:isReferencedBy/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isReferencedBy/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:isReferencedBy/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:isReplacedBy/taggedLiterals")); languages.remove("providerProxy/dcterms:isReplacedBy/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isReplacedBy/languages")); languages.remove("providerProxy/dcterms:isReplacedBy/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isReplacedBy/literalsPerLanguage")); languages.remove("providerProxy/dcterms:isReplacedBy/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:isReplacedBy/taggedLiterals")); languages.remove("europeanaProxy/dcterms:isReplacedBy/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isReplacedBy/languages")); languages.remove("europeanaProxy/dcterms:isReplacedBy/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isReplacedBy/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:isReplacedBy/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:isRequiredBy/taggedLiterals")); languages.remove("providerProxy/dcterms:isRequiredBy/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isRequiredBy/languages")); languages.remove("providerProxy/dcterms:isRequiredBy/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isRequiredBy/literalsPerLanguage")); languages.remove("providerProxy/dcterms:isRequiredBy/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:isRequiredBy/taggedLiterals")); languages.remove("europeanaProxy/dcterms:isRequiredBy/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isRequiredBy/languages")); languages.remove("europeanaProxy/dcterms:isRequiredBy/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isRequiredBy/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:isRequiredBy/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:isVersionOf/taggedLiterals")); languages.remove("providerProxy/dcterms:isVersionOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isVersionOf/languages")); languages.remove("providerProxy/dcterms:isVersionOf/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isVersionOf/literalsPerLanguage")); languages.remove("providerProxy/dcterms:isVersionOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:isVersionOf/taggedLiterals")); languages.remove("europeanaProxy/dcterms:isVersionOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isVersionOf/languages")); languages.remove("europeanaProxy/dcterms:isVersionOf/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isVersionOf/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:isVersionOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:references/taggedLiterals")); languages.remove("providerProxy/dcterms:references/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:references/languages")); languages.remove("providerProxy/dcterms:references/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:references/literalsPerLanguage")); languages.remove("providerProxy/dcterms:references/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:references/taggedLiterals")); languages.remove("europeanaProxy/dcterms:references/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:references/languages")); languages.remove("europeanaProxy/dcterms:references/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:references/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:references/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:replaces/taggedLiterals")); languages.remove("providerProxy/dcterms:replaces/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:replaces/languages")); languages.remove("providerProxy/dcterms:replaces/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:replaces/literalsPerLanguage")); languages.remove("providerProxy/dcterms:replaces/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:replaces/taggedLiterals")); languages.remove("europeanaProxy/dcterms:replaces/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:replaces/languages")); languages.remove("europeanaProxy/dcterms:replaces/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:replaces/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:replaces/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:requires/taggedLiterals")); languages.remove("providerProxy/dcterms:requires/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:requires/languages")); languages.remove("providerProxy/dcterms:requires/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:requires/literalsPerLanguage")); languages.remove("providerProxy/dcterms:requires/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:requires/taggedLiterals")); languages.remove("europeanaProxy/dcterms:requires/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:requires/languages")); languages.remove("europeanaProxy/dcterms:requires/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:requires/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:requires/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:tableOfContents/taggedLiterals")); languages.remove("providerProxy/dcterms:tableOfContents/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:tableOfContents/languages")); languages.remove("providerProxy/dcterms:tableOfContents/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:tableOfContents/literalsPerLanguage")); languages.remove("providerProxy/dcterms:tableOfContents/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:tableOfContents/taggedLiterals")); languages.remove("europeanaProxy/dcterms:tableOfContents/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:tableOfContents/languages")); languages.remove("europeanaProxy/dcterms:tableOfContents/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:tableOfContents/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:tableOfContents/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:currentLocation/taggedLiterals")); languages.remove("providerProxy/edm:currentLocation/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:currentLocation/languages")); languages.remove("providerProxy/edm:currentLocation/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:currentLocation/literalsPerLanguage")); languages.remove("providerProxy/edm:currentLocation/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:currentLocation/taggedLiterals")); languages.remove("europeanaProxy/edm:currentLocation/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:currentLocation/languages")); languages.remove("europeanaProxy/edm:currentLocation/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:currentLocation/literalsPerLanguage")); languages.remove("europeanaProxy/edm:currentLocation/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:hasMet/taggedLiterals")); languages.remove("providerProxy/edm:hasMet/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:hasMet/languages")); languages.remove("providerProxy/edm:hasMet/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:hasMet/literalsPerLanguage")); languages.remove("providerProxy/edm:hasMet/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:hasMet/taggedLiterals")); languages.remove("europeanaProxy/edm:hasMet/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:hasMet/languages")); languages.remove("europeanaProxy/edm:hasMet/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:hasMet/literalsPerLanguage")); languages.remove("europeanaProxy/edm:hasMet/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:hasType/taggedLiterals")); languages.remove("providerProxy/edm:hasType/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:hasType/languages")); languages.remove("providerProxy/edm:hasType/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:hasType/literalsPerLanguage")); languages.remove("providerProxy/edm:hasType/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:hasType/taggedLiterals")); languages.remove("europeanaProxy/edm:hasType/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:hasType/languages")); languages.remove("europeanaProxy/edm:hasType/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:hasType/literalsPerLanguage")); languages.remove("europeanaProxy/edm:hasType/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:incorporates/taggedLiterals")); languages.remove("providerProxy/edm:incorporates/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:incorporates/languages")); languages.remove("providerProxy/edm:incorporates/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:incorporates/literalsPerLanguage")); languages.remove("providerProxy/edm:incorporates/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:incorporates/taggedLiterals")); languages.remove("europeanaProxy/edm:incorporates/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:incorporates/languages")); languages.remove("europeanaProxy/edm:incorporates/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:incorporates/literalsPerLanguage")); languages.remove("europeanaProxy/edm:incorporates/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:isDerivativeOf/taggedLiterals")); languages.remove("providerProxy/edm:isDerivativeOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isDerivativeOf/languages")); languages.remove("providerProxy/edm:isDerivativeOf/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isDerivativeOf/literalsPerLanguage")); languages.remove("providerProxy/edm:isDerivativeOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:isDerivativeOf/taggedLiterals")); languages.remove("europeanaProxy/edm:isDerivativeOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isDerivativeOf/languages")); languages.remove("europeanaProxy/edm:isDerivativeOf/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isDerivativeOf/literalsPerLanguage")); languages.remove("europeanaProxy/edm:isDerivativeOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:isRelatedTo/taggedLiterals")); languages.remove("providerProxy/edm:isRelatedTo/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isRelatedTo/languages")); languages.remove("providerProxy/edm:isRelatedTo/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isRelatedTo/literalsPerLanguage")); languages.remove("providerProxy/edm:isRelatedTo/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:isRelatedTo/taggedLiterals")); languages.remove("europeanaProxy/edm:isRelatedTo/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isRelatedTo/languages")); languages.remove("europeanaProxy/edm:isRelatedTo/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isRelatedTo/literalsPerLanguage")); languages.remove("europeanaProxy/edm:isRelatedTo/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:isRepresentationOf/taggedLiterals")); languages.remove("providerProxy/edm:isRepresentationOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isRepresentationOf/languages")); languages.remove("providerProxy/edm:isRepresentationOf/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isRepresentationOf/literalsPerLanguage")); languages.remove("providerProxy/edm:isRepresentationOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:isRepresentationOf/taggedLiterals")); languages.remove("europeanaProxy/edm:isRepresentationOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isRepresentationOf/languages")); languages.remove("europeanaProxy/edm:isRepresentationOf/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isRepresentationOf/literalsPerLanguage")); languages.remove("europeanaProxy/edm:isRepresentationOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:isSimilarTo/taggedLiterals")); languages.remove("providerProxy/edm:isSimilarTo/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isSimilarTo/languages")); languages.remove("providerProxy/edm:isSimilarTo/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isSimilarTo/literalsPerLanguage")); languages.remove("providerProxy/edm:isSimilarTo/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:isSimilarTo/taggedLiterals")); languages.remove("europeanaProxy/edm:isSimilarTo/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isSimilarTo/languages")); languages.remove("europeanaProxy/edm:isSimilarTo/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isSimilarTo/literalsPerLanguage")); languages.remove("europeanaProxy/edm:isSimilarTo/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:isSuccessorOf/taggedLiterals")); languages.remove("providerProxy/edm:isSuccessorOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isSuccessorOf/languages")); languages.remove("providerProxy/edm:isSuccessorOf/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isSuccessorOf/literalsPerLanguage")); languages.remove("providerProxy/edm:isSuccessorOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:isSuccessorOf/taggedLiterals")); languages.remove("europeanaProxy/edm:isSuccessorOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isSuccessorOf/languages")); languages.remove("europeanaProxy/edm:isSuccessorOf/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isSuccessorOf/literalsPerLanguage")); languages.remove("europeanaProxy/edm:isSuccessorOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:realizes/taggedLiterals")); languages.remove("providerProxy/edm:realizes/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:realizes/languages")); languages.remove("providerProxy/edm:realizes/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:realizes/literalsPerLanguage")); languages.remove("providerProxy/edm:realizes/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:realizes/taggedLiterals")); languages.remove("europeanaProxy/edm:realizes/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:realizes/languages")); languages.remove("europeanaProxy/edm:realizes/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:realizes/literalsPerLanguage")); languages.remove("europeanaProxy/edm:realizes/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:wasPresentAt/taggedLiterals")); languages.remove("providerProxy/edm:wasPresentAt/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:wasPresentAt/languages")); languages.remove("providerProxy/edm:wasPresentAt/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:wasPresentAt/literalsPerLanguage")); languages.remove("providerProxy/edm:wasPresentAt/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:wasPresentAt/taggedLiterals")); languages.remove("europeanaProxy/edm:wasPresentAt/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:wasPresentAt/languages")); languages.remove("europeanaProxy/edm:wasPresentAt/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:wasPresentAt/literalsPerLanguage")); languages.remove("europeanaProxy/edm:wasPresentAt/literalsPerLanguage");
    assertEquals(new Double(1.5), languages.get("NumberOfLanguagesPerPropertyInProviderProxy")); languages.remove("NumberOfLanguagesPerPropertyInProviderProxy");
    assertEquals(new Double(12.0), languages.get("NumberOfLanguagesPerPropertyInEuropeanaProxy")); languages.remove("NumberOfLanguagesPerPropertyInEuropeanaProxy");
    assertEquals(new Double(5.0), languages.get("NumberOfLanguagesPerPropertyInObject")); languages.remove("NumberOfLanguagesPerPropertyInObject");
    assertEquals(new Double(6.0), languages.get("TaggedLiteralsInProviderProxy")); languages.remove("TaggedLiteralsInProviderProxy");
    assertEquals(new Double(12.0), languages.get("TaggedLiteralsInEuropeanaProxy")); languages.remove("TaggedLiteralsInEuropeanaProxy");
    assertEquals(new Double(2.0), languages.get("DistinctLanguageCountInProviderProxy")); languages.remove("DistinctLanguageCountInProviderProxy");
    assertEquals(new Double(12.0), languages.get("DistinctLanguageCountInEuropeanaProxy")); languages.remove("DistinctLanguageCountInEuropeanaProxy");
    assertEquals(new Double(18.0), languages.get("TaggedLiteralsInObject")); languages.remove("TaggedLiteralsInObject");
    assertEquals(new Double(12.0), languages.get("DistinctLanguagesInObject")); languages.remove("DistinctLanguagesInObject");
    assertEquals(new Double(3.0), languages.get("TaggedLiteralsPerLanguageInProviderProxy")); languages.remove("TaggedLiteralsPerLanguageInProviderProxy");
    assertEquals(new Double(1.0), languages.get("TaggedLiteralsPerLanguageInEuropeanaProxy")); languages.remove("TaggedLiteralsPerLanguageInEuropeanaProxy");
    assertEquals(new Double(1.5), languages.get("TaggedLiteralsPerLanguageInObject")); languages.remove("TaggedLiteralsPerLanguageInObject");

    assertEquals("Language has the following values: " + StringUtils.join(languages.keySet(), ", "),
        0, languages.size());
  }

  @Test
  public void testGetLanguageMapWithPlace() throws URISyntaxException, IOException {
    EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhJsonSchema());
    JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("general/test-place.json"));
    calculator.measure(cache);

    Map<String, Double> languages = calculator.getSaturationMap();
    assertNotNull(languages);
    assertEquals(312, languages.size());
		/*
		assertEquals(new Double(0.0), languages.get("Proxy/dc:title"));
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:alternative"));
		assertEquals(new Double(0.0), languages.get("Proxy/dc:description"));
		assertEquals(new Double(0.0), languages.get("Proxy/dc:creator"));
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:publisher"));
		assertEquals(new Double(0.0), languages.get("Proxy/dc:contributor"));
		assertEquals(new Double(0.0), languages.get("Proxy/dc:type"));
		assertEquals(new Double(0.0), languages.get("Proxy/dc:identifier"));
		assertEquals(new Double(0.0), languages.get("Proxy/dc:language"));
		assertEquals(new Double(0.0), languages.get("Proxy/dc:coverage"));
		assertEquals(new Double(0.0), languages.get("Proxy/dcterms:temporal"));
		assertEquals(new Double(0.0), languages.get("Proxy/dcterms:spatial"));
		assertEquals(new Double(0.0), languages.get("Proxy/dc:subject"));
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:date"));
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:created"));
		assertEquals(new Double(0.0), languages.get("Proxy/dcterms:issued"));
		assertEquals(new Double(0.0), languages.get("Proxy/dcterms:extent"));
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:medium"));
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:provenance"));
		assertEquals(new Double(0.0), languages.get("Proxy/dcterms:hasPart"));
		assertEquals(new Double(-1.0), languages.get("Proxy/dcterms:isPartOf"));
		assertEquals(new Double(0.0), languages.get("Proxy/dc:format"));
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:source"));
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:rights"));
		assertEquals(new Double(-1.0), languages.get("Proxy/dc:relation"));

		assertEquals(new Double(0.75), languages.get("Aggregation/edm:rights"));
		assertEquals(new Double(0.0), languages.get("Aggregation/edm:provider"));
		assertEquals(new Double(0.0), languages.get("Aggregation/edm:dataProvider"));

		assertEquals(new Double(0.6666666666666667), languages.get("Place/dcterms:isPartOf"));
		assertEquals(new Double(-1.0), languages.get("Place/dcterms:hasPart"));
		assertEquals(new Double(0.6), languages.get("Place/skos:prefLabel"));
		assertEquals(new Double(-1.0), languages.get("Place/skos:altLabel"));
		assertEquals(new Double(-1.0), languages.get("Place/skos:note"));
		*/
  }

  @Test
  public void testGetLanguageMapWithPlaceSkipped() throws URISyntaxException, IOException {
    EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhJsonSchema());
    calculator.setSkippedEntryChecker(new EdmSkippedEntryChecker());
    JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("general/test-place.json"));
    calculator.measure(cache);

    Map<String, Double> languages = calculator.getSaturationMap();
    assertNotNull(languages);
    assertEquals(312, languages.size());

    assertEquals(new Double(0.0), languages.get("providerProxy/dc:title/taggedLiterals")); languages.remove("providerProxy/dc:title/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:title/languages")); languages.remove("providerProxy/dc:title/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:title/literalsPerLanguage")); languages.remove("providerProxy/dc:title/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:title/taggedLiterals")); languages.remove("europeanaProxy/dc:title/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:title/languages")); languages.remove("europeanaProxy/dc:title/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:title/literalsPerLanguage")); languages.remove("europeanaProxy/dc:title/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:alternative/taggedLiterals")); languages.remove("providerProxy/dcterms:alternative/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:alternative/languages")); languages.remove("providerProxy/dcterms:alternative/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:alternative/literalsPerLanguage")); languages.remove("providerProxy/dcterms:alternative/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:alternative/taggedLiterals")); languages.remove("europeanaProxy/dcterms:alternative/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:alternative/languages")); languages.remove("europeanaProxy/dcterms:alternative/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:alternative/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:alternative/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:description/taggedLiterals")); languages.remove("providerProxy/dc:description/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:description/languages")); languages.remove("providerProxy/dc:description/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:description/literalsPerLanguage")); languages.remove("providerProxy/dc:description/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:description/taggedLiterals")); languages.remove("europeanaProxy/dc:description/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:description/languages")); languages.remove("europeanaProxy/dc:description/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:description/literalsPerLanguage")); languages.remove("europeanaProxy/dc:description/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:creator/taggedLiterals")); languages.remove("providerProxy/dc:creator/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:creator/languages")); languages.remove("providerProxy/dc:creator/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:creator/literalsPerLanguage")); languages.remove("providerProxy/dc:creator/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:creator/taggedLiterals")); languages.remove("europeanaProxy/dc:creator/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:creator/languages")); languages.remove("europeanaProxy/dc:creator/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:creator/literalsPerLanguage")); languages.remove("europeanaProxy/dc:creator/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:publisher/taggedLiterals")); languages.remove("providerProxy/dc:publisher/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:publisher/languages")); languages.remove("providerProxy/dc:publisher/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:publisher/literalsPerLanguage")); languages.remove("providerProxy/dc:publisher/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:publisher/taggedLiterals")); languages.remove("europeanaProxy/dc:publisher/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:publisher/languages")); languages.remove("europeanaProxy/dc:publisher/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:publisher/literalsPerLanguage")); languages.remove("europeanaProxy/dc:publisher/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:contributor/taggedLiterals")); languages.remove("providerProxy/dc:contributor/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:contributor/languages")); languages.remove("providerProxy/dc:contributor/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:contributor/literalsPerLanguage")); languages.remove("providerProxy/dc:contributor/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:contributor/taggedLiterals")); languages.remove("europeanaProxy/dc:contributor/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:contributor/languages")); languages.remove("europeanaProxy/dc:contributor/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:contributor/literalsPerLanguage")); languages.remove("europeanaProxy/dc:contributor/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:type/taggedLiterals")); languages.remove("providerProxy/dc:type/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:type/languages")); languages.remove("providerProxy/dc:type/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:type/literalsPerLanguage")); languages.remove("providerProxy/dc:type/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:type/taggedLiterals")); languages.remove("europeanaProxy/dc:type/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:type/languages")); languages.remove("europeanaProxy/dc:type/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:type/literalsPerLanguage")); languages.remove("europeanaProxy/dc:type/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:identifier/taggedLiterals")); languages.remove("providerProxy/dc:identifier/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:identifier/languages")); languages.remove("providerProxy/dc:identifier/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:identifier/literalsPerLanguage")); languages.remove("providerProxy/dc:identifier/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:identifier/taggedLiterals")); languages.remove("europeanaProxy/dc:identifier/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:identifier/languages")); languages.remove("europeanaProxy/dc:identifier/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:identifier/literalsPerLanguage")); languages.remove("europeanaProxy/dc:identifier/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:language/taggedLiterals")); languages.remove("providerProxy/dc:language/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:language/languages")); languages.remove("providerProxy/dc:language/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:language/literalsPerLanguage")); languages.remove("providerProxy/dc:language/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:language/taggedLiterals")); languages.remove("europeanaProxy/dc:language/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:language/languages")); languages.remove("europeanaProxy/dc:language/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:language/literalsPerLanguage")); languages.remove("europeanaProxy/dc:language/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:coverage/taggedLiterals")); languages.remove("providerProxy/dc:coverage/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:coverage/languages")); languages.remove("providerProxy/dc:coverage/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:coverage/literalsPerLanguage")); languages.remove("providerProxy/dc:coverage/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:coverage/taggedLiterals")); languages.remove("europeanaProxy/dc:coverage/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:coverage/languages")); languages.remove("europeanaProxy/dc:coverage/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:coverage/literalsPerLanguage")); languages.remove("europeanaProxy/dc:coverage/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:temporal/taggedLiterals")); languages.remove("providerProxy/dcterms:temporal/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:temporal/languages")); languages.remove("providerProxy/dcterms:temporal/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:temporal/literalsPerLanguage")); languages.remove("providerProxy/dcterms:temporal/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:temporal/taggedLiterals")); languages.remove("europeanaProxy/dcterms:temporal/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:temporal/languages")); languages.remove("europeanaProxy/dcterms:temporal/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:temporal/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:temporal/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:spatial/taggedLiterals")); languages.remove("providerProxy/dcterms:spatial/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:spatial/languages")); languages.remove("providerProxy/dcterms:spatial/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:spatial/literalsPerLanguage")); languages.remove("providerProxy/dcterms:spatial/literalsPerLanguage");
    assertEquals(new Double(115.0), languages.get("europeanaProxy/dcterms:spatial/taggedLiterals")); languages.remove("europeanaProxy/dcterms:spatial/taggedLiterals");
    assertEquals(new Double(98.0), languages.get("europeanaProxy/dcterms:spatial/languages")); languages.remove("europeanaProxy/dcterms:spatial/languages");
    assertEquals(new Double(1.1734693877551021), languages.get("europeanaProxy/dcterms:spatial/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:spatial/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:subject/taggedLiterals")); languages.remove("providerProxy/dc:subject/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:subject/languages")); languages.remove("providerProxy/dc:subject/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:subject/literalsPerLanguage")); languages.remove("providerProxy/dc:subject/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:subject/taggedLiterals")); languages.remove("europeanaProxy/dc:subject/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:subject/languages")); languages.remove("europeanaProxy/dc:subject/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:subject/literalsPerLanguage")); languages.remove("europeanaProxy/dc:subject/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:date/taggedLiterals")); languages.remove("providerProxy/dc:date/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:date/languages")); languages.remove("providerProxy/dc:date/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:date/literalsPerLanguage")); languages.remove("providerProxy/dc:date/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:date/taggedLiterals")); languages.remove("europeanaProxy/dc:date/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:date/languages")); languages.remove("europeanaProxy/dc:date/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:date/literalsPerLanguage")); languages.remove("europeanaProxy/dc:date/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:created/taggedLiterals")); languages.remove("providerProxy/dcterms:created/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:created/languages")); languages.remove("providerProxy/dcterms:created/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:created/literalsPerLanguage")); languages.remove("providerProxy/dcterms:created/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:created/taggedLiterals")); languages.remove("europeanaProxy/dcterms:created/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:created/languages")); languages.remove("europeanaProxy/dcterms:created/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:created/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:created/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:issued/taggedLiterals")); languages.remove("providerProxy/dcterms:issued/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:issued/languages")); languages.remove("providerProxy/dcterms:issued/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:issued/literalsPerLanguage")); languages.remove("providerProxy/dcterms:issued/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:issued/taggedLiterals")); languages.remove("europeanaProxy/dcterms:issued/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:issued/languages")); languages.remove("europeanaProxy/dcterms:issued/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:issued/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:issued/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:extent/taggedLiterals")); languages.remove("providerProxy/dcterms:extent/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:extent/languages")); languages.remove("providerProxy/dcterms:extent/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:extent/literalsPerLanguage")); languages.remove("providerProxy/dcterms:extent/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:extent/taggedLiterals")); languages.remove("europeanaProxy/dcterms:extent/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:extent/languages")); languages.remove("europeanaProxy/dcterms:extent/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:extent/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:extent/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:medium/taggedLiterals")); languages.remove("providerProxy/dcterms:medium/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:medium/languages")); languages.remove("providerProxy/dcterms:medium/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:medium/literalsPerLanguage")); languages.remove("providerProxy/dcterms:medium/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:medium/taggedLiterals")); languages.remove("europeanaProxy/dcterms:medium/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:medium/languages")); languages.remove("europeanaProxy/dcterms:medium/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:medium/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:medium/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:provenance/taggedLiterals")); languages.remove("providerProxy/dcterms:provenance/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:provenance/languages")); languages.remove("providerProxy/dcterms:provenance/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:provenance/literalsPerLanguage")); languages.remove("providerProxy/dcterms:provenance/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:provenance/taggedLiterals")); languages.remove("europeanaProxy/dcterms:provenance/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:provenance/languages")); languages.remove("europeanaProxy/dcterms:provenance/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:provenance/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:provenance/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasPart/taggedLiterals")); languages.remove("providerProxy/dcterms:hasPart/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasPart/languages")); languages.remove("providerProxy/dcterms:hasPart/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasPart/literalsPerLanguage")); languages.remove("providerProxy/dcterms:hasPart/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:hasPart/taggedLiterals")); languages.remove("europeanaProxy/dcterms:hasPart/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:hasPart/languages")); languages.remove("europeanaProxy/dcterms:hasPart/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:hasPart/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:hasPart/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:isPartOf/taggedLiterals")); languages.remove("providerProxy/dcterms:isPartOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isPartOf/languages")); languages.remove("providerProxy/dcterms:isPartOf/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isPartOf/literalsPerLanguage")); languages.remove("providerProxy/dcterms:isPartOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:isPartOf/taggedLiterals")); languages.remove("europeanaProxy/dcterms:isPartOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isPartOf/languages")); languages.remove("europeanaProxy/dcterms:isPartOf/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isPartOf/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:isPartOf/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:format/taggedLiterals")); languages.remove("providerProxy/dc:format/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:format/languages")); languages.remove("providerProxy/dc:format/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:format/literalsPerLanguage")); languages.remove("providerProxy/dc:format/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:format/taggedLiterals")); languages.remove("europeanaProxy/dc:format/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:format/languages")); languages.remove("europeanaProxy/dc:format/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:format/literalsPerLanguage")); languages.remove("europeanaProxy/dc:format/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:source/taggedLiterals")); languages.remove("providerProxy/dc:source/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:source/languages")); languages.remove("providerProxy/dc:source/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:source/literalsPerLanguage")); languages.remove("providerProxy/dc:source/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:source/taggedLiterals")); languages.remove("europeanaProxy/dc:source/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:source/languages")); languages.remove("europeanaProxy/dc:source/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:source/literalsPerLanguage")); languages.remove("europeanaProxy/dc:source/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:rights/taggedLiterals")); languages.remove("providerProxy/dc:rights/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:rights/languages")); languages.remove("providerProxy/dc:rights/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:rights/literalsPerLanguage")); languages.remove("providerProxy/dc:rights/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:rights/taggedLiterals")); languages.remove("europeanaProxy/dc:rights/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:rights/languages")); languages.remove("europeanaProxy/dc:rights/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:rights/literalsPerLanguage")); languages.remove("europeanaProxy/dc:rights/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:relation/taggedLiterals")); languages.remove("providerProxy/dc:relation/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:relation/languages")); languages.remove("providerProxy/dc:relation/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:relation/literalsPerLanguage")); languages.remove("providerProxy/dc:relation/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:relation/taggedLiterals")); languages.remove("europeanaProxy/dc:relation/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:relation/languages")); languages.remove("europeanaProxy/dc:relation/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:relation/literalsPerLanguage")); languages.remove("europeanaProxy/dc:relation/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:year/taggedLiterals")); languages.remove("providerProxy/edm:year/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:year/languages")); languages.remove("providerProxy/edm:year/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:year/literalsPerLanguage")); languages.remove("providerProxy/edm:year/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:year/taggedLiterals")); languages.remove("europeanaProxy/edm:year/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:year/languages")); languages.remove("europeanaProxy/edm:year/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:year/literalsPerLanguage")); languages.remove("europeanaProxy/edm:year/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:userTag/taggedLiterals")); languages.remove("providerProxy/edm:userTag/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:userTag/languages")); languages.remove("providerProxy/edm:userTag/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:userTag/literalsPerLanguage")); languages.remove("providerProxy/edm:userTag/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:userTag/taggedLiterals")); languages.remove("europeanaProxy/edm:userTag/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:userTag/languages")); languages.remove("europeanaProxy/edm:userTag/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:userTag/literalsPerLanguage")); languages.remove("europeanaProxy/edm:userTag/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:conformsTo/taggedLiterals")); languages.remove("providerProxy/dcterms:conformsTo/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:conformsTo/languages")); languages.remove("providerProxy/dcterms:conformsTo/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:conformsTo/literalsPerLanguage")); languages.remove("providerProxy/dcterms:conformsTo/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:conformsTo/taggedLiterals")); languages.remove("europeanaProxy/dcterms:conformsTo/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:conformsTo/languages")); languages.remove("europeanaProxy/dcterms:conformsTo/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:conformsTo/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:conformsTo/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:hasFormat/taggedLiterals")); languages.remove("providerProxy/dcterms:hasFormat/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasFormat/languages")); languages.remove("providerProxy/dcterms:hasFormat/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasFormat/literalsPerLanguage")); languages.remove("providerProxy/dcterms:hasFormat/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:hasFormat/taggedLiterals")); languages.remove("europeanaProxy/dcterms:hasFormat/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:hasFormat/languages")); languages.remove("europeanaProxy/dcterms:hasFormat/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:hasFormat/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:hasFormat/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:hasVersion/taggedLiterals")); languages.remove("providerProxy/dcterms:hasVersion/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasVersion/languages")); languages.remove("providerProxy/dcterms:hasVersion/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasVersion/literalsPerLanguage")); languages.remove("providerProxy/dcterms:hasVersion/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:hasVersion/taggedLiterals")); languages.remove("europeanaProxy/dcterms:hasVersion/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:hasVersion/languages")); languages.remove("europeanaProxy/dcterms:hasVersion/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:hasVersion/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:hasVersion/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:isFormatOf/taggedLiterals")); languages.remove("providerProxy/dcterms:isFormatOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isFormatOf/languages")); languages.remove("providerProxy/dcterms:isFormatOf/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isFormatOf/literalsPerLanguage")); languages.remove("providerProxy/dcterms:isFormatOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:isFormatOf/taggedLiterals")); languages.remove("europeanaProxy/dcterms:isFormatOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isFormatOf/languages")); languages.remove("europeanaProxy/dcterms:isFormatOf/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isFormatOf/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:isFormatOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:isReferencedBy/taggedLiterals")); languages.remove("providerProxy/dcterms:isReferencedBy/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isReferencedBy/languages")); languages.remove("providerProxy/dcterms:isReferencedBy/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isReferencedBy/literalsPerLanguage")); languages.remove("providerProxy/dcterms:isReferencedBy/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:isReferencedBy/taggedLiterals")); languages.remove("europeanaProxy/dcterms:isReferencedBy/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isReferencedBy/languages")); languages.remove("europeanaProxy/dcterms:isReferencedBy/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isReferencedBy/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:isReferencedBy/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:isReplacedBy/taggedLiterals")); languages.remove("providerProxy/dcterms:isReplacedBy/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isReplacedBy/languages")); languages.remove("providerProxy/dcterms:isReplacedBy/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isReplacedBy/literalsPerLanguage")); languages.remove("providerProxy/dcterms:isReplacedBy/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:isReplacedBy/taggedLiterals")); languages.remove("europeanaProxy/dcterms:isReplacedBy/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isReplacedBy/languages")); languages.remove("europeanaProxy/dcterms:isReplacedBy/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isReplacedBy/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:isReplacedBy/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:isRequiredBy/taggedLiterals")); languages.remove("providerProxy/dcterms:isRequiredBy/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isRequiredBy/languages")); languages.remove("providerProxy/dcterms:isRequiredBy/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isRequiredBy/literalsPerLanguage")); languages.remove("providerProxy/dcterms:isRequiredBy/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:isRequiredBy/taggedLiterals")); languages.remove("europeanaProxy/dcterms:isRequiredBy/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isRequiredBy/languages")); languages.remove("europeanaProxy/dcterms:isRequiredBy/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isRequiredBy/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:isRequiredBy/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:isVersionOf/taggedLiterals")); languages.remove("providerProxy/dcterms:isVersionOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isVersionOf/languages")); languages.remove("providerProxy/dcterms:isVersionOf/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isVersionOf/literalsPerLanguage")); languages.remove("providerProxy/dcterms:isVersionOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:isVersionOf/taggedLiterals")); languages.remove("europeanaProxy/dcterms:isVersionOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isVersionOf/languages")); languages.remove("europeanaProxy/dcterms:isVersionOf/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isVersionOf/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:isVersionOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:references/taggedLiterals")); languages.remove("providerProxy/dcterms:references/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:references/languages")); languages.remove("providerProxy/dcterms:references/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:references/literalsPerLanguage")); languages.remove("providerProxy/dcterms:references/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:references/taggedLiterals")); languages.remove("europeanaProxy/dcterms:references/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:references/languages")); languages.remove("europeanaProxy/dcterms:references/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:references/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:references/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:replaces/taggedLiterals")); languages.remove("providerProxy/dcterms:replaces/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:replaces/languages")); languages.remove("providerProxy/dcterms:replaces/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:replaces/literalsPerLanguage")); languages.remove("providerProxy/dcterms:replaces/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:replaces/taggedLiterals")); languages.remove("europeanaProxy/dcterms:replaces/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:replaces/languages")); languages.remove("europeanaProxy/dcterms:replaces/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:replaces/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:replaces/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:requires/taggedLiterals")); languages.remove("providerProxy/dcterms:requires/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:requires/languages")); languages.remove("providerProxy/dcterms:requires/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:requires/literalsPerLanguage")); languages.remove("providerProxy/dcterms:requires/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:requires/taggedLiterals")); languages.remove("europeanaProxy/dcterms:requires/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:requires/languages")); languages.remove("europeanaProxy/dcterms:requires/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:requires/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:requires/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:tableOfContents/taggedLiterals")); languages.remove("providerProxy/dcterms:tableOfContents/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:tableOfContents/languages")); languages.remove("providerProxy/dcterms:tableOfContents/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:tableOfContents/literalsPerLanguage")); languages.remove("providerProxy/dcterms:tableOfContents/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:tableOfContents/taggedLiterals")); languages.remove("europeanaProxy/dcterms:tableOfContents/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:tableOfContents/languages")); languages.remove("europeanaProxy/dcterms:tableOfContents/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:tableOfContents/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:tableOfContents/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:currentLocation/taggedLiterals")); languages.remove("providerProxy/edm:currentLocation/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:currentLocation/languages")); languages.remove("providerProxy/edm:currentLocation/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:currentLocation/literalsPerLanguage")); languages.remove("providerProxy/edm:currentLocation/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:currentLocation/taggedLiterals")); languages.remove("europeanaProxy/edm:currentLocation/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:currentLocation/languages")); languages.remove("europeanaProxy/edm:currentLocation/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:currentLocation/literalsPerLanguage")); languages.remove("europeanaProxy/edm:currentLocation/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:hasMet/taggedLiterals")); languages.remove("providerProxy/edm:hasMet/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:hasMet/languages")); languages.remove("providerProxy/edm:hasMet/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:hasMet/literalsPerLanguage")); languages.remove("providerProxy/edm:hasMet/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:hasMet/taggedLiterals")); languages.remove("europeanaProxy/edm:hasMet/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:hasMet/languages")); languages.remove("europeanaProxy/edm:hasMet/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:hasMet/literalsPerLanguage")); languages.remove("europeanaProxy/edm:hasMet/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:hasType/taggedLiterals")); languages.remove("providerProxy/edm:hasType/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:hasType/languages")); languages.remove("providerProxy/edm:hasType/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:hasType/literalsPerLanguage")); languages.remove("providerProxy/edm:hasType/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:hasType/taggedLiterals")); languages.remove("europeanaProxy/edm:hasType/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:hasType/languages")); languages.remove("europeanaProxy/edm:hasType/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:hasType/literalsPerLanguage")); languages.remove("europeanaProxy/edm:hasType/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:incorporates/taggedLiterals")); languages.remove("providerProxy/edm:incorporates/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:incorporates/languages")); languages.remove("providerProxy/edm:incorporates/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:incorporates/literalsPerLanguage")); languages.remove("providerProxy/edm:incorporates/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:incorporates/taggedLiterals")); languages.remove("europeanaProxy/edm:incorporates/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:incorporates/languages")); languages.remove("europeanaProxy/edm:incorporates/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:incorporates/literalsPerLanguage")); languages.remove("europeanaProxy/edm:incorporates/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:isDerivativeOf/taggedLiterals")); languages.remove("providerProxy/edm:isDerivativeOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isDerivativeOf/languages")); languages.remove("providerProxy/edm:isDerivativeOf/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isDerivativeOf/literalsPerLanguage")); languages.remove("providerProxy/edm:isDerivativeOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:isDerivativeOf/taggedLiterals")); languages.remove("europeanaProxy/edm:isDerivativeOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isDerivativeOf/languages")); languages.remove("europeanaProxy/edm:isDerivativeOf/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isDerivativeOf/literalsPerLanguage")); languages.remove("europeanaProxy/edm:isDerivativeOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:isRelatedTo/taggedLiterals")); languages.remove("providerProxy/edm:isRelatedTo/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isRelatedTo/languages")); languages.remove("providerProxy/edm:isRelatedTo/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isRelatedTo/literalsPerLanguage")); languages.remove("providerProxy/edm:isRelatedTo/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:isRelatedTo/taggedLiterals")); languages.remove("europeanaProxy/edm:isRelatedTo/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isRelatedTo/languages")); languages.remove("europeanaProxy/edm:isRelatedTo/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isRelatedTo/literalsPerLanguage")); languages.remove("europeanaProxy/edm:isRelatedTo/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:isRepresentationOf/taggedLiterals")); languages.remove("providerProxy/edm:isRepresentationOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isRepresentationOf/languages")); languages.remove("providerProxy/edm:isRepresentationOf/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isRepresentationOf/literalsPerLanguage")); languages.remove("providerProxy/edm:isRepresentationOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:isRepresentationOf/taggedLiterals")); languages.remove("europeanaProxy/edm:isRepresentationOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isRepresentationOf/languages")); languages.remove("europeanaProxy/edm:isRepresentationOf/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isRepresentationOf/literalsPerLanguage")); languages.remove("europeanaProxy/edm:isRepresentationOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:isSimilarTo/taggedLiterals")); languages.remove("providerProxy/edm:isSimilarTo/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isSimilarTo/languages")); languages.remove("providerProxy/edm:isSimilarTo/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isSimilarTo/literalsPerLanguage")); languages.remove("providerProxy/edm:isSimilarTo/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:isSimilarTo/taggedLiterals")); languages.remove("europeanaProxy/edm:isSimilarTo/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isSimilarTo/languages")); languages.remove("europeanaProxy/edm:isSimilarTo/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isSimilarTo/literalsPerLanguage")); languages.remove("europeanaProxy/edm:isSimilarTo/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:isSuccessorOf/taggedLiterals")); languages.remove("providerProxy/edm:isSuccessorOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isSuccessorOf/languages")); languages.remove("providerProxy/edm:isSuccessorOf/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isSuccessorOf/literalsPerLanguage")); languages.remove("providerProxy/edm:isSuccessorOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:isSuccessorOf/taggedLiterals")); languages.remove("europeanaProxy/edm:isSuccessorOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isSuccessorOf/languages")); languages.remove("europeanaProxy/edm:isSuccessorOf/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isSuccessorOf/literalsPerLanguage")); languages.remove("europeanaProxy/edm:isSuccessorOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:realizes/taggedLiterals")); languages.remove("providerProxy/edm:realizes/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:realizes/languages")); languages.remove("providerProxy/edm:realizes/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:realizes/literalsPerLanguage")); languages.remove("providerProxy/edm:realizes/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:realizes/taggedLiterals")); languages.remove("europeanaProxy/edm:realizes/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:realizes/languages")); languages.remove("europeanaProxy/edm:realizes/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:realizes/literalsPerLanguage")); languages.remove("europeanaProxy/edm:realizes/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:wasPresentAt/taggedLiterals")); languages.remove("providerProxy/edm:wasPresentAt/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:wasPresentAt/languages")); languages.remove("providerProxy/edm:wasPresentAt/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:wasPresentAt/literalsPerLanguage")); languages.remove("providerProxy/edm:wasPresentAt/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:wasPresentAt/taggedLiterals")); languages.remove("europeanaProxy/edm:wasPresentAt/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:wasPresentAt/languages")); languages.remove("europeanaProxy/edm:wasPresentAt/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:wasPresentAt/literalsPerLanguage")); languages.remove("europeanaProxy/edm:wasPresentAt/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("NumberOfLanguagesPerPropertyInProviderProxy")); languages.remove("NumberOfLanguagesPerPropertyInProviderProxy");
    assertEquals(new Double(98.0), languages.get("NumberOfLanguagesPerPropertyInEuropeanaProxy")); languages.remove("NumberOfLanguagesPerPropertyInEuropeanaProxy");
    assertEquals(new Double(98.0), languages.get("NumberOfLanguagesPerPropertyInObject")); languages.remove("NumberOfLanguagesPerPropertyInObject");
    assertEquals(new Double(0.0), languages.get("TaggedLiteralsInProviderProxy")); languages.remove("TaggedLiteralsInProviderProxy");
    assertEquals(new Double(115.0), languages.get("TaggedLiteralsInEuropeanaProxy")); languages.remove("TaggedLiteralsInEuropeanaProxy");
    assertEquals(new Double(0.0), languages.get("DistinctLanguageCountInProviderProxy")); languages.remove("DistinctLanguageCountInProviderProxy");
    assertEquals(new Double(98.0), languages.get("DistinctLanguageCountInEuropeanaProxy")); languages.remove("DistinctLanguageCountInEuropeanaProxy");
    assertEquals(new Double(115.0), languages.get("TaggedLiteralsInObject")); languages.remove("TaggedLiteralsInObject");
    assertEquals(new Double(98.0), languages.get("DistinctLanguagesInObject")); languages.remove("DistinctLanguagesInObject");
    assertEquals(new Double(0.0), languages.get("TaggedLiteralsPerLanguageInProviderProxy")); languages.remove("TaggedLiteralsPerLanguageInProviderProxy");
    assertEquals(new Double(1.1734693877551021), languages.get("TaggedLiteralsPerLanguageInEuropeanaProxy")); languages.remove("TaggedLiteralsPerLanguageInEuropeanaProxy");
    assertEquals(new Double(1.1734693877551021), languages.get("TaggedLiteralsPerLanguageInObject")); languages.remove("TaggedLiteralsPerLanguageInObject");
    assertEquals(new HashSet<String>(), languages.keySet());
  }

  @Test
  public void testGetHeaders() {
    EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhJsonSchema());
    List<String> expected = Arrays.asList("providerProxy/dc:title/taggedLiterals", "providerProxy/dc:title/languages", "providerProxy/dc:title/literalsPerLanguage", "europeanaProxy/dc:title/taggedLiterals", "europeanaProxy/dc:title/languages", "europeanaProxy/dc:title/literalsPerLanguage", "providerProxy/dcterms:alternative/taggedLiterals", "providerProxy/dcterms:alternative/languages", "providerProxy/dcterms:alternative/literalsPerLanguage", "europeanaProxy/dcterms:alternative/taggedLiterals", "europeanaProxy/dcterms:alternative/languages", "europeanaProxy/dcterms:alternative/literalsPerLanguage", "providerProxy/dc:description/taggedLiterals", "providerProxy/dc:description/languages", "providerProxy/dc:description/literalsPerLanguage", "europeanaProxy/dc:description/taggedLiterals", "europeanaProxy/dc:description/languages", "europeanaProxy/dc:description/literalsPerLanguage", "providerProxy/dc:creator/taggedLiterals", "providerProxy/dc:creator/languages", "providerProxy/dc:creator/literalsPerLanguage", "europeanaProxy/dc:creator/taggedLiterals", "europeanaProxy/dc:creator/languages", "europeanaProxy/dc:creator/literalsPerLanguage", "providerProxy/dc:publisher/taggedLiterals", "providerProxy/dc:publisher/languages", "providerProxy/dc:publisher/literalsPerLanguage", "europeanaProxy/dc:publisher/taggedLiterals", "europeanaProxy/dc:publisher/languages", "europeanaProxy/dc:publisher/literalsPerLanguage", "providerProxy/dc:contributor/taggedLiterals", "providerProxy/dc:contributor/languages", "providerProxy/dc:contributor/literalsPerLanguage", "europeanaProxy/dc:contributor/taggedLiterals", "europeanaProxy/dc:contributor/languages", "europeanaProxy/dc:contributor/literalsPerLanguage", "providerProxy/dc:type/taggedLiterals", "providerProxy/dc:type/languages", "providerProxy/dc:type/literalsPerLanguage", "europeanaProxy/dc:type/taggedLiterals", "europeanaProxy/dc:type/languages", "europeanaProxy/dc:type/literalsPerLanguage", "providerProxy/dc:identifier/taggedLiterals", "providerProxy/dc:identifier/languages", "providerProxy/dc:identifier/literalsPerLanguage", "europeanaProxy/dc:identifier/taggedLiterals", "europeanaProxy/dc:identifier/languages", "europeanaProxy/dc:identifier/literalsPerLanguage", "providerProxy/dc:language/taggedLiterals", "providerProxy/dc:language/languages", "providerProxy/dc:language/literalsPerLanguage", "europeanaProxy/dc:language/taggedLiterals", "europeanaProxy/dc:language/languages", "europeanaProxy/dc:language/literalsPerLanguage", "providerProxy/dc:coverage/taggedLiterals", "providerProxy/dc:coverage/languages", "providerProxy/dc:coverage/literalsPerLanguage", "europeanaProxy/dc:coverage/taggedLiterals", "europeanaProxy/dc:coverage/languages", "europeanaProxy/dc:coverage/literalsPerLanguage", "providerProxy/dcterms:temporal/taggedLiterals", "providerProxy/dcterms:temporal/languages", "providerProxy/dcterms:temporal/literalsPerLanguage", "europeanaProxy/dcterms:temporal/taggedLiterals", "europeanaProxy/dcterms:temporal/languages", "europeanaProxy/dcterms:temporal/literalsPerLanguage", "providerProxy/dcterms:spatial/taggedLiterals", "providerProxy/dcterms:spatial/languages", "providerProxy/dcterms:spatial/literalsPerLanguage", "europeanaProxy/dcterms:spatial/taggedLiterals", "europeanaProxy/dcterms:spatial/languages", "europeanaProxy/dcterms:spatial/literalsPerLanguage", "providerProxy/dc:subject/taggedLiterals", "providerProxy/dc:subject/languages", "providerProxy/dc:subject/literalsPerLanguage", "europeanaProxy/dc:subject/taggedLiterals", "europeanaProxy/dc:subject/languages", "europeanaProxy/dc:subject/literalsPerLanguage", "providerProxy/dc:date/taggedLiterals", "providerProxy/dc:date/languages", "providerProxy/dc:date/literalsPerLanguage", "europeanaProxy/dc:date/taggedLiterals", "europeanaProxy/dc:date/languages", "europeanaProxy/dc:date/literalsPerLanguage", "providerProxy/dcterms:created/taggedLiterals", "providerProxy/dcterms:created/languages", "providerProxy/dcterms:created/literalsPerLanguage", "europeanaProxy/dcterms:created/taggedLiterals", "europeanaProxy/dcterms:created/languages", "europeanaProxy/dcterms:created/literalsPerLanguage", "providerProxy/dcterms:issued/taggedLiterals", "providerProxy/dcterms:issued/languages", "providerProxy/dcterms:issued/literalsPerLanguage", "europeanaProxy/dcterms:issued/taggedLiterals", "europeanaProxy/dcterms:issued/languages", "europeanaProxy/dcterms:issued/literalsPerLanguage", "providerProxy/dcterms:extent/taggedLiterals", "providerProxy/dcterms:extent/languages", "providerProxy/dcterms:extent/literalsPerLanguage", "europeanaProxy/dcterms:extent/taggedLiterals", "europeanaProxy/dcterms:extent/languages", "europeanaProxy/dcterms:extent/literalsPerLanguage", "providerProxy/dcterms:medium/taggedLiterals", "providerProxy/dcterms:medium/languages", "providerProxy/dcterms:medium/literalsPerLanguage", "europeanaProxy/dcterms:medium/taggedLiterals", "europeanaProxy/dcterms:medium/languages", "europeanaProxy/dcterms:medium/literalsPerLanguage", "providerProxy/dcterms:provenance/taggedLiterals", "providerProxy/dcterms:provenance/languages", "providerProxy/dcterms:provenance/literalsPerLanguage", "europeanaProxy/dcterms:provenance/taggedLiterals", "europeanaProxy/dcterms:provenance/languages", "europeanaProxy/dcterms:provenance/literalsPerLanguage", "providerProxy/dcterms:hasPart/taggedLiterals", "providerProxy/dcterms:hasPart/languages", "providerProxy/dcterms:hasPart/literalsPerLanguage", "europeanaProxy/dcterms:hasPart/taggedLiterals", "europeanaProxy/dcterms:hasPart/languages", "europeanaProxy/dcterms:hasPart/literalsPerLanguage", "providerProxy/dcterms:isPartOf/taggedLiterals", "providerProxy/dcterms:isPartOf/languages", "providerProxy/dcterms:isPartOf/literalsPerLanguage", "europeanaProxy/dcterms:isPartOf/taggedLiterals", "europeanaProxy/dcterms:isPartOf/languages", "europeanaProxy/dcterms:isPartOf/literalsPerLanguage", "providerProxy/dc:format/taggedLiterals", "providerProxy/dc:format/languages", "providerProxy/dc:format/literalsPerLanguage", "europeanaProxy/dc:format/taggedLiterals", "europeanaProxy/dc:format/languages", "europeanaProxy/dc:format/literalsPerLanguage", "providerProxy/dc:source/taggedLiterals", "providerProxy/dc:source/languages", "providerProxy/dc:source/literalsPerLanguage", "europeanaProxy/dc:source/taggedLiterals", "europeanaProxy/dc:source/languages", "europeanaProxy/dc:source/literalsPerLanguage", "providerProxy/dc:rights/taggedLiterals", "providerProxy/dc:rights/languages", "providerProxy/dc:rights/literalsPerLanguage", "europeanaProxy/dc:rights/taggedLiterals", "europeanaProxy/dc:rights/languages", "europeanaProxy/dc:rights/literalsPerLanguage", "providerProxy/dc:relation/taggedLiterals", "providerProxy/dc:relation/languages", "providerProxy/dc:relation/literalsPerLanguage", "europeanaProxy/dc:relation/taggedLiterals", "europeanaProxy/dc:relation/languages", "europeanaProxy/dc:relation/literalsPerLanguage", "providerProxy/edm:year/taggedLiterals", "providerProxy/edm:year/languages", "providerProxy/edm:year/literalsPerLanguage", "europeanaProxy/edm:year/taggedLiterals", "europeanaProxy/edm:year/languages", "europeanaProxy/edm:year/literalsPerLanguage", "providerProxy/edm:userTag/taggedLiterals", "providerProxy/edm:userTag/languages", "providerProxy/edm:userTag/literalsPerLanguage", "europeanaProxy/edm:userTag/taggedLiterals", "europeanaProxy/edm:userTag/languages", "europeanaProxy/edm:userTag/literalsPerLanguage", "providerProxy/dcterms:conformsTo/taggedLiterals", "providerProxy/dcterms:conformsTo/languages", "providerProxy/dcterms:conformsTo/literalsPerLanguage", "europeanaProxy/dcterms:conformsTo/taggedLiterals", "europeanaProxy/dcterms:conformsTo/languages", "europeanaProxy/dcterms:conformsTo/literalsPerLanguage", "providerProxy/dcterms:hasFormat/taggedLiterals", "providerProxy/dcterms:hasFormat/languages", "providerProxy/dcterms:hasFormat/literalsPerLanguage", "europeanaProxy/dcterms:hasFormat/taggedLiterals", "europeanaProxy/dcterms:hasFormat/languages", "europeanaProxy/dcterms:hasFormat/literalsPerLanguage", "providerProxy/dcterms:hasVersion/taggedLiterals", "providerProxy/dcterms:hasVersion/languages", "providerProxy/dcterms:hasVersion/literalsPerLanguage", "europeanaProxy/dcterms:hasVersion/taggedLiterals", "europeanaProxy/dcterms:hasVersion/languages", "europeanaProxy/dcterms:hasVersion/literalsPerLanguage", "providerProxy/dcterms:isFormatOf/taggedLiterals", "providerProxy/dcterms:isFormatOf/languages", "providerProxy/dcterms:isFormatOf/literalsPerLanguage", "europeanaProxy/dcterms:isFormatOf/taggedLiterals", "europeanaProxy/dcterms:isFormatOf/languages", "europeanaProxy/dcterms:isFormatOf/literalsPerLanguage", "providerProxy/dcterms:isReferencedBy/taggedLiterals", "providerProxy/dcterms:isReferencedBy/languages", "providerProxy/dcterms:isReferencedBy/literalsPerLanguage", "europeanaProxy/dcterms:isReferencedBy/taggedLiterals", "europeanaProxy/dcterms:isReferencedBy/languages", "europeanaProxy/dcterms:isReferencedBy/literalsPerLanguage", "providerProxy/dcterms:isReplacedBy/taggedLiterals", "providerProxy/dcterms:isReplacedBy/languages", "providerProxy/dcterms:isReplacedBy/literalsPerLanguage", "europeanaProxy/dcterms:isReplacedBy/taggedLiterals", "europeanaProxy/dcterms:isReplacedBy/languages", "europeanaProxy/dcterms:isReplacedBy/literalsPerLanguage", "providerProxy/dcterms:isRequiredBy/taggedLiterals", "providerProxy/dcterms:isRequiredBy/languages", "providerProxy/dcterms:isRequiredBy/literalsPerLanguage", "europeanaProxy/dcterms:isRequiredBy/taggedLiterals", "europeanaProxy/dcterms:isRequiredBy/languages", "europeanaProxy/dcterms:isRequiredBy/literalsPerLanguage", "providerProxy/dcterms:isVersionOf/taggedLiterals", "providerProxy/dcterms:isVersionOf/languages", "providerProxy/dcterms:isVersionOf/literalsPerLanguage", "europeanaProxy/dcterms:isVersionOf/taggedLiterals", "europeanaProxy/dcterms:isVersionOf/languages", "europeanaProxy/dcterms:isVersionOf/literalsPerLanguage", "providerProxy/dcterms:references/taggedLiterals", "providerProxy/dcterms:references/languages", "providerProxy/dcterms:references/literalsPerLanguage", "europeanaProxy/dcterms:references/taggedLiterals", "europeanaProxy/dcterms:references/languages", "europeanaProxy/dcterms:references/literalsPerLanguage", "providerProxy/dcterms:replaces/taggedLiterals", "providerProxy/dcterms:replaces/languages", "providerProxy/dcterms:replaces/literalsPerLanguage", "europeanaProxy/dcterms:replaces/taggedLiterals", "europeanaProxy/dcterms:replaces/languages", "europeanaProxy/dcterms:replaces/literalsPerLanguage", "providerProxy/dcterms:requires/taggedLiterals", "providerProxy/dcterms:requires/languages", "providerProxy/dcterms:requires/literalsPerLanguage", "europeanaProxy/dcterms:requires/taggedLiterals", "europeanaProxy/dcterms:requires/languages", "europeanaProxy/dcterms:requires/literalsPerLanguage", "providerProxy/dcterms:tableOfContents/taggedLiterals", "providerProxy/dcterms:tableOfContents/languages", "providerProxy/dcterms:tableOfContents/literalsPerLanguage", "europeanaProxy/dcterms:tableOfContents/taggedLiterals", "europeanaProxy/dcterms:tableOfContents/languages", "europeanaProxy/dcterms:tableOfContents/literalsPerLanguage", "providerProxy/edm:currentLocation/taggedLiterals", "providerProxy/edm:currentLocation/languages", "providerProxy/edm:currentLocation/literalsPerLanguage", "europeanaProxy/edm:currentLocation/taggedLiterals", "europeanaProxy/edm:currentLocation/languages", "europeanaProxy/edm:currentLocation/literalsPerLanguage", "providerProxy/edm:hasMet/taggedLiterals", "providerProxy/edm:hasMet/languages", "providerProxy/edm:hasMet/literalsPerLanguage", "europeanaProxy/edm:hasMet/taggedLiterals", "europeanaProxy/edm:hasMet/languages", "europeanaProxy/edm:hasMet/literalsPerLanguage", "providerProxy/edm:hasType/taggedLiterals", "providerProxy/edm:hasType/languages", "providerProxy/edm:hasType/literalsPerLanguage", "europeanaProxy/edm:hasType/taggedLiterals", "europeanaProxy/edm:hasType/languages", "europeanaProxy/edm:hasType/literalsPerLanguage", "providerProxy/edm:incorporates/taggedLiterals", "providerProxy/edm:incorporates/languages", "providerProxy/edm:incorporates/literalsPerLanguage", "europeanaProxy/edm:incorporates/taggedLiterals", "europeanaProxy/edm:incorporates/languages", "europeanaProxy/edm:incorporates/literalsPerLanguage", "providerProxy/edm:isDerivativeOf/taggedLiterals", "providerProxy/edm:isDerivativeOf/languages", "providerProxy/edm:isDerivativeOf/literalsPerLanguage", "europeanaProxy/edm:isDerivativeOf/taggedLiterals", "europeanaProxy/edm:isDerivativeOf/languages", "europeanaProxy/edm:isDerivativeOf/literalsPerLanguage", "providerProxy/edm:isRelatedTo/taggedLiterals", "providerProxy/edm:isRelatedTo/languages", "providerProxy/edm:isRelatedTo/literalsPerLanguage", "europeanaProxy/edm:isRelatedTo/taggedLiterals", "europeanaProxy/edm:isRelatedTo/languages", "europeanaProxy/edm:isRelatedTo/literalsPerLanguage", "providerProxy/edm:isRepresentationOf/taggedLiterals", "providerProxy/edm:isRepresentationOf/languages", "providerProxy/edm:isRepresentationOf/literalsPerLanguage", "europeanaProxy/edm:isRepresentationOf/taggedLiterals", "europeanaProxy/edm:isRepresentationOf/languages", "europeanaProxy/edm:isRepresentationOf/literalsPerLanguage", "providerProxy/edm:isSimilarTo/taggedLiterals", "providerProxy/edm:isSimilarTo/languages", "providerProxy/edm:isSimilarTo/literalsPerLanguage", "europeanaProxy/edm:isSimilarTo/taggedLiterals", "europeanaProxy/edm:isSimilarTo/languages", "europeanaProxy/edm:isSimilarTo/literalsPerLanguage", "providerProxy/edm:isSuccessorOf/taggedLiterals", "providerProxy/edm:isSuccessorOf/languages", "providerProxy/edm:isSuccessorOf/literalsPerLanguage", "europeanaProxy/edm:isSuccessorOf/taggedLiterals", "europeanaProxy/edm:isSuccessorOf/languages", "europeanaProxy/edm:isSuccessorOf/literalsPerLanguage", "providerProxy/edm:realizes/taggedLiterals", "providerProxy/edm:realizes/languages", "providerProxy/edm:realizes/literalsPerLanguage", "europeanaProxy/edm:realizes/taggedLiterals", "europeanaProxy/edm:realizes/languages", "europeanaProxy/edm:realizes/literalsPerLanguage", "providerProxy/edm:wasPresentAt/taggedLiterals", "providerProxy/edm:wasPresentAt/languages", "providerProxy/edm:wasPresentAt/literalsPerLanguage", "europeanaProxy/edm:wasPresentAt/taggedLiterals", "europeanaProxy/edm:wasPresentAt/languages", "europeanaProxy/edm:wasPresentAt/literalsPerLanguage", "NumberOfLanguagesPerPropertyInProviderProxy", "NumberOfLanguagesPerPropertyInEuropeanaProxy", "NumberOfLanguagesPerPropertyInObject", "TaggedLiteralsInProviderProxy", "TaggedLiteralsInEuropeanaProxy", "DistinctLanguageCountInProviderProxy", "DistinctLanguageCountInEuropeanaProxy", "TaggedLiteralsInObject", "DistinctLanguagesInObject", "TaggedLiteralsPerLanguageInProviderProxy", "TaggedLiteralsPerLanguageInEuropeanaProxy", "TaggedLiteralsPerLanguageInObject");
    assertEquals(312, calculator.getHeader().size());
    assertEquals(expected, calculator.getHeader());

    calculator.setResultType(MultilingualityResultType.EXTENDED);
    expected = Arrays.asList("providerProxy/dc:title/taggedLiterals", "providerProxy/dc:title/languages", "providerProxy/dc:title/literalsPerLanguage", "europeanaProxy/dc:title/taggedLiterals", "europeanaProxy/dc:title/languages", "europeanaProxy/dc:title/literalsPerLanguage", "providerProxy/dcterms:alternative/taggedLiterals", "providerProxy/dcterms:alternative/languages", "providerProxy/dcterms:alternative/literalsPerLanguage", "europeanaProxy/dcterms:alternative/taggedLiterals", "europeanaProxy/dcterms:alternative/languages", "europeanaProxy/dcterms:alternative/literalsPerLanguage", "providerProxy/dc:description/taggedLiterals", "providerProxy/dc:description/languages", "providerProxy/dc:description/literalsPerLanguage", "europeanaProxy/dc:description/taggedLiterals", "europeanaProxy/dc:description/languages", "europeanaProxy/dc:description/literalsPerLanguage", "providerProxy/dc:creator/taggedLiterals", "providerProxy/dc:creator/languages", "providerProxy/dc:creator/literalsPerLanguage", "europeanaProxy/dc:creator/taggedLiterals", "europeanaProxy/dc:creator/languages", "europeanaProxy/dc:creator/literalsPerLanguage", "providerProxy/dc:publisher/taggedLiterals", "providerProxy/dc:publisher/languages", "providerProxy/dc:publisher/literalsPerLanguage", "europeanaProxy/dc:publisher/taggedLiterals", "europeanaProxy/dc:publisher/languages", "europeanaProxy/dc:publisher/literalsPerLanguage", "providerProxy/dc:contributor/taggedLiterals", "providerProxy/dc:contributor/languages", "providerProxy/dc:contributor/literalsPerLanguage", "europeanaProxy/dc:contributor/taggedLiterals", "europeanaProxy/dc:contributor/languages", "europeanaProxy/dc:contributor/literalsPerLanguage", "providerProxy/dc:type/taggedLiterals", "providerProxy/dc:type/languages", "providerProxy/dc:type/literalsPerLanguage", "europeanaProxy/dc:type/taggedLiterals", "europeanaProxy/dc:type/languages", "europeanaProxy/dc:type/literalsPerLanguage", "providerProxy/dc:identifier/taggedLiterals", "providerProxy/dc:identifier/languages", "providerProxy/dc:identifier/literalsPerLanguage", "europeanaProxy/dc:identifier/taggedLiterals", "europeanaProxy/dc:identifier/languages", "europeanaProxy/dc:identifier/literalsPerLanguage", "providerProxy/dc:language/taggedLiterals", "providerProxy/dc:language/languages", "providerProxy/dc:language/literalsPerLanguage", "europeanaProxy/dc:language/taggedLiterals", "europeanaProxy/dc:language/languages", "europeanaProxy/dc:language/literalsPerLanguage", "providerProxy/dc:coverage/taggedLiterals", "providerProxy/dc:coverage/languages", "providerProxy/dc:coverage/literalsPerLanguage", "europeanaProxy/dc:coverage/taggedLiterals", "europeanaProxy/dc:coverage/languages", "europeanaProxy/dc:coverage/literalsPerLanguage", "providerProxy/dcterms:temporal/taggedLiterals", "providerProxy/dcterms:temporal/languages", "providerProxy/dcterms:temporal/literalsPerLanguage", "europeanaProxy/dcterms:temporal/taggedLiterals", "europeanaProxy/dcterms:temporal/languages", "europeanaProxy/dcterms:temporal/literalsPerLanguage", "providerProxy/dcterms:spatial/taggedLiterals", "providerProxy/dcterms:spatial/languages", "providerProxy/dcterms:spatial/literalsPerLanguage", "europeanaProxy/dcterms:spatial/taggedLiterals", "europeanaProxy/dcterms:spatial/languages", "europeanaProxy/dcterms:spatial/literalsPerLanguage", "providerProxy/dc:subject/taggedLiterals", "providerProxy/dc:subject/languages", "providerProxy/dc:subject/literalsPerLanguage", "europeanaProxy/dc:subject/taggedLiterals", "europeanaProxy/dc:subject/languages", "europeanaProxy/dc:subject/literalsPerLanguage", "providerProxy/dc:date/taggedLiterals", "providerProxy/dc:date/languages", "providerProxy/dc:date/literalsPerLanguage", "europeanaProxy/dc:date/taggedLiterals", "europeanaProxy/dc:date/languages", "europeanaProxy/dc:date/literalsPerLanguage", "providerProxy/dcterms:created/taggedLiterals", "providerProxy/dcterms:created/languages", "providerProxy/dcterms:created/literalsPerLanguage", "europeanaProxy/dcterms:created/taggedLiterals", "europeanaProxy/dcterms:created/languages", "europeanaProxy/dcterms:created/literalsPerLanguage", "providerProxy/dcterms:issued/taggedLiterals", "providerProxy/dcterms:issued/languages", "providerProxy/dcterms:issued/literalsPerLanguage", "europeanaProxy/dcterms:issued/taggedLiterals", "europeanaProxy/dcterms:issued/languages", "europeanaProxy/dcterms:issued/literalsPerLanguage", "providerProxy/dcterms:extent/taggedLiterals", "providerProxy/dcterms:extent/languages", "providerProxy/dcterms:extent/literalsPerLanguage", "europeanaProxy/dcterms:extent/taggedLiterals", "europeanaProxy/dcterms:extent/languages", "europeanaProxy/dcterms:extent/literalsPerLanguage", "providerProxy/dcterms:medium/taggedLiterals", "providerProxy/dcterms:medium/languages", "providerProxy/dcterms:medium/literalsPerLanguage", "europeanaProxy/dcterms:medium/taggedLiterals", "europeanaProxy/dcterms:medium/languages", "europeanaProxy/dcterms:medium/literalsPerLanguage", "providerProxy/dcterms:provenance/taggedLiterals", "providerProxy/dcterms:provenance/languages", "providerProxy/dcterms:provenance/literalsPerLanguage", "europeanaProxy/dcterms:provenance/taggedLiterals", "europeanaProxy/dcterms:provenance/languages", "europeanaProxy/dcterms:provenance/literalsPerLanguage", "providerProxy/dcterms:hasPart/taggedLiterals", "providerProxy/dcterms:hasPart/languages", "providerProxy/dcterms:hasPart/literalsPerLanguage", "europeanaProxy/dcterms:hasPart/taggedLiterals", "europeanaProxy/dcterms:hasPart/languages", "europeanaProxy/dcterms:hasPart/literalsPerLanguage", "providerProxy/dcterms:isPartOf/taggedLiterals", "providerProxy/dcterms:isPartOf/languages", "providerProxy/dcterms:isPartOf/literalsPerLanguage", "europeanaProxy/dcterms:isPartOf/taggedLiterals", "europeanaProxy/dcterms:isPartOf/languages", "europeanaProxy/dcterms:isPartOf/literalsPerLanguage", "providerProxy/dc:format/taggedLiterals", "providerProxy/dc:format/languages", "providerProxy/dc:format/literalsPerLanguage", "europeanaProxy/dc:format/taggedLiterals", "europeanaProxy/dc:format/languages", "europeanaProxy/dc:format/literalsPerLanguage", "providerProxy/dc:source/taggedLiterals", "providerProxy/dc:source/languages", "providerProxy/dc:source/literalsPerLanguage", "europeanaProxy/dc:source/taggedLiterals", "europeanaProxy/dc:source/languages", "europeanaProxy/dc:source/literalsPerLanguage", "providerProxy/dc:rights/taggedLiterals", "providerProxy/dc:rights/languages", "providerProxy/dc:rights/literalsPerLanguage", "europeanaProxy/dc:rights/taggedLiterals", "europeanaProxy/dc:rights/languages", "europeanaProxy/dc:rights/literalsPerLanguage", "providerProxy/dc:relation/taggedLiterals", "providerProxy/dc:relation/languages", "providerProxy/dc:relation/literalsPerLanguage", "europeanaProxy/dc:relation/taggedLiterals", "europeanaProxy/dc:relation/languages", "europeanaProxy/dc:relation/literalsPerLanguage", "providerProxy/edm:year/taggedLiterals", "providerProxy/edm:year/languages", "providerProxy/edm:year/literalsPerLanguage", "europeanaProxy/edm:year/taggedLiterals", "europeanaProxy/edm:year/languages", "europeanaProxy/edm:year/literalsPerLanguage", "providerProxy/edm:userTag/taggedLiterals", "providerProxy/edm:userTag/languages", "providerProxy/edm:userTag/literalsPerLanguage", "europeanaProxy/edm:userTag/taggedLiterals", "europeanaProxy/edm:userTag/languages", "europeanaProxy/edm:userTag/literalsPerLanguage", "providerProxy/dcterms:conformsTo/taggedLiterals", "providerProxy/dcterms:conformsTo/languages", "providerProxy/dcterms:conformsTo/literalsPerLanguage", "europeanaProxy/dcterms:conformsTo/taggedLiterals", "europeanaProxy/dcterms:conformsTo/languages", "europeanaProxy/dcterms:conformsTo/literalsPerLanguage", "providerProxy/dcterms:hasFormat/taggedLiterals", "providerProxy/dcterms:hasFormat/languages", "providerProxy/dcterms:hasFormat/literalsPerLanguage", "europeanaProxy/dcterms:hasFormat/taggedLiterals", "europeanaProxy/dcterms:hasFormat/languages", "europeanaProxy/dcterms:hasFormat/literalsPerLanguage", "providerProxy/dcterms:hasVersion/taggedLiterals", "providerProxy/dcterms:hasVersion/languages", "providerProxy/dcterms:hasVersion/literalsPerLanguage", "europeanaProxy/dcterms:hasVersion/taggedLiterals", "europeanaProxy/dcterms:hasVersion/languages", "europeanaProxy/dcterms:hasVersion/literalsPerLanguage", "providerProxy/dcterms:isFormatOf/taggedLiterals", "providerProxy/dcterms:isFormatOf/languages", "providerProxy/dcterms:isFormatOf/literalsPerLanguage", "europeanaProxy/dcterms:isFormatOf/taggedLiterals", "europeanaProxy/dcterms:isFormatOf/languages", "europeanaProxy/dcterms:isFormatOf/literalsPerLanguage", "providerProxy/dcterms:isReferencedBy/taggedLiterals", "providerProxy/dcterms:isReferencedBy/languages", "providerProxy/dcterms:isReferencedBy/literalsPerLanguage", "europeanaProxy/dcterms:isReferencedBy/taggedLiterals", "europeanaProxy/dcterms:isReferencedBy/languages", "europeanaProxy/dcterms:isReferencedBy/literalsPerLanguage", "providerProxy/dcterms:isReplacedBy/taggedLiterals", "providerProxy/dcterms:isReplacedBy/languages", "providerProxy/dcterms:isReplacedBy/literalsPerLanguage", "europeanaProxy/dcterms:isReplacedBy/taggedLiterals", "europeanaProxy/dcterms:isReplacedBy/languages", "europeanaProxy/dcterms:isReplacedBy/literalsPerLanguage", "providerProxy/dcterms:isRequiredBy/taggedLiterals", "providerProxy/dcterms:isRequiredBy/languages", "providerProxy/dcterms:isRequiredBy/literalsPerLanguage", "europeanaProxy/dcterms:isRequiredBy/taggedLiterals", "europeanaProxy/dcterms:isRequiredBy/languages", "europeanaProxy/dcterms:isRequiredBy/literalsPerLanguage", "providerProxy/dcterms:isVersionOf/taggedLiterals", "providerProxy/dcterms:isVersionOf/languages", "providerProxy/dcterms:isVersionOf/literalsPerLanguage", "europeanaProxy/dcterms:isVersionOf/taggedLiterals", "europeanaProxy/dcterms:isVersionOf/languages", "europeanaProxy/dcterms:isVersionOf/literalsPerLanguage", "providerProxy/dcterms:references/taggedLiterals", "providerProxy/dcterms:references/languages", "providerProxy/dcterms:references/literalsPerLanguage", "europeanaProxy/dcterms:references/taggedLiterals", "europeanaProxy/dcterms:references/languages", "europeanaProxy/dcterms:references/literalsPerLanguage", "providerProxy/dcterms:replaces/taggedLiterals", "providerProxy/dcterms:replaces/languages", "providerProxy/dcterms:replaces/literalsPerLanguage", "europeanaProxy/dcterms:replaces/taggedLiterals", "europeanaProxy/dcterms:replaces/languages", "europeanaProxy/dcterms:replaces/literalsPerLanguage", "providerProxy/dcterms:requires/taggedLiterals", "providerProxy/dcterms:requires/languages", "providerProxy/dcterms:requires/literalsPerLanguage", "europeanaProxy/dcterms:requires/taggedLiterals", "europeanaProxy/dcterms:requires/languages", "europeanaProxy/dcterms:requires/literalsPerLanguage", "providerProxy/dcterms:tableOfContents/taggedLiterals", "providerProxy/dcterms:tableOfContents/languages", "providerProxy/dcterms:tableOfContents/literalsPerLanguage", "europeanaProxy/dcterms:tableOfContents/taggedLiterals", "europeanaProxy/dcterms:tableOfContents/languages", "europeanaProxy/dcterms:tableOfContents/literalsPerLanguage", "providerProxy/edm:currentLocation/taggedLiterals", "providerProxy/edm:currentLocation/languages", "providerProxy/edm:currentLocation/literalsPerLanguage", "europeanaProxy/edm:currentLocation/taggedLiterals", "europeanaProxy/edm:currentLocation/languages", "europeanaProxy/edm:currentLocation/literalsPerLanguage", "providerProxy/edm:hasMet/taggedLiterals", "providerProxy/edm:hasMet/languages", "providerProxy/edm:hasMet/literalsPerLanguage", "europeanaProxy/edm:hasMet/taggedLiterals", "europeanaProxy/edm:hasMet/languages", "europeanaProxy/edm:hasMet/literalsPerLanguage", "providerProxy/edm:hasType/taggedLiterals", "providerProxy/edm:hasType/languages", "providerProxy/edm:hasType/literalsPerLanguage", "europeanaProxy/edm:hasType/taggedLiterals", "europeanaProxy/edm:hasType/languages", "europeanaProxy/edm:hasType/literalsPerLanguage", "providerProxy/edm:incorporates/taggedLiterals", "providerProxy/edm:incorporates/languages", "providerProxy/edm:incorporates/literalsPerLanguage", "europeanaProxy/edm:incorporates/taggedLiterals", "europeanaProxy/edm:incorporates/languages", "europeanaProxy/edm:incorporates/literalsPerLanguage", "providerProxy/edm:isDerivativeOf/taggedLiterals", "providerProxy/edm:isDerivativeOf/languages", "providerProxy/edm:isDerivativeOf/literalsPerLanguage", "europeanaProxy/edm:isDerivativeOf/taggedLiterals", "europeanaProxy/edm:isDerivativeOf/languages", "europeanaProxy/edm:isDerivativeOf/literalsPerLanguage", "providerProxy/edm:isRelatedTo/taggedLiterals", "providerProxy/edm:isRelatedTo/languages", "providerProxy/edm:isRelatedTo/literalsPerLanguage", "europeanaProxy/edm:isRelatedTo/taggedLiterals", "europeanaProxy/edm:isRelatedTo/languages", "europeanaProxy/edm:isRelatedTo/literalsPerLanguage", "providerProxy/edm:isRepresentationOf/taggedLiterals", "providerProxy/edm:isRepresentationOf/languages", "providerProxy/edm:isRepresentationOf/literalsPerLanguage", "europeanaProxy/edm:isRepresentationOf/taggedLiterals", "europeanaProxy/edm:isRepresentationOf/languages", "europeanaProxy/edm:isRepresentationOf/literalsPerLanguage", "providerProxy/edm:isSimilarTo/taggedLiterals", "providerProxy/edm:isSimilarTo/languages", "providerProxy/edm:isSimilarTo/literalsPerLanguage", "europeanaProxy/edm:isSimilarTo/taggedLiterals", "europeanaProxy/edm:isSimilarTo/languages", "europeanaProxy/edm:isSimilarTo/literalsPerLanguage", "providerProxy/edm:isSuccessorOf/taggedLiterals", "providerProxy/edm:isSuccessorOf/languages", "providerProxy/edm:isSuccessorOf/literalsPerLanguage", "europeanaProxy/edm:isSuccessorOf/taggedLiterals", "europeanaProxy/edm:isSuccessorOf/languages", "europeanaProxy/edm:isSuccessorOf/literalsPerLanguage", "providerProxy/edm:realizes/taggedLiterals", "providerProxy/edm:realizes/languages", "providerProxy/edm:realizes/literalsPerLanguage", "europeanaProxy/edm:realizes/taggedLiterals", "europeanaProxy/edm:realizes/languages", "europeanaProxy/edm:realizes/literalsPerLanguage", "providerProxy/edm:wasPresentAt/taggedLiterals", "providerProxy/edm:wasPresentAt/languages", "providerProxy/edm:wasPresentAt/literalsPerLanguage", "europeanaProxy/edm:wasPresentAt/taggedLiterals", "europeanaProxy/edm:wasPresentAt/languages", "europeanaProxy/edm:wasPresentAt/literalsPerLanguage", "NumberOfLanguagesPerPropertyInProviderProxy", "NumberOfLanguagesPerPropertyInEuropeanaProxy", "NumberOfLanguagesPerPropertyInObject", "TaggedLiteralsInProviderProxy", "TaggedLiteralsInEuropeanaProxy", "DistinctLanguageCountInProviderProxy", "DistinctLanguageCountInEuropeanaProxy", "TaggedLiteralsInObject", "DistinctLanguagesInObject", "TaggedLiteralsPerLanguageInProviderProxy", "TaggedLiteralsPerLanguageInEuropeanaProxy", "TaggedLiteralsPerLanguageInObject");
    assertEquals(312, calculator.getHeader().size());
    assertEquals(expected, calculator.getHeader());
  }

  @Test
  public void testGetHeadersSkipped() {
    EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhJsonSchema());
    calculator.setSkippedEntryChecker(new EdmSkippedEntryChecker());

    List<String> expected = Arrays.asList("providerProxy/dc:title/taggedLiterals", "providerProxy/dc:title/languages", "providerProxy/dc:title/literalsPerLanguage", "europeanaProxy/dc:title/taggedLiterals", "europeanaProxy/dc:title/languages", "europeanaProxy/dc:title/literalsPerLanguage", "providerProxy/dcterms:alternative/taggedLiterals", "providerProxy/dcterms:alternative/languages", "providerProxy/dcterms:alternative/literalsPerLanguage", "europeanaProxy/dcterms:alternative/taggedLiterals", "europeanaProxy/dcterms:alternative/languages", "europeanaProxy/dcterms:alternative/literalsPerLanguage", "providerProxy/dc:description/taggedLiterals", "providerProxy/dc:description/languages", "providerProxy/dc:description/literalsPerLanguage", "europeanaProxy/dc:description/taggedLiterals", "europeanaProxy/dc:description/languages", "europeanaProxy/dc:description/literalsPerLanguage", "providerProxy/dc:creator/taggedLiterals", "providerProxy/dc:creator/languages", "providerProxy/dc:creator/literalsPerLanguage", "europeanaProxy/dc:creator/taggedLiterals", "europeanaProxy/dc:creator/languages", "europeanaProxy/dc:creator/literalsPerLanguage", "providerProxy/dc:publisher/taggedLiterals", "providerProxy/dc:publisher/languages", "providerProxy/dc:publisher/literalsPerLanguage", "europeanaProxy/dc:publisher/taggedLiterals", "europeanaProxy/dc:publisher/languages", "europeanaProxy/dc:publisher/literalsPerLanguage", "providerProxy/dc:contributor/taggedLiterals", "providerProxy/dc:contributor/languages", "providerProxy/dc:contributor/literalsPerLanguage", "europeanaProxy/dc:contributor/taggedLiterals", "europeanaProxy/dc:contributor/languages", "europeanaProxy/dc:contributor/literalsPerLanguage", "providerProxy/dc:type/taggedLiterals", "providerProxy/dc:type/languages", "providerProxy/dc:type/literalsPerLanguage", "europeanaProxy/dc:type/taggedLiterals", "europeanaProxy/dc:type/languages", "europeanaProxy/dc:type/literalsPerLanguage", "providerProxy/dc:identifier/taggedLiterals", "providerProxy/dc:identifier/languages", "providerProxy/dc:identifier/literalsPerLanguage", "europeanaProxy/dc:identifier/taggedLiterals", "europeanaProxy/dc:identifier/languages", "europeanaProxy/dc:identifier/literalsPerLanguage", "providerProxy/dc:language/taggedLiterals", "providerProxy/dc:language/languages", "providerProxy/dc:language/literalsPerLanguage", "europeanaProxy/dc:language/taggedLiterals", "europeanaProxy/dc:language/languages", "europeanaProxy/dc:language/literalsPerLanguage", "providerProxy/dc:coverage/taggedLiterals", "providerProxy/dc:coverage/languages", "providerProxy/dc:coverage/literalsPerLanguage", "europeanaProxy/dc:coverage/taggedLiterals", "europeanaProxy/dc:coverage/languages", "europeanaProxy/dc:coverage/literalsPerLanguage", "providerProxy/dcterms:temporal/taggedLiterals", "providerProxy/dcterms:temporal/languages", "providerProxy/dcterms:temporal/literalsPerLanguage", "europeanaProxy/dcterms:temporal/taggedLiterals", "europeanaProxy/dcterms:temporal/languages", "europeanaProxy/dcterms:temporal/literalsPerLanguage", "providerProxy/dcterms:spatial/taggedLiterals", "providerProxy/dcterms:spatial/languages", "providerProxy/dcterms:spatial/literalsPerLanguage", "europeanaProxy/dcterms:spatial/taggedLiterals", "europeanaProxy/dcterms:spatial/languages", "europeanaProxy/dcterms:spatial/literalsPerLanguage", "providerProxy/dc:subject/taggedLiterals", "providerProxy/dc:subject/languages", "providerProxy/dc:subject/literalsPerLanguage", "europeanaProxy/dc:subject/taggedLiterals", "europeanaProxy/dc:subject/languages", "europeanaProxy/dc:subject/literalsPerLanguage", "providerProxy/dc:date/taggedLiterals", "providerProxy/dc:date/languages", "providerProxy/dc:date/literalsPerLanguage", "europeanaProxy/dc:date/taggedLiterals", "europeanaProxy/dc:date/languages", "europeanaProxy/dc:date/literalsPerLanguage", "providerProxy/dcterms:created/taggedLiterals", "providerProxy/dcterms:created/languages", "providerProxy/dcterms:created/literalsPerLanguage", "europeanaProxy/dcterms:created/taggedLiterals", "europeanaProxy/dcterms:created/languages", "europeanaProxy/dcterms:created/literalsPerLanguage", "providerProxy/dcterms:issued/taggedLiterals", "providerProxy/dcterms:issued/languages", "providerProxy/dcterms:issued/literalsPerLanguage", "europeanaProxy/dcterms:issued/taggedLiterals", "europeanaProxy/dcterms:issued/languages", "europeanaProxy/dcterms:issued/literalsPerLanguage", "providerProxy/dcterms:extent/taggedLiterals", "providerProxy/dcterms:extent/languages", "providerProxy/dcterms:extent/literalsPerLanguage", "europeanaProxy/dcterms:extent/taggedLiterals", "europeanaProxy/dcterms:extent/languages", "europeanaProxy/dcterms:extent/literalsPerLanguage", "providerProxy/dcterms:medium/taggedLiterals", "providerProxy/dcterms:medium/languages", "providerProxy/dcterms:medium/literalsPerLanguage", "europeanaProxy/dcterms:medium/taggedLiterals", "europeanaProxy/dcterms:medium/languages", "europeanaProxy/dcterms:medium/literalsPerLanguage", "providerProxy/dcterms:provenance/taggedLiterals", "providerProxy/dcterms:provenance/languages", "providerProxy/dcterms:provenance/literalsPerLanguage", "europeanaProxy/dcterms:provenance/taggedLiterals", "europeanaProxy/dcterms:provenance/languages", "europeanaProxy/dcterms:provenance/literalsPerLanguage", "providerProxy/dcterms:hasPart/taggedLiterals", "providerProxy/dcterms:hasPart/languages", "providerProxy/dcterms:hasPart/literalsPerLanguage", "europeanaProxy/dcterms:hasPart/taggedLiterals", "europeanaProxy/dcterms:hasPart/languages", "europeanaProxy/dcterms:hasPart/literalsPerLanguage", "providerProxy/dcterms:isPartOf/taggedLiterals", "providerProxy/dcterms:isPartOf/languages", "providerProxy/dcterms:isPartOf/literalsPerLanguage", "europeanaProxy/dcterms:isPartOf/taggedLiterals", "europeanaProxy/dcterms:isPartOf/languages", "europeanaProxy/dcterms:isPartOf/literalsPerLanguage", "providerProxy/dc:format/taggedLiterals", "providerProxy/dc:format/languages", "providerProxy/dc:format/literalsPerLanguage", "europeanaProxy/dc:format/taggedLiterals", "europeanaProxy/dc:format/languages", "europeanaProxy/dc:format/literalsPerLanguage", "providerProxy/dc:source/taggedLiterals", "providerProxy/dc:source/languages", "providerProxy/dc:source/literalsPerLanguage", "europeanaProxy/dc:source/taggedLiterals", "europeanaProxy/dc:source/languages", "europeanaProxy/dc:source/literalsPerLanguage", "providerProxy/dc:rights/taggedLiterals", "providerProxy/dc:rights/languages", "providerProxy/dc:rights/literalsPerLanguage", "europeanaProxy/dc:rights/taggedLiterals", "europeanaProxy/dc:rights/languages", "europeanaProxy/dc:rights/literalsPerLanguage", "providerProxy/dc:relation/taggedLiterals", "providerProxy/dc:relation/languages", "providerProxy/dc:relation/literalsPerLanguage", "europeanaProxy/dc:relation/taggedLiterals", "europeanaProxy/dc:relation/languages", "europeanaProxy/dc:relation/literalsPerLanguage", "providerProxy/edm:year/taggedLiterals", "providerProxy/edm:year/languages", "providerProxy/edm:year/literalsPerLanguage", "europeanaProxy/edm:year/taggedLiterals", "europeanaProxy/edm:year/languages", "europeanaProxy/edm:year/literalsPerLanguage", "providerProxy/edm:userTag/taggedLiterals", "providerProxy/edm:userTag/languages", "providerProxy/edm:userTag/literalsPerLanguage", "europeanaProxy/edm:userTag/taggedLiterals", "europeanaProxy/edm:userTag/languages", "europeanaProxy/edm:userTag/literalsPerLanguage", "providerProxy/dcterms:conformsTo/taggedLiterals", "providerProxy/dcterms:conformsTo/languages", "providerProxy/dcterms:conformsTo/literalsPerLanguage", "europeanaProxy/dcterms:conformsTo/taggedLiterals", "europeanaProxy/dcterms:conformsTo/languages", "europeanaProxy/dcterms:conformsTo/literalsPerLanguage", "providerProxy/dcterms:hasFormat/taggedLiterals", "providerProxy/dcterms:hasFormat/languages", "providerProxy/dcterms:hasFormat/literalsPerLanguage", "europeanaProxy/dcterms:hasFormat/taggedLiterals", "europeanaProxy/dcterms:hasFormat/languages", "europeanaProxy/dcterms:hasFormat/literalsPerLanguage", "providerProxy/dcterms:hasVersion/taggedLiterals", "providerProxy/dcterms:hasVersion/languages", "providerProxy/dcterms:hasVersion/literalsPerLanguage", "europeanaProxy/dcterms:hasVersion/taggedLiterals", "europeanaProxy/dcterms:hasVersion/languages", "europeanaProxy/dcterms:hasVersion/literalsPerLanguage", "providerProxy/dcterms:isFormatOf/taggedLiterals", "providerProxy/dcterms:isFormatOf/languages", "providerProxy/dcterms:isFormatOf/literalsPerLanguage", "europeanaProxy/dcterms:isFormatOf/taggedLiterals", "europeanaProxy/dcterms:isFormatOf/languages", "europeanaProxy/dcterms:isFormatOf/literalsPerLanguage", "providerProxy/dcterms:isReferencedBy/taggedLiterals", "providerProxy/dcterms:isReferencedBy/languages", "providerProxy/dcterms:isReferencedBy/literalsPerLanguage", "europeanaProxy/dcterms:isReferencedBy/taggedLiterals", "europeanaProxy/dcterms:isReferencedBy/languages", "europeanaProxy/dcterms:isReferencedBy/literalsPerLanguage", "providerProxy/dcterms:isReplacedBy/taggedLiterals", "providerProxy/dcterms:isReplacedBy/languages", "providerProxy/dcterms:isReplacedBy/literalsPerLanguage", "europeanaProxy/dcterms:isReplacedBy/taggedLiterals", "europeanaProxy/dcterms:isReplacedBy/languages", "europeanaProxy/dcterms:isReplacedBy/literalsPerLanguage", "providerProxy/dcterms:isRequiredBy/taggedLiterals", "providerProxy/dcterms:isRequiredBy/languages", "providerProxy/dcterms:isRequiredBy/literalsPerLanguage", "europeanaProxy/dcterms:isRequiredBy/taggedLiterals", "europeanaProxy/dcterms:isRequiredBy/languages", "europeanaProxy/dcterms:isRequiredBy/literalsPerLanguage", "providerProxy/dcterms:isVersionOf/taggedLiterals", "providerProxy/dcterms:isVersionOf/languages", "providerProxy/dcterms:isVersionOf/literalsPerLanguage", "europeanaProxy/dcterms:isVersionOf/taggedLiterals", "europeanaProxy/dcterms:isVersionOf/languages", "europeanaProxy/dcterms:isVersionOf/literalsPerLanguage", "providerProxy/dcterms:references/taggedLiterals", "providerProxy/dcterms:references/languages", "providerProxy/dcterms:references/literalsPerLanguage", "europeanaProxy/dcterms:references/taggedLiterals", "europeanaProxy/dcterms:references/languages", "europeanaProxy/dcterms:references/literalsPerLanguage", "providerProxy/dcterms:replaces/taggedLiterals", "providerProxy/dcterms:replaces/languages", "providerProxy/dcterms:replaces/literalsPerLanguage", "europeanaProxy/dcterms:replaces/taggedLiterals", "europeanaProxy/dcterms:replaces/languages", "europeanaProxy/dcterms:replaces/literalsPerLanguage", "providerProxy/dcterms:requires/taggedLiterals", "providerProxy/dcterms:requires/languages", "providerProxy/dcterms:requires/literalsPerLanguage", "europeanaProxy/dcterms:requires/taggedLiterals", "europeanaProxy/dcterms:requires/languages", "europeanaProxy/dcterms:requires/literalsPerLanguage", "providerProxy/dcterms:tableOfContents/taggedLiterals", "providerProxy/dcterms:tableOfContents/languages", "providerProxy/dcterms:tableOfContents/literalsPerLanguage", "europeanaProxy/dcterms:tableOfContents/taggedLiterals", "europeanaProxy/dcterms:tableOfContents/languages", "europeanaProxy/dcterms:tableOfContents/literalsPerLanguage", "providerProxy/edm:currentLocation/taggedLiterals", "providerProxy/edm:currentLocation/languages", "providerProxy/edm:currentLocation/literalsPerLanguage", "europeanaProxy/edm:currentLocation/taggedLiterals", "europeanaProxy/edm:currentLocation/languages", "europeanaProxy/edm:currentLocation/literalsPerLanguage", "providerProxy/edm:hasMet/taggedLiterals", "providerProxy/edm:hasMet/languages", "providerProxy/edm:hasMet/literalsPerLanguage", "europeanaProxy/edm:hasMet/taggedLiterals", "europeanaProxy/edm:hasMet/languages", "europeanaProxy/edm:hasMet/literalsPerLanguage", "providerProxy/edm:hasType/taggedLiterals", "providerProxy/edm:hasType/languages", "providerProxy/edm:hasType/literalsPerLanguage", "europeanaProxy/edm:hasType/taggedLiterals", "europeanaProxy/edm:hasType/languages", "europeanaProxy/edm:hasType/literalsPerLanguage", "providerProxy/edm:incorporates/taggedLiterals", "providerProxy/edm:incorporates/languages", "providerProxy/edm:incorporates/literalsPerLanguage", "europeanaProxy/edm:incorporates/taggedLiterals", "europeanaProxy/edm:incorporates/languages", "europeanaProxy/edm:incorporates/literalsPerLanguage", "providerProxy/edm:isDerivativeOf/taggedLiterals", "providerProxy/edm:isDerivativeOf/languages", "providerProxy/edm:isDerivativeOf/literalsPerLanguage", "europeanaProxy/edm:isDerivativeOf/taggedLiterals", "europeanaProxy/edm:isDerivativeOf/languages", "europeanaProxy/edm:isDerivativeOf/literalsPerLanguage", "providerProxy/edm:isRelatedTo/taggedLiterals", "providerProxy/edm:isRelatedTo/languages", "providerProxy/edm:isRelatedTo/literalsPerLanguage", "europeanaProxy/edm:isRelatedTo/taggedLiterals", "europeanaProxy/edm:isRelatedTo/languages", "europeanaProxy/edm:isRelatedTo/literalsPerLanguage", "providerProxy/edm:isRepresentationOf/taggedLiterals", "providerProxy/edm:isRepresentationOf/languages", "providerProxy/edm:isRepresentationOf/literalsPerLanguage", "europeanaProxy/edm:isRepresentationOf/taggedLiterals", "europeanaProxy/edm:isRepresentationOf/languages", "europeanaProxy/edm:isRepresentationOf/literalsPerLanguage", "providerProxy/edm:isSimilarTo/taggedLiterals", "providerProxy/edm:isSimilarTo/languages", "providerProxy/edm:isSimilarTo/literalsPerLanguage", "europeanaProxy/edm:isSimilarTo/taggedLiterals", "europeanaProxy/edm:isSimilarTo/languages", "europeanaProxy/edm:isSimilarTo/literalsPerLanguage", "providerProxy/edm:isSuccessorOf/taggedLiterals", "providerProxy/edm:isSuccessorOf/languages", "providerProxy/edm:isSuccessorOf/literalsPerLanguage", "europeanaProxy/edm:isSuccessorOf/taggedLiterals", "europeanaProxy/edm:isSuccessorOf/languages", "europeanaProxy/edm:isSuccessorOf/literalsPerLanguage", "providerProxy/edm:realizes/taggedLiterals", "providerProxy/edm:realizes/languages", "providerProxy/edm:realizes/literalsPerLanguage", "europeanaProxy/edm:realizes/taggedLiterals", "europeanaProxy/edm:realizes/languages", "europeanaProxy/edm:realizes/literalsPerLanguage", "providerProxy/edm:wasPresentAt/taggedLiterals", "providerProxy/edm:wasPresentAt/languages", "providerProxy/edm:wasPresentAt/literalsPerLanguage", "europeanaProxy/edm:wasPresentAt/taggedLiterals", "europeanaProxy/edm:wasPresentAt/languages", "europeanaProxy/edm:wasPresentAt/literalsPerLanguage", "NumberOfLanguagesPerPropertyInProviderProxy", "NumberOfLanguagesPerPropertyInEuropeanaProxy", "NumberOfLanguagesPerPropertyInObject", "TaggedLiteralsInProviderProxy", "TaggedLiteralsInEuropeanaProxy", "DistinctLanguageCountInProviderProxy", "DistinctLanguageCountInEuropeanaProxy", "TaggedLiteralsInObject", "DistinctLanguagesInObject", "TaggedLiteralsPerLanguageInProviderProxy", "TaggedLiteralsPerLanguageInEuropeanaProxy", "TaggedLiteralsPerLanguageInObject");
    assertEquals(312, calculator.getHeader().size());
    assertEquals(expected, calculator.getHeader());

    calculator.setResultType(MultilingualityResultType.EXTENDED);
    expected = Arrays.asList("providerProxy/dc:title/taggedLiterals", "providerProxy/dc:title/languages", "providerProxy/dc:title/literalsPerLanguage", "europeanaProxy/dc:title/taggedLiterals", "europeanaProxy/dc:title/languages", "europeanaProxy/dc:title/literalsPerLanguage", "providerProxy/dcterms:alternative/taggedLiterals", "providerProxy/dcterms:alternative/languages", "providerProxy/dcterms:alternative/literalsPerLanguage", "europeanaProxy/dcterms:alternative/taggedLiterals", "europeanaProxy/dcterms:alternative/languages", "europeanaProxy/dcterms:alternative/literalsPerLanguage", "providerProxy/dc:description/taggedLiterals", "providerProxy/dc:description/languages", "providerProxy/dc:description/literalsPerLanguage", "europeanaProxy/dc:description/taggedLiterals", "europeanaProxy/dc:description/languages", "europeanaProxy/dc:description/literalsPerLanguage", "providerProxy/dc:creator/taggedLiterals", "providerProxy/dc:creator/languages", "providerProxy/dc:creator/literalsPerLanguage", "europeanaProxy/dc:creator/taggedLiterals", "europeanaProxy/dc:creator/languages", "europeanaProxy/dc:creator/literalsPerLanguage", "providerProxy/dc:publisher/taggedLiterals", "providerProxy/dc:publisher/languages", "providerProxy/dc:publisher/literalsPerLanguage", "europeanaProxy/dc:publisher/taggedLiterals", "europeanaProxy/dc:publisher/languages", "europeanaProxy/dc:publisher/literalsPerLanguage", "providerProxy/dc:contributor/taggedLiterals", "providerProxy/dc:contributor/languages", "providerProxy/dc:contributor/literalsPerLanguage", "europeanaProxy/dc:contributor/taggedLiterals", "europeanaProxy/dc:contributor/languages", "europeanaProxy/dc:contributor/literalsPerLanguage", "providerProxy/dc:type/taggedLiterals", "providerProxy/dc:type/languages", "providerProxy/dc:type/literalsPerLanguage", "europeanaProxy/dc:type/taggedLiterals", "europeanaProxy/dc:type/languages", "europeanaProxy/dc:type/literalsPerLanguage", "providerProxy/dc:identifier/taggedLiterals", "providerProxy/dc:identifier/languages", "providerProxy/dc:identifier/literalsPerLanguage", "europeanaProxy/dc:identifier/taggedLiterals", "europeanaProxy/dc:identifier/languages", "europeanaProxy/dc:identifier/literalsPerLanguage", "providerProxy/dc:language/taggedLiterals", "providerProxy/dc:language/languages", "providerProxy/dc:language/literalsPerLanguage", "europeanaProxy/dc:language/taggedLiterals", "europeanaProxy/dc:language/languages", "europeanaProxy/dc:language/literalsPerLanguage", "providerProxy/dc:coverage/taggedLiterals", "providerProxy/dc:coverage/languages", "providerProxy/dc:coverage/literalsPerLanguage", "europeanaProxy/dc:coverage/taggedLiterals", "europeanaProxy/dc:coverage/languages", "europeanaProxy/dc:coverage/literalsPerLanguage", "providerProxy/dcterms:temporal/taggedLiterals", "providerProxy/dcterms:temporal/languages", "providerProxy/dcterms:temporal/literalsPerLanguage", "europeanaProxy/dcterms:temporal/taggedLiterals", "europeanaProxy/dcterms:temporal/languages", "europeanaProxy/dcterms:temporal/literalsPerLanguage", "providerProxy/dcterms:spatial/taggedLiterals", "providerProxy/dcterms:spatial/languages", "providerProxy/dcterms:spatial/literalsPerLanguage", "europeanaProxy/dcterms:spatial/taggedLiterals", "europeanaProxy/dcterms:spatial/languages", "europeanaProxy/dcterms:spatial/literalsPerLanguage", "providerProxy/dc:subject/taggedLiterals", "providerProxy/dc:subject/languages", "providerProxy/dc:subject/literalsPerLanguage", "europeanaProxy/dc:subject/taggedLiterals", "europeanaProxy/dc:subject/languages", "europeanaProxy/dc:subject/literalsPerLanguage", "providerProxy/dc:date/taggedLiterals", "providerProxy/dc:date/languages", "providerProxy/dc:date/literalsPerLanguage", "europeanaProxy/dc:date/taggedLiterals", "europeanaProxy/dc:date/languages", "europeanaProxy/dc:date/literalsPerLanguage", "providerProxy/dcterms:created/taggedLiterals", "providerProxy/dcterms:created/languages", "providerProxy/dcterms:created/literalsPerLanguage", "europeanaProxy/dcterms:created/taggedLiterals", "europeanaProxy/dcterms:created/languages", "europeanaProxy/dcterms:created/literalsPerLanguage", "providerProxy/dcterms:issued/taggedLiterals", "providerProxy/dcterms:issued/languages", "providerProxy/dcterms:issued/literalsPerLanguage", "europeanaProxy/dcterms:issued/taggedLiterals", "europeanaProxy/dcterms:issued/languages", "europeanaProxy/dcterms:issued/literalsPerLanguage", "providerProxy/dcterms:extent/taggedLiterals", "providerProxy/dcterms:extent/languages", "providerProxy/dcterms:extent/literalsPerLanguage", "europeanaProxy/dcterms:extent/taggedLiterals", "europeanaProxy/dcterms:extent/languages", "europeanaProxy/dcterms:extent/literalsPerLanguage", "providerProxy/dcterms:medium/taggedLiterals", "providerProxy/dcterms:medium/languages", "providerProxy/dcterms:medium/literalsPerLanguage", "europeanaProxy/dcterms:medium/taggedLiterals", "europeanaProxy/dcterms:medium/languages", "europeanaProxy/dcterms:medium/literalsPerLanguage", "providerProxy/dcterms:provenance/taggedLiterals", "providerProxy/dcterms:provenance/languages", "providerProxy/dcterms:provenance/literalsPerLanguage", "europeanaProxy/dcterms:provenance/taggedLiterals", "europeanaProxy/dcterms:provenance/languages", "europeanaProxy/dcterms:provenance/literalsPerLanguage", "providerProxy/dcterms:hasPart/taggedLiterals", "providerProxy/dcterms:hasPart/languages", "providerProxy/dcterms:hasPart/literalsPerLanguage", "europeanaProxy/dcterms:hasPart/taggedLiterals", "europeanaProxy/dcterms:hasPart/languages", "europeanaProxy/dcterms:hasPart/literalsPerLanguage", "providerProxy/dcterms:isPartOf/taggedLiterals", "providerProxy/dcterms:isPartOf/languages", "providerProxy/dcterms:isPartOf/literalsPerLanguage", "europeanaProxy/dcterms:isPartOf/taggedLiterals", "europeanaProxy/dcterms:isPartOf/languages", "europeanaProxy/dcterms:isPartOf/literalsPerLanguage", "providerProxy/dc:format/taggedLiterals", "providerProxy/dc:format/languages", "providerProxy/dc:format/literalsPerLanguage", "europeanaProxy/dc:format/taggedLiterals", "europeanaProxy/dc:format/languages", "europeanaProxy/dc:format/literalsPerLanguage", "providerProxy/dc:source/taggedLiterals", "providerProxy/dc:source/languages", "providerProxy/dc:source/literalsPerLanguage", "europeanaProxy/dc:source/taggedLiterals", "europeanaProxy/dc:source/languages", "europeanaProxy/dc:source/literalsPerLanguage", "providerProxy/dc:rights/taggedLiterals", "providerProxy/dc:rights/languages", "providerProxy/dc:rights/literalsPerLanguage", "europeanaProxy/dc:rights/taggedLiterals", "europeanaProxy/dc:rights/languages", "europeanaProxy/dc:rights/literalsPerLanguage", "providerProxy/dc:relation/taggedLiterals", "providerProxy/dc:relation/languages", "providerProxy/dc:relation/literalsPerLanguage", "europeanaProxy/dc:relation/taggedLiterals", "europeanaProxy/dc:relation/languages", "europeanaProxy/dc:relation/literalsPerLanguage", "providerProxy/edm:year/taggedLiterals", "providerProxy/edm:year/languages", "providerProxy/edm:year/literalsPerLanguage", "europeanaProxy/edm:year/taggedLiterals", "europeanaProxy/edm:year/languages", "europeanaProxy/edm:year/literalsPerLanguage", "providerProxy/edm:userTag/taggedLiterals", "providerProxy/edm:userTag/languages", "providerProxy/edm:userTag/literalsPerLanguage", "europeanaProxy/edm:userTag/taggedLiterals", "europeanaProxy/edm:userTag/languages", "europeanaProxy/edm:userTag/literalsPerLanguage", "providerProxy/dcterms:conformsTo/taggedLiterals", "providerProxy/dcterms:conformsTo/languages", "providerProxy/dcterms:conformsTo/literalsPerLanguage", "europeanaProxy/dcterms:conformsTo/taggedLiterals", "europeanaProxy/dcterms:conformsTo/languages", "europeanaProxy/dcterms:conformsTo/literalsPerLanguage", "providerProxy/dcterms:hasFormat/taggedLiterals", "providerProxy/dcterms:hasFormat/languages", "providerProxy/dcterms:hasFormat/literalsPerLanguage", "europeanaProxy/dcterms:hasFormat/taggedLiterals", "europeanaProxy/dcterms:hasFormat/languages", "europeanaProxy/dcterms:hasFormat/literalsPerLanguage", "providerProxy/dcterms:hasVersion/taggedLiterals", "providerProxy/dcterms:hasVersion/languages", "providerProxy/dcterms:hasVersion/literalsPerLanguage", "europeanaProxy/dcterms:hasVersion/taggedLiterals", "europeanaProxy/dcterms:hasVersion/languages", "europeanaProxy/dcterms:hasVersion/literalsPerLanguage", "providerProxy/dcterms:isFormatOf/taggedLiterals", "providerProxy/dcterms:isFormatOf/languages", "providerProxy/dcterms:isFormatOf/literalsPerLanguage", "europeanaProxy/dcterms:isFormatOf/taggedLiterals", "europeanaProxy/dcterms:isFormatOf/languages", "europeanaProxy/dcterms:isFormatOf/literalsPerLanguage", "providerProxy/dcterms:isReferencedBy/taggedLiterals", "providerProxy/dcterms:isReferencedBy/languages", "providerProxy/dcterms:isReferencedBy/literalsPerLanguage", "europeanaProxy/dcterms:isReferencedBy/taggedLiterals", "europeanaProxy/dcterms:isReferencedBy/languages", "europeanaProxy/dcterms:isReferencedBy/literalsPerLanguage", "providerProxy/dcterms:isReplacedBy/taggedLiterals", "providerProxy/dcterms:isReplacedBy/languages", "providerProxy/dcterms:isReplacedBy/literalsPerLanguage", "europeanaProxy/dcterms:isReplacedBy/taggedLiterals", "europeanaProxy/dcterms:isReplacedBy/languages", "europeanaProxy/dcterms:isReplacedBy/literalsPerLanguage", "providerProxy/dcterms:isRequiredBy/taggedLiterals", "providerProxy/dcterms:isRequiredBy/languages", "providerProxy/dcterms:isRequiredBy/literalsPerLanguage", "europeanaProxy/dcterms:isRequiredBy/taggedLiterals", "europeanaProxy/dcterms:isRequiredBy/languages", "europeanaProxy/dcterms:isRequiredBy/literalsPerLanguage", "providerProxy/dcterms:isVersionOf/taggedLiterals", "providerProxy/dcterms:isVersionOf/languages", "providerProxy/dcterms:isVersionOf/literalsPerLanguage", "europeanaProxy/dcterms:isVersionOf/taggedLiterals", "europeanaProxy/dcterms:isVersionOf/languages", "europeanaProxy/dcterms:isVersionOf/literalsPerLanguage", "providerProxy/dcterms:references/taggedLiterals", "providerProxy/dcterms:references/languages", "providerProxy/dcterms:references/literalsPerLanguage", "europeanaProxy/dcterms:references/taggedLiterals", "europeanaProxy/dcterms:references/languages", "europeanaProxy/dcterms:references/literalsPerLanguage", "providerProxy/dcterms:replaces/taggedLiterals", "providerProxy/dcterms:replaces/languages", "providerProxy/dcterms:replaces/literalsPerLanguage", "europeanaProxy/dcterms:replaces/taggedLiterals", "europeanaProxy/dcterms:replaces/languages", "europeanaProxy/dcterms:replaces/literalsPerLanguage", "providerProxy/dcterms:requires/taggedLiterals", "providerProxy/dcterms:requires/languages", "providerProxy/dcterms:requires/literalsPerLanguage", "europeanaProxy/dcterms:requires/taggedLiterals", "europeanaProxy/dcterms:requires/languages", "europeanaProxy/dcterms:requires/literalsPerLanguage", "providerProxy/dcterms:tableOfContents/taggedLiterals", "providerProxy/dcterms:tableOfContents/languages", "providerProxy/dcterms:tableOfContents/literalsPerLanguage", "europeanaProxy/dcterms:tableOfContents/taggedLiterals", "europeanaProxy/dcterms:tableOfContents/languages", "europeanaProxy/dcterms:tableOfContents/literalsPerLanguage", "providerProxy/edm:currentLocation/taggedLiterals", "providerProxy/edm:currentLocation/languages", "providerProxy/edm:currentLocation/literalsPerLanguage", "europeanaProxy/edm:currentLocation/taggedLiterals", "europeanaProxy/edm:currentLocation/languages", "europeanaProxy/edm:currentLocation/literalsPerLanguage", "providerProxy/edm:hasMet/taggedLiterals", "providerProxy/edm:hasMet/languages", "providerProxy/edm:hasMet/literalsPerLanguage", "europeanaProxy/edm:hasMet/taggedLiterals", "europeanaProxy/edm:hasMet/languages", "europeanaProxy/edm:hasMet/literalsPerLanguage", "providerProxy/edm:hasType/taggedLiterals", "providerProxy/edm:hasType/languages", "providerProxy/edm:hasType/literalsPerLanguage", "europeanaProxy/edm:hasType/taggedLiterals", "europeanaProxy/edm:hasType/languages", "europeanaProxy/edm:hasType/literalsPerLanguage", "providerProxy/edm:incorporates/taggedLiterals", "providerProxy/edm:incorporates/languages", "providerProxy/edm:incorporates/literalsPerLanguage", "europeanaProxy/edm:incorporates/taggedLiterals", "europeanaProxy/edm:incorporates/languages", "europeanaProxy/edm:incorporates/literalsPerLanguage", "providerProxy/edm:isDerivativeOf/taggedLiterals", "providerProxy/edm:isDerivativeOf/languages", "providerProxy/edm:isDerivativeOf/literalsPerLanguage", "europeanaProxy/edm:isDerivativeOf/taggedLiterals", "europeanaProxy/edm:isDerivativeOf/languages", "europeanaProxy/edm:isDerivativeOf/literalsPerLanguage", "providerProxy/edm:isRelatedTo/taggedLiterals", "providerProxy/edm:isRelatedTo/languages", "providerProxy/edm:isRelatedTo/literalsPerLanguage", "europeanaProxy/edm:isRelatedTo/taggedLiterals", "europeanaProxy/edm:isRelatedTo/languages", "europeanaProxy/edm:isRelatedTo/literalsPerLanguage", "providerProxy/edm:isRepresentationOf/taggedLiterals", "providerProxy/edm:isRepresentationOf/languages", "providerProxy/edm:isRepresentationOf/literalsPerLanguage", "europeanaProxy/edm:isRepresentationOf/taggedLiterals", "europeanaProxy/edm:isRepresentationOf/languages", "europeanaProxy/edm:isRepresentationOf/literalsPerLanguage", "providerProxy/edm:isSimilarTo/taggedLiterals", "providerProxy/edm:isSimilarTo/languages", "providerProxy/edm:isSimilarTo/literalsPerLanguage", "europeanaProxy/edm:isSimilarTo/taggedLiterals", "europeanaProxy/edm:isSimilarTo/languages", "europeanaProxy/edm:isSimilarTo/literalsPerLanguage", "providerProxy/edm:isSuccessorOf/taggedLiterals", "providerProxy/edm:isSuccessorOf/languages", "providerProxy/edm:isSuccessorOf/literalsPerLanguage", "europeanaProxy/edm:isSuccessorOf/taggedLiterals", "europeanaProxy/edm:isSuccessorOf/languages", "europeanaProxy/edm:isSuccessorOf/literalsPerLanguage", "providerProxy/edm:realizes/taggedLiterals", "providerProxy/edm:realizes/languages", "providerProxy/edm:realizes/literalsPerLanguage", "europeanaProxy/edm:realizes/taggedLiterals", "europeanaProxy/edm:realizes/languages", "europeanaProxy/edm:realizes/literalsPerLanguage", "providerProxy/edm:wasPresentAt/taggedLiterals", "providerProxy/edm:wasPresentAt/languages", "providerProxy/edm:wasPresentAt/literalsPerLanguage", "europeanaProxy/edm:wasPresentAt/taggedLiterals", "europeanaProxy/edm:wasPresentAt/languages", "europeanaProxy/edm:wasPresentAt/literalsPerLanguage", "NumberOfLanguagesPerPropertyInProviderProxy", "NumberOfLanguagesPerPropertyInEuropeanaProxy", "NumberOfLanguagesPerPropertyInObject", "TaggedLiteralsInProviderProxy", "TaggedLiteralsInEuropeanaProxy", "DistinctLanguageCountInProviderProxy", "DistinctLanguageCountInEuropeanaProxy", "TaggedLiteralsInObject", "DistinctLanguagesInObject", "TaggedLiteralsPerLanguageInProviderProxy", "TaggedLiteralsPerLanguageInEuropeanaProxy", "TaggedLiteralsPerLanguageInObject");
    assertEquals(312, calculator.getHeader().size());
    assertEquals(expected, calculator.getHeader());
  }

  @Test
  public void testIssue8MultipleSameLanguages() throws URISyntaxException, IOException {
    EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhJsonSchema());
    JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("issue-examples/issue8-multiple-same-languages.json"));
    calculator.measure(cache);
    Map<String, Double> languages = calculator.getSaturationMap();
    assertEquals(new Double(4.0), languages.get("providerProxy/dc:title/taggedLiterals"));
  }

  @Test
  public void testIssue8MultipleSameLanguagesSkipped() throws URISyntaxException, IOException {
    EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhJsonSchema());
    calculator.setSkippedEntryChecker(new EdmSkippedEntryChecker());
    JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("issue-examples/issue8-multiple-same-languages.json"));
    calculator.measure(cache);
    Map<String, Double> languages = calculator.getSaturationMap();

    assertEquals(new Double(4.0), languages.get("providerProxy/dc:title/taggedLiterals")); languages.remove("providerProxy/dc:title/taggedLiterals");
    assertEquals(new Double(1.0), languages.get("providerProxy/dc:title/languages")); languages.remove("providerProxy/dc:title/languages");
    assertEquals(new Double(4.0), languages.get("providerProxy/dc:title/literalsPerLanguage")); languages.remove("providerProxy/dc:title/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:title/taggedLiterals")); languages.remove("europeanaProxy/dc:title/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:title/languages")); languages.remove("europeanaProxy/dc:title/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:title/literalsPerLanguage")); languages.remove("europeanaProxy/dc:title/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:alternative/taggedLiterals")); languages.remove("providerProxy/dcterms:alternative/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:alternative/languages")); languages.remove("providerProxy/dcterms:alternative/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:alternative/literalsPerLanguage")); languages.remove("providerProxy/dcterms:alternative/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:alternative/taggedLiterals")); languages.remove("europeanaProxy/dcterms:alternative/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:alternative/languages")); languages.remove("europeanaProxy/dcterms:alternative/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:alternative/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:alternative/literalsPerLanguage");
    assertEquals(new Double(1.0), languages.get("providerProxy/dc:description/taggedLiterals")); languages.remove("providerProxy/dc:description/taggedLiterals");
    assertEquals(new Double(1.0), languages.get("providerProxy/dc:description/languages")); languages.remove("providerProxy/dc:description/languages");
    assertEquals(new Double(1.0), languages.get("providerProxy/dc:description/literalsPerLanguage")); languages.remove("providerProxy/dc:description/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:description/taggedLiterals")); languages.remove("europeanaProxy/dc:description/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:description/languages")); languages.remove("europeanaProxy/dc:description/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:description/literalsPerLanguage")); languages.remove("europeanaProxy/dc:description/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:creator/taggedLiterals")); languages.remove("providerProxy/dc:creator/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:creator/languages")); languages.remove("providerProxy/dc:creator/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:creator/literalsPerLanguage")); languages.remove("providerProxy/dc:creator/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:creator/taggedLiterals")); languages.remove("europeanaProxy/dc:creator/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:creator/languages")); languages.remove("europeanaProxy/dc:creator/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:creator/literalsPerLanguage")); languages.remove("europeanaProxy/dc:creator/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:publisher/taggedLiterals")); languages.remove("providerProxy/dc:publisher/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:publisher/languages")); languages.remove("providerProxy/dc:publisher/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:publisher/literalsPerLanguage")); languages.remove("providerProxy/dc:publisher/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:publisher/taggedLiterals")); languages.remove("europeanaProxy/dc:publisher/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:publisher/languages")); languages.remove("europeanaProxy/dc:publisher/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:publisher/literalsPerLanguage")); languages.remove("europeanaProxy/dc:publisher/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:contributor/taggedLiterals")); languages.remove("providerProxy/dc:contributor/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:contributor/languages")); languages.remove("providerProxy/dc:contributor/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:contributor/literalsPerLanguage")); languages.remove("providerProxy/dc:contributor/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:contributor/taggedLiterals")); languages.remove("europeanaProxy/dc:contributor/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:contributor/languages")); languages.remove("europeanaProxy/dc:contributor/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:contributor/literalsPerLanguage")); languages.remove("europeanaProxy/dc:contributor/literalsPerLanguage");
    assertEquals(new Double(6.0), languages.get("providerProxy/dc:type/taggedLiterals")); languages.remove("providerProxy/dc:type/taggedLiterals");
    assertEquals(new Double(6.0), languages.get("providerProxy/dc:type/languages")); languages.remove("providerProxy/dc:type/languages");
    assertEquals(new Double(1.0), languages.get("providerProxy/dc:type/literalsPerLanguage")); languages.remove("providerProxy/dc:type/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:type/taggedLiterals")); languages.remove("europeanaProxy/dc:type/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:type/languages")); languages.remove("europeanaProxy/dc:type/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:type/literalsPerLanguage")); languages.remove("europeanaProxy/dc:type/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:identifier/taggedLiterals")); languages.remove("providerProxy/dc:identifier/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:identifier/languages")); languages.remove("providerProxy/dc:identifier/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:identifier/literalsPerLanguage")); languages.remove("providerProxy/dc:identifier/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:identifier/taggedLiterals")); languages.remove("europeanaProxy/dc:identifier/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:identifier/languages")); languages.remove("europeanaProxy/dc:identifier/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:identifier/literalsPerLanguage")); languages.remove("europeanaProxy/dc:identifier/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:language/taggedLiterals")); languages.remove("providerProxy/dc:language/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:language/languages")); languages.remove("providerProxy/dc:language/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:language/literalsPerLanguage")); languages.remove("providerProxy/dc:language/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:language/taggedLiterals")); languages.remove("europeanaProxy/dc:language/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:language/languages")); languages.remove("europeanaProxy/dc:language/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:language/literalsPerLanguage")); languages.remove("europeanaProxy/dc:language/literalsPerLanguage");
    assertEquals(new Double(2.0), languages.get("providerProxy/dc:coverage/taggedLiterals")); languages.remove("providerProxy/dc:coverage/taggedLiterals");
    assertEquals(new Double(2.0), languages.get("providerProxy/dc:coverage/languages")); languages.remove("providerProxy/dc:coverage/languages");
    assertEquals(new Double(1.0), languages.get("providerProxy/dc:coverage/literalsPerLanguage")); languages.remove("providerProxy/dc:coverage/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:coverage/taggedLiterals")); languages.remove("europeanaProxy/dc:coverage/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:coverage/languages")); languages.remove("europeanaProxy/dc:coverage/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:coverage/literalsPerLanguage")); languages.remove("europeanaProxy/dc:coverage/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:temporal/taggedLiterals")); languages.remove("providerProxy/dcterms:temporal/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:temporal/languages")); languages.remove("providerProxy/dcterms:temporal/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:temporal/literalsPerLanguage")); languages.remove("providerProxy/dcterms:temporal/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:temporal/taggedLiterals")); languages.remove("europeanaProxy/dcterms:temporal/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:temporal/languages")); languages.remove("europeanaProxy/dcterms:temporal/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:temporal/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:temporal/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:spatial/taggedLiterals")); languages.remove("providerProxy/dcterms:spatial/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:spatial/languages")); languages.remove("providerProxy/dcterms:spatial/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:spatial/literalsPerLanguage")); languages.remove("providerProxy/dcterms:spatial/literalsPerLanguage");
    assertEquals(new Double(129.0), languages.get("europeanaProxy/dcterms:spatial/taggedLiterals")); languages.remove("europeanaProxy/dcterms:spatial/taggedLiterals");
    assertEquals(new Double(113.0), languages.get("europeanaProxy/dcterms:spatial/languages")); languages.remove("europeanaProxy/dcterms:spatial/languages");
    assertEquals(new Double(1.1415929203539823), languages.get("europeanaProxy/dcterms:spatial/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:spatial/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:subject/taggedLiterals")); languages.remove("providerProxy/dc:subject/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:subject/languages")); languages.remove("providerProxy/dc:subject/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:subject/literalsPerLanguage")); languages.remove("providerProxy/dc:subject/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:subject/taggedLiterals")); languages.remove("europeanaProxy/dc:subject/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:subject/languages")); languages.remove("europeanaProxy/dc:subject/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:subject/literalsPerLanguage")); languages.remove("europeanaProxy/dc:subject/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:date/taggedLiterals")); languages.remove("providerProxy/dc:date/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:date/languages")); languages.remove("providerProxy/dc:date/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:date/literalsPerLanguage")); languages.remove("providerProxy/dc:date/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:date/taggedLiterals")); languages.remove("europeanaProxy/dc:date/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:date/languages")); languages.remove("europeanaProxy/dc:date/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:date/literalsPerLanguage")); languages.remove("europeanaProxy/dc:date/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:created/taggedLiterals")); languages.remove("providerProxy/dcterms:created/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:created/languages")); languages.remove("providerProxy/dcterms:created/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:created/literalsPerLanguage")); languages.remove("providerProxy/dcterms:created/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:created/taggedLiterals")); languages.remove("europeanaProxy/dcterms:created/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:created/languages")); languages.remove("europeanaProxy/dcterms:created/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:created/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:created/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:issued/taggedLiterals")); languages.remove("providerProxy/dcterms:issued/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:issued/languages")); languages.remove("providerProxy/dcterms:issued/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:issued/literalsPerLanguage")); languages.remove("providerProxy/dcterms:issued/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:issued/taggedLiterals")); languages.remove("europeanaProxy/dcterms:issued/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:issued/languages")); languages.remove("europeanaProxy/dcterms:issued/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:issued/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:issued/literalsPerLanguage");
    assertEquals(new Double(4.0), languages.get("providerProxy/dcterms:extent/taggedLiterals")); languages.remove("providerProxy/dcterms:extent/taggedLiterals");
    assertEquals(new Double(2.0), languages.get("providerProxy/dcterms:extent/languages")); languages.remove("providerProxy/dcterms:extent/languages");
    assertEquals(new Double(2.0), languages.get("providerProxy/dcterms:extent/literalsPerLanguage")); languages.remove("providerProxy/dcterms:extent/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:extent/taggedLiterals")); languages.remove("europeanaProxy/dcterms:extent/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:extent/languages")); languages.remove("europeanaProxy/dcterms:extent/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:extent/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:extent/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:medium/taggedLiterals")); languages.remove("providerProxy/dcterms:medium/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:medium/languages")); languages.remove("providerProxy/dcterms:medium/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:medium/literalsPerLanguage")); languages.remove("providerProxy/dcterms:medium/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:medium/taggedLiterals")); languages.remove("europeanaProxy/dcterms:medium/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:medium/languages")); languages.remove("europeanaProxy/dcterms:medium/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:medium/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:medium/literalsPerLanguage");
    assertEquals(new Double(1.0), languages.get("providerProxy/dcterms:provenance/taggedLiterals")); languages.remove("providerProxy/dcterms:provenance/taggedLiterals");
    assertEquals(new Double(1.0), languages.get("providerProxy/dcterms:provenance/languages")); languages.remove("providerProxy/dcterms:provenance/languages");
    assertEquals(new Double(1.0), languages.get("providerProxy/dcterms:provenance/literalsPerLanguage")); languages.remove("providerProxy/dcterms:provenance/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:provenance/taggedLiterals")); languages.remove("europeanaProxy/dcterms:provenance/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:provenance/languages")); languages.remove("europeanaProxy/dcterms:provenance/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:provenance/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:provenance/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:hasPart/taggedLiterals")); languages.remove("providerProxy/dcterms:hasPart/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasPart/languages")); languages.remove("providerProxy/dcterms:hasPart/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasPart/literalsPerLanguage")); languages.remove("providerProxy/dcterms:hasPart/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:hasPart/taggedLiterals")); languages.remove("europeanaProxy/dcterms:hasPart/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:hasPart/languages")); languages.remove("europeanaProxy/dcterms:hasPart/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:hasPart/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:hasPart/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:isPartOf/taggedLiterals")); languages.remove("providerProxy/dcterms:isPartOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isPartOf/languages")); languages.remove("providerProxy/dcterms:isPartOf/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isPartOf/literalsPerLanguage")); languages.remove("providerProxy/dcterms:isPartOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:isPartOf/taggedLiterals")); languages.remove("europeanaProxy/dcterms:isPartOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isPartOf/languages")); languages.remove("europeanaProxy/dcterms:isPartOf/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isPartOf/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:isPartOf/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:format/taggedLiterals")); languages.remove("providerProxy/dc:format/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:format/languages")); languages.remove("providerProxy/dc:format/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:format/literalsPerLanguage")); languages.remove("providerProxy/dc:format/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:format/taggedLiterals")); languages.remove("europeanaProxy/dc:format/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:format/languages")); languages.remove("europeanaProxy/dc:format/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:format/literalsPerLanguage")); languages.remove("europeanaProxy/dc:format/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:source/taggedLiterals")); languages.remove("providerProxy/dc:source/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:source/languages")); languages.remove("providerProxy/dc:source/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:source/literalsPerLanguage")); languages.remove("providerProxy/dc:source/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:source/taggedLiterals")); languages.remove("europeanaProxy/dc:source/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:source/languages")); languages.remove("europeanaProxy/dc:source/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:source/literalsPerLanguage")); languages.remove("europeanaProxy/dc:source/literalsPerLanguage");
    assertEquals(new Double(2.0), languages.get("providerProxy/dc:rights/taggedLiterals")); languages.remove("providerProxy/dc:rights/taggedLiterals");
    assertEquals(new Double(2.0), languages.get("providerProxy/dc:rights/languages")); languages.remove("providerProxy/dc:rights/languages");
    assertEquals(new Double(1.0), languages.get("providerProxy/dc:rights/literalsPerLanguage")); languages.remove("providerProxy/dc:rights/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:rights/taggedLiterals")); languages.remove("europeanaProxy/dc:rights/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:rights/languages")); languages.remove("europeanaProxy/dc:rights/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:rights/literalsPerLanguage")); languages.remove("europeanaProxy/dc:rights/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dc:relation/taggedLiterals")); languages.remove("providerProxy/dc:relation/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:relation/languages")); languages.remove("providerProxy/dc:relation/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dc:relation/literalsPerLanguage")); languages.remove("providerProxy/dc:relation/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dc:relation/taggedLiterals")); languages.remove("europeanaProxy/dc:relation/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:relation/languages")); languages.remove("europeanaProxy/dc:relation/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dc:relation/literalsPerLanguage")); languages.remove("europeanaProxy/dc:relation/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:year/taggedLiterals")); languages.remove("providerProxy/edm:year/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:year/languages")); languages.remove("providerProxy/edm:year/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:year/literalsPerLanguage")); languages.remove("providerProxy/edm:year/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:year/taggedLiterals")); languages.remove("europeanaProxy/edm:year/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:year/languages")); languages.remove("europeanaProxy/edm:year/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:year/literalsPerLanguage")); languages.remove("europeanaProxy/edm:year/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:userTag/taggedLiterals")); languages.remove("providerProxy/edm:userTag/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:userTag/languages")); languages.remove("providerProxy/edm:userTag/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:userTag/literalsPerLanguage")); languages.remove("providerProxy/edm:userTag/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:userTag/taggedLiterals")); languages.remove("europeanaProxy/edm:userTag/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:userTag/languages")); languages.remove("europeanaProxy/edm:userTag/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:userTag/literalsPerLanguage")); languages.remove("europeanaProxy/edm:userTag/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:conformsTo/taggedLiterals")); languages.remove("providerProxy/dcterms:conformsTo/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:conformsTo/languages")); languages.remove("providerProxy/dcterms:conformsTo/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:conformsTo/literalsPerLanguage")); languages.remove("providerProxy/dcterms:conformsTo/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:conformsTo/taggedLiterals")); languages.remove("europeanaProxy/dcterms:conformsTo/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:conformsTo/languages")); languages.remove("europeanaProxy/dcterms:conformsTo/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:conformsTo/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:conformsTo/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:hasFormat/taggedLiterals")); languages.remove("providerProxy/dcterms:hasFormat/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasFormat/languages")); languages.remove("providerProxy/dcterms:hasFormat/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasFormat/literalsPerLanguage")); languages.remove("providerProxy/dcterms:hasFormat/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:hasFormat/taggedLiterals")); languages.remove("europeanaProxy/dcterms:hasFormat/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:hasFormat/languages")); languages.remove("europeanaProxy/dcterms:hasFormat/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:hasFormat/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:hasFormat/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:hasVersion/taggedLiterals")); languages.remove("providerProxy/dcterms:hasVersion/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasVersion/languages")); languages.remove("providerProxy/dcterms:hasVersion/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:hasVersion/literalsPerLanguage")); languages.remove("providerProxy/dcterms:hasVersion/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:hasVersion/taggedLiterals")); languages.remove("europeanaProxy/dcterms:hasVersion/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:hasVersion/languages")); languages.remove("europeanaProxy/dcterms:hasVersion/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:hasVersion/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:hasVersion/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:isFormatOf/taggedLiterals")); languages.remove("providerProxy/dcterms:isFormatOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isFormatOf/languages")); languages.remove("providerProxy/dcterms:isFormatOf/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isFormatOf/literalsPerLanguage")); languages.remove("providerProxy/dcterms:isFormatOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:isFormatOf/taggedLiterals")); languages.remove("europeanaProxy/dcterms:isFormatOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isFormatOf/languages")); languages.remove("europeanaProxy/dcterms:isFormatOf/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isFormatOf/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:isFormatOf/literalsPerLanguage");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isReferencedBy/taggedLiterals")); languages.remove("providerProxy/dcterms:isReferencedBy/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isReferencedBy/languages")); languages.remove("providerProxy/dcterms:isReferencedBy/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isReferencedBy/literalsPerLanguage")); languages.remove("providerProxy/dcterms:isReferencedBy/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:isReferencedBy/taggedLiterals")); languages.remove("europeanaProxy/dcterms:isReferencedBy/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isReferencedBy/languages")); languages.remove("europeanaProxy/dcterms:isReferencedBy/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isReferencedBy/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:isReferencedBy/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:isReplacedBy/taggedLiterals")); languages.remove("providerProxy/dcterms:isReplacedBy/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isReplacedBy/languages")); languages.remove("providerProxy/dcterms:isReplacedBy/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isReplacedBy/literalsPerLanguage")); languages.remove("providerProxy/dcterms:isReplacedBy/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:isReplacedBy/taggedLiterals")); languages.remove("europeanaProxy/dcterms:isReplacedBy/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isReplacedBy/languages")); languages.remove("europeanaProxy/dcterms:isReplacedBy/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isReplacedBy/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:isReplacedBy/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:isRequiredBy/taggedLiterals")); languages.remove("providerProxy/dcterms:isRequiredBy/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isRequiredBy/languages")); languages.remove("providerProxy/dcterms:isRequiredBy/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isRequiredBy/literalsPerLanguage")); languages.remove("providerProxy/dcterms:isRequiredBy/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:isRequiredBy/taggedLiterals")); languages.remove("europeanaProxy/dcterms:isRequiredBy/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isRequiredBy/languages")); languages.remove("europeanaProxy/dcterms:isRequiredBy/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isRequiredBy/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:isRequiredBy/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:isVersionOf/taggedLiterals")); languages.remove("providerProxy/dcterms:isVersionOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isVersionOf/languages")); languages.remove("providerProxy/dcterms:isVersionOf/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:isVersionOf/literalsPerLanguage")); languages.remove("providerProxy/dcterms:isVersionOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:isVersionOf/taggedLiterals")); languages.remove("europeanaProxy/dcterms:isVersionOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isVersionOf/languages")); languages.remove("europeanaProxy/dcterms:isVersionOf/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:isVersionOf/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:isVersionOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:references/taggedLiterals")); languages.remove("providerProxy/dcterms:references/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:references/languages")); languages.remove("providerProxy/dcterms:references/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:references/literalsPerLanguage")); languages.remove("providerProxy/dcterms:references/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:references/taggedLiterals")); languages.remove("europeanaProxy/dcterms:references/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:references/languages")); languages.remove("europeanaProxy/dcterms:references/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:references/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:references/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:replaces/taggedLiterals")); languages.remove("providerProxy/dcterms:replaces/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:replaces/languages")); languages.remove("providerProxy/dcterms:replaces/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:replaces/literalsPerLanguage")); languages.remove("providerProxy/dcterms:replaces/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:replaces/taggedLiterals")); languages.remove("europeanaProxy/dcterms:replaces/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:replaces/languages")); languages.remove("europeanaProxy/dcterms:replaces/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:replaces/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:replaces/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:requires/taggedLiterals")); languages.remove("providerProxy/dcterms:requires/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:requires/languages")); languages.remove("providerProxy/dcterms:requires/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:requires/literalsPerLanguage")); languages.remove("providerProxy/dcterms:requires/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:requires/taggedLiterals")); languages.remove("europeanaProxy/dcterms:requires/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:requires/languages")); languages.remove("europeanaProxy/dcterms:requires/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:requires/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:requires/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/dcterms:tableOfContents/taggedLiterals")); languages.remove("providerProxy/dcterms:tableOfContents/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:tableOfContents/languages")); languages.remove("providerProxy/dcterms:tableOfContents/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/dcterms:tableOfContents/literalsPerLanguage")); languages.remove("providerProxy/dcterms:tableOfContents/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/dcterms:tableOfContents/taggedLiterals")); languages.remove("europeanaProxy/dcterms:tableOfContents/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:tableOfContents/languages")); languages.remove("europeanaProxy/dcterms:tableOfContents/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/dcterms:tableOfContents/literalsPerLanguage")); languages.remove("europeanaProxy/dcterms:tableOfContents/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:currentLocation/taggedLiterals")); languages.remove("providerProxy/edm:currentLocation/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:currentLocation/languages")); languages.remove("providerProxy/edm:currentLocation/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:currentLocation/literalsPerLanguage")); languages.remove("providerProxy/edm:currentLocation/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:currentLocation/taggedLiterals")); languages.remove("europeanaProxy/edm:currentLocation/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:currentLocation/languages")); languages.remove("europeanaProxy/edm:currentLocation/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:currentLocation/literalsPerLanguage")); languages.remove("europeanaProxy/edm:currentLocation/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:hasMet/taggedLiterals")); languages.remove("providerProxy/edm:hasMet/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:hasMet/languages")); languages.remove("providerProxy/edm:hasMet/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:hasMet/literalsPerLanguage")); languages.remove("providerProxy/edm:hasMet/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:hasMet/taggedLiterals")); languages.remove("europeanaProxy/edm:hasMet/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:hasMet/languages")); languages.remove("europeanaProxy/edm:hasMet/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:hasMet/literalsPerLanguage")); languages.remove("europeanaProxy/edm:hasMet/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:hasType/taggedLiterals")); languages.remove("providerProxy/edm:hasType/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:hasType/languages")); languages.remove("providerProxy/edm:hasType/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:hasType/literalsPerLanguage")); languages.remove("providerProxy/edm:hasType/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:hasType/taggedLiterals")); languages.remove("europeanaProxy/edm:hasType/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:hasType/languages")); languages.remove("europeanaProxy/edm:hasType/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:hasType/literalsPerLanguage")); languages.remove("europeanaProxy/edm:hasType/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:incorporates/taggedLiterals")); languages.remove("providerProxy/edm:incorporates/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:incorporates/languages")); languages.remove("providerProxy/edm:incorporates/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:incorporates/literalsPerLanguage")); languages.remove("providerProxy/edm:incorporates/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:incorporates/taggedLiterals")); languages.remove("europeanaProxy/edm:incorporates/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:incorporates/languages")); languages.remove("europeanaProxy/edm:incorporates/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:incorporates/literalsPerLanguage")); languages.remove("europeanaProxy/edm:incorporates/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:isDerivativeOf/taggedLiterals")); languages.remove("providerProxy/edm:isDerivativeOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isDerivativeOf/languages")); languages.remove("providerProxy/edm:isDerivativeOf/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isDerivativeOf/literalsPerLanguage")); languages.remove("providerProxy/edm:isDerivativeOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:isDerivativeOf/taggedLiterals")); languages.remove("europeanaProxy/edm:isDerivativeOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isDerivativeOf/languages")); languages.remove("europeanaProxy/edm:isDerivativeOf/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isDerivativeOf/literalsPerLanguage")); languages.remove("europeanaProxy/edm:isDerivativeOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:isRelatedTo/taggedLiterals")); languages.remove("providerProxy/edm:isRelatedTo/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isRelatedTo/languages")); languages.remove("providerProxy/edm:isRelatedTo/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isRelatedTo/literalsPerLanguage")); languages.remove("providerProxy/edm:isRelatedTo/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:isRelatedTo/taggedLiterals")); languages.remove("europeanaProxy/edm:isRelatedTo/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isRelatedTo/languages")); languages.remove("europeanaProxy/edm:isRelatedTo/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isRelatedTo/literalsPerLanguage")); languages.remove("europeanaProxy/edm:isRelatedTo/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:isRepresentationOf/taggedLiterals")); languages.remove("providerProxy/edm:isRepresentationOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isRepresentationOf/languages")); languages.remove("providerProxy/edm:isRepresentationOf/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isRepresentationOf/literalsPerLanguage")); languages.remove("providerProxy/edm:isRepresentationOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:isRepresentationOf/taggedLiterals")); languages.remove("europeanaProxy/edm:isRepresentationOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isRepresentationOf/languages")); languages.remove("europeanaProxy/edm:isRepresentationOf/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isRepresentationOf/literalsPerLanguage")); languages.remove("europeanaProxy/edm:isRepresentationOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:isSimilarTo/taggedLiterals")); languages.remove("providerProxy/edm:isSimilarTo/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isSimilarTo/languages")); languages.remove("providerProxy/edm:isSimilarTo/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isSimilarTo/literalsPerLanguage")); languages.remove("providerProxy/edm:isSimilarTo/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:isSimilarTo/taggedLiterals")); languages.remove("europeanaProxy/edm:isSimilarTo/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isSimilarTo/languages")); languages.remove("europeanaProxy/edm:isSimilarTo/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isSimilarTo/literalsPerLanguage")); languages.remove("europeanaProxy/edm:isSimilarTo/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:isSuccessorOf/taggedLiterals")); languages.remove("providerProxy/edm:isSuccessorOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isSuccessorOf/languages")); languages.remove("providerProxy/edm:isSuccessorOf/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:isSuccessorOf/literalsPerLanguage")); languages.remove("providerProxy/edm:isSuccessorOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:isSuccessorOf/taggedLiterals")); languages.remove("europeanaProxy/edm:isSuccessorOf/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isSuccessorOf/languages")); languages.remove("europeanaProxy/edm:isSuccessorOf/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:isSuccessorOf/literalsPerLanguage")); languages.remove("europeanaProxy/edm:isSuccessorOf/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:realizes/taggedLiterals")); languages.remove("providerProxy/edm:realizes/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:realizes/languages")); languages.remove("providerProxy/edm:realizes/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:realizes/literalsPerLanguage")); languages.remove("providerProxy/edm:realizes/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:realizes/taggedLiterals")); languages.remove("europeanaProxy/edm:realizes/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:realizes/languages")); languages.remove("europeanaProxy/edm:realizes/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:realizes/literalsPerLanguage")); languages.remove("europeanaProxy/edm:realizes/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("providerProxy/edm:wasPresentAt/taggedLiterals")); languages.remove("providerProxy/edm:wasPresentAt/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:wasPresentAt/languages")); languages.remove("providerProxy/edm:wasPresentAt/languages");
    assertEquals(new Double(0.0), languages.get("providerProxy/edm:wasPresentAt/literalsPerLanguage")); languages.remove("providerProxy/edm:wasPresentAt/literalsPerLanguage");
    assertEquals(new Double(-1.0), languages.get("europeanaProxy/edm:wasPresentAt/taggedLiterals")); languages.remove("europeanaProxy/edm:wasPresentAt/taggedLiterals");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:wasPresentAt/languages")); languages.remove("europeanaProxy/edm:wasPresentAt/languages");
    assertEquals(new Double(0.0), languages.get("europeanaProxy/edm:wasPresentAt/literalsPerLanguage")); languages.remove("europeanaProxy/edm:wasPresentAt/literalsPerLanguage");
    assertEquals(new Double(2.142857142857143), languages.get("NumberOfLanguagesPerPropertyInProviderProxy")); languages.remove("NumberOfLanguagesPerPropertyInProviderProxy");
    assertEquals(new Double(113.0), languages.get("NumberOfLanguagesPerPropertyInEuropeanaProxy")); languages.remove("NumberOfLanguagesPerPropertyInEuropeanaProxy");
    assertEquals(new Double(16.0), languages.get("NumberOfLanguagesPerPropertyInObject")); languages.remove("NumberOfLanguagesPerPropertyInObject");
    assertEquals(new Double(20.0), languages.get("TaggedLiteralsInProviderProxy")); languages.remove("TaggedLiteralsInProviderProxy");
    assertEquals(new Double(129.0), languages.get("TaggedLiteralsInEuropeanaProxy")); languages.remove("TaggedLiteralsInEuropeanaProxy");
    assertEquals(new Double(6.0), languages.get("DistinctLanguageCountInProviderProxy")); languages.remove("DistinctLanguageCountInProviderProxy");
    assertEquals(new Double(113.0), languages.get("DistinctLanguageCountInEuropeanaProxy")); languages.remove("DistinctLanguageCountInEuropeanaProxy");
    assertEquals(new Double(149.0), languages.get("TaggedLiteralsInObject")); languages.remove("TaggedLiteralsInObject");
    assertEquals(new Double(113.0), languages.get("DistinctLanguagesInObject")); languages.remove("DistinctLanguagesInObject");
    assertEquals(new Double(3.3333333333333335), languages.get("TaggedLiteralsPerLanguageInProviderProxy")); languages.remove("TaggedLiteralsPerLanguageInProviderProxy");
    assertEquals(new Double(1.1415929203539823), languages.get("TaggedLiteralsPerLanguageInEuropeanaProxy")); languages.remove("TaggedLiteralsPerLanguageInEuropeanaProxy");
    assertEquals(new Double(1.3185840707964602), languages.get("TaggedLiteralsPerLanguageInObject")); languages.remove("TaggedLiteralsPerLanguageInObject");

    assertTrue(languages.isEmpty());
  }

  @Test
  public void testComplexResponse() throws URISyntaxException, IOException {
    EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhJsonSchema());
    calculator.setResultType(MultilingualityResultType.EXTENDED);
    JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("issue-examples/issue8-multiple-same-languages.json"));
    calculator.measure(cache);
    String csv = calculator.getCsv(true, CompressionLevel.NORMAL);
    assertEquals("\"providerProxy/dc:title/taggedLiterals\":4.0,\"providerProxy/dc:title/languages\":1.0,\"providerProxy/dc:title/literalsPerLanguage\":4.0,\"europeanaProxy/dc:title/taggedLiterals\":-1.0,\"europeanaProxy/dc:title/languages\":0.0,\"europeanaProxy/dc:title/literalsPerLanguage\":0.0,\"providerProxy/dcterms:alternative/taggedLiterals\":-1.0,\"providerProxy/dcterms:alternative/languages\":0.0,\"providerProxy/dcterms:alternative/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:alternative/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:alternative/languages\":0.0,\"europeanaProxy/dcterms:alternative/literalsPerLanguage\":0.0,\"providerProxy/dc:description/taggedLiterals\":1.0,\"providerProxy/dc:description/languages\":1.0,\"providerProxy/dc:description/literalsPerLanguage\":1.0,\"europeanaProxy/dc:description/taggedLiterals\":-1.0,\"europeanaProxy/dc:description/languages\":0.0,\"europeanaProxy/dc:description/literalsPerLanguage\":0.0,\"providerProxy/dc:creator/taggedLiterals\":0.0,\"providerProxy/dc:creator/languages\":0.0,\"providerProxy/dc:creator/literalsPerLanguage\":0.0,\"europeanaProxy/dc:creator/taggedLiterals\":-1.0,\"europeanaProxy/dc:creator/languages\":0.0,\"europeanaProxy/dc:creator/literalsPerLanguage\":0.0,\"providerProxy/dc:publisher/taggedLiterals\":0.0,\"providerProxy/dc:publisher/languages\":0.0,\"providerProxy/dc:publisher/literalsPerLanguage\":0.0,\"europeanaProxy/dc:publisher/taggedLiterals\":-1.0,\"europeanaProxy/dc:publisher/languages\":0.0,\"europeanaProxy/dc:publisher/literalsPerLanguage\":0.0,\"providerProxy/dc:contributor/taggedLiterals\":-1.0,\"providerProxy/dc:contributor/languages\":0.0,\"providerProxy/dc:contributor/literalsPerLanguage\":0.0,\"europeanaProxy/dc:contributor/taggedLiterals\":-1.0,\"europeanaProxy/dc:contributor/languages\":0.0,\"europeanaProxy/dc:contributor/literalsPerLanguage\":0.0,\"providerProxy/dc:type/taggedLiterals\":6.0,\"providerProxy/dc:type/languages\":6.0,\"providerProxy/dc:type/literalsPerLanguage\":1.0,\"europeanaProxy/dc:type/taggedLiterals\":-1.0,\"europeanaProxy/dc:type/languages\":0.0,\"europeanaProxy/dc:type/literalsPerLanguage\":0.0,\"providerProxy/dc:identifier/taggedLiterals\":0.0,\"providerProxy/dc:identifier/languages\":0.0,\"providerProxy/dc:identifier/literalsPerLanguage\":0.0,\"europeanaProxy/dc:identifier/taggedLiterals\":-1.0,\"europeanaProxy/dc:identifier/languages\":0.0,\"europeanaProxy/dc:identifier/literalsPerLanguage\":0.0,\"providerProxy/dc:language/taggedLiterals\":0.0,\"providerProxy/dc:language/languages\":0.0,\"providerProxy/dc:language/literalsPerLanguage\":0.0,\"europeanaProxy/dc:language/taggedLiterals\":-1.0,\"europeanaProxy/dc:language/languages\":0.0,\"europeanaProxy/dc:language/literalsPerLanguage\":0.0,\"providerProxy/dc:coverage/taggedLiterals\":2.0,\"providerProxy/dc:coverage/languages\":2.0,\"providerProxy/dc:coverage/literalsPerLanguage\":1.0,\"europeanaProxy/dc:coverage/taggedLiterals\":-1.0,\"europeanaProxy/dc:coverage/languages\":0.0,\"europeanaProxy/dc:coverage/literalsPerLanguage\":0.0,\"providerProxy/dcterms:temporal/taggedLiterals\":-1.0,\"providerProxy/dcterms:temporal/languages\":0.0,\"providerProxy/dcterms:temporal/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:temporal/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:temporal/languages\":0.0,\"europeanaProxy/dcterms:temporal/literalsPerLanguage\":0.0,\"providerProxy/dcterms:spatial/taggedLiterals\":0.0,\"providerProxy/dcterms:spatial/languages\":0.0,\"providerProxy/dcterms:spatial/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:spatial/taggedLiterals\":129.0,\"europeanaProxy/dcterms:spatial/languages\":113.0,\"europeanaProxy/dcterms:spatial/literalsPerLanguage\":1.141593,\"providerProxy/dc:subject/taggedLiterals\":0.0,\"providerProxy/dc:subject/languages\":0.0,\"providerProxy/dc:subject/literalsPerLanguage\":0.0,\"europeanaProxy/dc:subject/taggedLiterals\":-1.0,\"europeanaProxy/dc:subject/languages\":0.0,\"europeanaProxy/dc:subject/literalsPerLanguage\":0.0,\"providerProxy/dc:date/taggedLiterals\":-1.0,\"providerProxy/dc:date/languages\":0.0,\"providerProxy/dc:date/literalsPerLanguage\":0.0,\"europeanaProxy/dc:date/taggedLiterals\":-1.0,\"europeanaProxy/dc:date/languages\":0.0,\"europeanaProxy/dc:date/literalsPerLanguage\":0.0,\"providerProxy/dcterms:created/taggedLiterals\":0.0,\"providerProxy/dcterms:created/languages\":0.0,\"providerProxy/dcterms:created/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:created/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:created/languages\":0.0,\"europeanaProxy/dcterms:created/literalsPerLanguage\":0.0,\"providerProxy/dcterms:issued/taggedLiterals\":-1.0,\"providerProxy/dcterms:issued/languages\":0.0,\"providerProxy/dcterms:issued/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:issued/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:issued/languages\":0.0,\"europeanaProxy/dcterms:issued/literalsPerLanguage\":0.0,\"providerProxy/dcterms:extent/taggedLiterals\":4.0,\"providerProxy/dcterms:extent/languages\":2.0,\"providerProxy/dcterms:extent/literalsPerLanguage\":2.0,\"europeanaProxy/dcterms:extent/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:extent/languages\":0.0,\"europeanaProxy/dcterms:extent/literalsPerLanguage\":0.0,\"providerProxy/dcterms:medium/taggedLiterals\":-1.0,\"providerProxy/dcterms:medium/languages\":0.0,\"providerProxy/dcterms:medium/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:medium/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:medium/languages\":0.0,\"europeanaProxy/dcterms:medium/literalsPerLanguage\":0.0,\"providerProxy/dcterms:provenance/taggedLiterals\":1.0,\"providerProxy/dcterms:provenance/languages\":1.0,\"providerProxy/dcterms:provenance/literalsPerLanguage\":1.0,\"europeanaProxy/dcterms:provenance/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:provenance/languages\":0.0,\"europeanaProxy/dcterms:provenance/literalsPerLanguage\":0.0,\"providerProxy/dcterms:hasPart/taggedLiterals\":-1.0,\"providerProxy/dcterms:hasPart/languages\":0.0,\"providerProxy/dcterms:hasPart/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:hasPart/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:hasPart/languages\":0.0,\"europeanaProxy/dcterms:hasPart/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isPartOf/taggedLiterals\":-1.0,\"providerProxy/dcterms:isPartOf/languages\":0.0,\"providerProxy/dcterms:isPartOf/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isPartOf/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isPartOf/languages\":0.0,\"europeanaProxy/dcterms:isPartOf/literalsPerLanguage\":0.0,\"providerProxy/dc:format/taggedLiterals\":0.0,\"providerProxy/dc:format/languages\":0.0,\"providerProxy/dc:format/literalsPerLanguage\":0.0,\"europeanaProxy/dc:format/taggedLiterals\":-1.0,\"europeanaProxy/dc:format/languages\":0.0,\"europeanaProxy/dc:format/literalsPerLanguage\":0.0,\"providerProxy/dc:source/taggedLiterals\":-1.0,\"providerProxy/dc:source/languages\":0.0,\"providerProxy/dc:source/literalsPerLanguage\":0.0,\"europeanaProxy/dc:source/taggedLiterals\":-1.0,\"europeanaProxy/dc:source/languages\":0.0,\"europeanaProxy/dc:source/literalsPerLanguage\":0.0,\"providerProxy/dc:rights/taggedLiterals\":2.0,\"providerProxy/dc:rights/languages\":2.0,\"providerProxy/dc:rights/literalsPerLanguage\":1.0,\"europeanaProxy/dc:rights/taggedLiterals\":-1.0,\"europeanaProxy/dc:rights/languages\":0.0,\"europeanaProxy/dc:rights/literalsPerLanguage\":0.0,\"providerProxy/dc:relation/taggedLiterals\":-1.0,\"providerProxy/dc:relation/languages\":0.0,\"providerProxy/dc:relation/literalsPerLanguage\":0.0,\"europeanaProxy/dc:relation/taggedLiterals\":-1.0,\"europeanaProxy/dc:relation/languages\":0.0,\"europeanaProxy/dc:relation/literalsPerLanguage\":0.0,\"providerProxy/edm:year/taggedLiterals\":-1.0,\"providerProxy/edm:year/languages\":0.0,\"providerProxy/edm:year/literalsPerLanguage\":0.0,\"europeanaProxy/edm:year/taggedLiterals\":-1.0,\"europeanaProxy/edm:year/languages\":0.0,\"europeanaProxy/edm:year/literalsPerLanguage\":0.0,\"providerProxy/edm:userTag/taggedLiterals\":-1.0,\"providerProxy/edm:userTag/languages\":0.0,\"providerProxy/edm:userTag/literalsPerLanguage\":0.0,\"europeanaProxy/edm:userTag/taggedLiterals\":-1.0,\"europeanaProxy/edm:userTag/languages\":0.0,\"europeanaProxy/edm:userTag/literalsPerLanguage\":0.0,\"providerProxy/dcterms:conformsTo/taggedLiterals\":-1.0,\"providerProxy/dcterms:conformsTo/languages\":0.0,\"providerProxy/dcterms:conformsTo/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:conformsTo/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:conformsTo/languages\":0.0,\"europeanaProxy/dcterms:conformsTo/literalsPerLanguage\":0.0,\"providerProxy/dcterms:hasFormat/taggedLiterals\":-1.0,\"providerProxy/dcterms:hasFormat/languages\":0.0,\"providerProxy/dcterms:hasFormat/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:hasFormat/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:hasFormat/languages\":0.0,\"europeanaProxy/dcterms:hasFormat/literalsPerLanguage\":0.0,\"providerProxy/dcterms:hasVersion/taggedLiterals\":-1.0,\"providerProxy/dcterms:hasVersion/languages\":0.0,\"providerProxy/dcterms:hasVersion/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:hasVersion/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:hasVersion/languages\":0.0,\"europeanaProxy/dcterms:hasVersion/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isFormatOf/taggedLiterals\":-1.0,\"providerProxy/dcterms:isFormatOf/languages\":0.0,\"providerProxy/dcterms:isFormatOf/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isFormatOf/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isFormatOf/languages\":0.0,\"europeanaProxy/dcterms:isFormatOf/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isReferencedBy/taggedLiterals\":0.0,\"providerProxy/dcterms:isReferencedBy/languages\":0.0,\"providerProxy/dcterms:isReferencedBy/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isReferencedBy/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isReferencedBy/languages\":0.0,\"europeanaProxy/dcterms:isReferencedBy/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isReplacedBy/taggedLiterals\":-1.0,\"providerProxy/dcterms:isReplacedBy/languages\":0.0,\"providerProxy/dcterms:isReplacedBy/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isReplacedBy/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isReplacedBy/languages\":0.0,\"europeanaProxy/dcterms:isReplacedBy/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isRequiredBy/taggedLiterals\":-1.0,\"providerProxy/dcterms:isRequiredBy/languages\":0.0,\"providerProxy/dcterms:isRequiredBy/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isRequiredBy/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isRequiredBy/languages\":0.0,\"europeanaProxy/dcterms:isRequiredBy/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isVersionOf/taggedLiterals\":-1.0,\"providerProxy/dcterms:isVersionOf/languages\":0.0,\"providerProxy/dcterms:isVersionOf/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isVersionOf/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isVersionOf/languages\":0.0,\"europeanaProxy/dcterms:isVersionOf/literalsPerLanguage\":0.0,\"providerProxy/dcterms:references/taggedLiterals\":-1.0,\"providerProxy/dcterms:references/languages\":0.0,\"providerProxy/dcterms:references/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:references/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:references/languages\":0.0,\"europeanaProxy/dcterms:references/literalsPerLanguage\":0.0,\"providerProxy/dcterms:replaces/taggedLiterals\":-1.0,\"providerProxy/dcterms:replaces/languages\":0.0,\"providerProxy/dcterms:replaces/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:replaces/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:replaces/languages\":0.0,\"europeanaProxy/dcterms:replaces/literalsPerLanguage\":0.0,\"providerProxy/dcterms:requires/taggedLiterals\":-1.0,\"providerProxy/dcterms:requires/languages\":0.0,\"providerProxy/dcterms:requires/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:requires/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:requires/languages\":0.0,\"europeanaProxy/dcterms:requires/literalsPerLanguage\":0.0,\"providerProxy/dcterms:tableOfContents/taggedLiterals\":-1.0,\"providerProxy/dcterms:tableOfContents/languages\":0.0,\"providerProxy/dcterms:tableOfContents/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:tableOfContents/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:tableOfContents/languages\":0.0,\"europeanaProxy/dcterms:tableOfContents/literalsPerLanguage\":0.0,\"providerProxy/edm:currentLocation/taggedLiterals\":-1.0,\"providerProxy/edm:currentLocation/languages\":0.0,\"providerProxy/edm:currentLocation/literalsPerLanguage\":0.0,\"europeanaProxy/edm:currentLocation/taggedLiterals\":-1.0,\"europeanaProxy/edm:currentLocation/languages\":0.0,\"europeanaProxy/edm:currentLocation/literalsPerLanguage\":0.0,\"providerProxy/edm:hasMet/taggedLiterals\":-1.0,\"providerProxy/edm:hasMet/languages\":0.0,\"providerProxy/edm:hasMet/literalsPerLanguage\":0.0,\"europeanaProxy/edm:hasMet/taggedLiterals\":-1.0,\"europeanaProxy/edm:hasMet/languages\":0.0,\"europeanaProxy/edm:hasMet/literalsPerLanguage\":0.0,\"providerProxy/edm:hasType/taggedLiterals\":-1.0,\"providerProxy/edm:hasType/languages\":0.0,\"providerProxy/edm:hasType/literalsPerLanguage\":0.0,\"europeanaProxy/edm:hasType/taggedLiterals\":-1.0,\"europeanaProxy/edm:hasType/languages\":0.0,\"europeanaProxy/edm:hasType/literalsPerLanguage\":0.0,\"providerProxy/edm:incorporates/taggedLiterals\":-1.0,\"providerProxy/edm:incorporates/languages\":0.0,\"providerProxy/edm:incorporates/literalsPerLanguage\":0.0,\"europeanaProxy/edm:incorporates/taggedLiterals\":-1.0,\"europeanaProxy/edm:incorporates/languages\":0.0,\"europeanaProxy/edm:incorporates/literalsPerLanguage\":0.0,\"providerProxy/edm:isDerivativeOf/taggedLiterals\":-1.0,\"providerProxy/edm:isDerivativeOf/languages\":0.0,\"providerProxy/edm:isDerivativeOf/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isDerivativeOf/taggedLiterals\":-1.0,\"europeanaProxy/edm:isDerivativeOf/languages\":0.0,\"europeanaProxy/edm:isDerivativeOf/literalsPerLanguage\":0.0,\"providerProxy/edm:isRelatedTo/taggedLiterals\":-1.0,\"providerProxy/edm:isRelatedTo/languages\":0.0,\"providerProxy/edm:isRelatedTo/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isRelatedTo/taggedLiterals\":-1.0,\"europeanaProxy/edm:isRelatedTo/languages\":0.0,\"europeanaProxy/edm:isRelatedTo/literalsPerLanguage\":0.0,\"providerProxy/edm:isRepresentationOf/taggedLiterals\":-1.0,\"providerProxy/edm:isRepresentationOf/languages\":0.0,\"providerProxy/edm:isRepresentationOf/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isRepresentationOf/taggedLiterals\":-1.0,\"europeanaProxy/edm:isRepresentationOf/languages\":0.0,\"europeanaProxy/edm:isRepresentationOf/literalsPerLanguage\":0.0,\"providerProxy/edm:isSimilarTo/taggedLiterals\":-1.0,\"providerProxy/edm:isSimilarTo/languages\":0.0,\"providerProxy/edm:isSimilarTo/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isSimilarTo/taggedLiterals\":-1.0,\"europeanaProxy/edm:isSimilarTo/languages\":0.0,\"europeanaProxy/edm:isSimilarTo/literalsPerLanguage\":0.0,\"providerProxy/edm:isSuccessorOf/taggedLiterals\":-1.0,\"providerProxy/edm:isSuccessorOf/languages\":0.0,\"providerProxy/edm:isSuccessorOf/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isSuccessorOf/taggedLiterals\":-1.0,\"europeanaProxy/edm:isSuccessorOf/languages\":0.0,\"europeanaProxy/edm:isSuccessorOf/literalsPerLanguage\":0.0,\"providerProxy/edm:realizes/taggedLiterals\":-1.0,\"providerProxy/edm:realizes/languages\":0.0,\"providerProxy/edm:realizes/literalsPerLanguage\":0.0,\"europeanaProxy/edm:realizes/taggedLiterals\":-1.0,\"europeanaProxy/edm:realizes/languages\":0.0,\"europeanaProxy/edm:realizes/literalsPerLanguage\":0.0,\"providerProxy/edm:wasPresentAt/taggedLiterals\":-1.0,\"providerProxy/edm:wasPresentAt/languages\":0.0,\"providerProxy/edm:wasPresentAt/literalsPerLanguage\":0.0,\"europeanaProxy/edm:wasPresentAt/taggedLiterals\":-1.0,\"europeanaProxy/edm:wasPresentAt/languages\":0.0,\"europeanaProxy/edm:wasPresentAt/literalsPerLanguage\":0.0,\"NumberOfLanguagesPerPropertyInProviderProxy\":2.142857,\"NumberOfLanguagesPerPropertyInEuropeanaProxy\":113.0,\"NumberOfLanguagesPerPropertyInObject\":16.0,\"TaggedLiteralsInProviderProxy\":20.0,\"TaggedLiteralsInEuropeanaProxy\":129.0,\"DistinctLanguageCountInProviderProxy\":6.0,\"DistinctLanguageCountInEuropeanaProxy\":113.0,\"TaggedLiteralsInObject\":149.0,\"DistinctLanguagesInObject\":113.0,\"TaggedLiteralsPerLanguageInProviderProxy\":3.333333,\"TaggedLiteralsPerLanguageInEuropeanaProxy\":1.141593,\"TaggedLiteralsPerLanguageInObject\":1.318584", csv);

    csv = calculator.getCsv(false, CompressionLevel.NORMAL);
    assertEquals("4.0,1.0,4.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,1.0,1.0,1.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,6.0,6.0,1.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,2.0,2.0,1.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,129.0,113.0,1.141593,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,4.0,2.0,2.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,1.0,1.0,1.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,2.0,2.0,1.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,2.142857,113.0,16.0,20.0,129.0,6.0,113.0,149.0,113.0,3.333333,1.141593,1.318584", csv);

    csv = calculator.getCsv(false, CompressionLevel.WITHOUT_TRAILING_ZEROS);
    assertEquals("4,1,4,-1,0,0,-1,0,0,-1,0,0,1,1,1,-1,0,0,0,0,0,-1,0,0,0,0,0,-1,0,0,-1,0,0,-1,0,0,6,6,1,-1,0,0,0,0,0,-1,0,0,0,0,0,-1,0,0,2,2,1,-1,0,0,-1,0,0,-1,0,0,0,0,0,129,113,1.141593,0,0,0,-1,0,0,-1,0,0,-1,0,0,0,0,0,-1,0,0,-1,0,0,-1,0,0,4,2,2,-1,0,0,-1,0,0,-1,0,0,1,1,1,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,0,0,-1,0,0,-1,0,0,-1,0,0,2,2,1,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,2.142857,113,16,20,129,6,113,149,113,3.333333,1.141593,1.318584", csv);
  }

  @Test
  public void testComplexResponseSkipped() throws URISyntaxException, IOException {
    EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhJsonSchema());
    calculator.setSkippedEntryChecker(new EdmSkippedEntryChecker());
    calculator.setResultType(MultilingualityResultType.EXTENDED);
    JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("issue-examples/issue8-multiple-same-languages.json"));
    calculator.measure(cache);

    String csv = calculator.getCsv(true, CompressionLevel.NORMAL);
    assertEquals("\"providerProxy/dc:title/taggedLiterals\":4.0,\"providerProxy/dc:title/languages\":1.0,\"providerProxy/dc:title/literalsPerLanguage\":4.0,\"europeanaProxy/dc:title/taggedLiterals\":-1.0,\"europeanaProxy/dc:title/languages\":0.0,\"europeanaProxy/dc:title/literalsPerLanguage\":0.0,\"providerProxy/dcterms:alternative/taggedLiterals\":-1.0,\"providerProxy/dcterms:alternative/languages\":0.0,\"providerProxy/dcterms:alternative/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:alternative/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:alternative/languages\":0.0,\"europeanaProxy/dcterms:alternative/literalsPerLanguage\":0.0,\"providerProxy/dc:description/taggedLiterals\":1.0,\"providerProxy/dc:description/languages\":1.0,\"providerProxy/dc:description/literalsPerLanguage\":1.0,\"europeanaProxy/dc:description/taggedLiterals\":-1.0,\"europeanaProxy/dc:description/languages\":0.0,\"europeanaProxy/dc:description/literalsPerLanguage\":0.0,\"providerProxy/dc:creator/taggedLiterals\":0.0,\"providerProxy/dc:creator/languages\":0.0,\"providerProxy/dc:creator/literalsPerLanguage\":0.0,\"europeanaProxy/dc:creator/taggedLiterals\":-1.0,\"europeanaProxy/dc:creator/languages\":0.0,\"europeanaProxy/dc:creator/literalsPerLanguage\":0.0,\"providerProxy/dc:publisher/taggedLiterals\":0.0,\"providerProxy/dc:publisher/languages\":0.0,\"providerProxy/dc:publisher/literalsPerLanguage\":0.0,\"europeanaProxy/dc:publisher/taggedLiterals\":-1.0,\"europeanaProxy/dc:publisher/languages\":0.0,\"europeanaProxy/dc:publisher/literalsPerLanguage\":0.0,\"providerProxy/dc:contributor/taggedLiterals\":-1.0,\"providerProxy/dc:contributor/languages\":0.0,\"providerProxy/dc:contributor/literalsPerLanguage\":0.0,\"europeanaProxy/dc:contributor/taggedLiterals\":-1.0,\"europeanaProxy/dc:contributor/languages\":0.0,\"europeanaProxy/dc:contributor/literalsPerLanguage\":0.0,\"providerProxy/dc:type/taggedLiterals\":6.0,\"providerProxy/dc:type/languages\":6.0,\"providerProxy/dc:type/literalsPerLanguage\":1.0,\"europeanaProxy/dc:type/taggedLiterals\":-1.0,\"europeanaProxy/dc:type/languages\":0.0,\"europeanaProxy/dc:type/literalsPerLanguage\":0.0,\"providerProxy/dc:identifier/taggedLiterals\":0.0,\"providerProxy/dc:identifier/languages\":0.0,\"providerProxy/dc:identifier/literalsPerLanguage\":0.0,\"europeanaProxy/dc:identifier/taggedLiterals\":-1.0,\"europeanaProxy/dc:identifier/languages\":0.0,\"europeanaProxy/dc:identifier/literalsPerLanguage\":0.0,\"providerProxy/dc:language/taggedLiterals\":0.0,\"providerProxy/dc:language/languages\":0.0,\"providerProxy/dc:language/literalsPerLanguage\":0.0,\"europeanaProxy/dc:language/taggedLiterals\":-1.0,\"europeanaProxy/dc:language/languages\":0.0,\"europeanaProxy/dc:language/literalsPerLanguage\":0.0,\"providerProxy/dc:coverage/taggedLiterals\":2.0,\"providerProxy/dc:coverage/languages\":2.0,\"providerProxy/dc:coverage/literalsPerLanguage\":1.0,\"europeanaProxy/dc:coverage/taggedLiterals\":-1.0,\"europeanaProxy/dc:coverage/languages\":0.0,\"europeanaProxy/dc:coverage/literalsPerLanguage\":0.0,\"providerProxy/dcterms:temporal/taggedLiterals\":-1.0,\"providerProxy/dcterms:temporal/languages\":0.0,\"providerProxy/dcterms:temporal/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:temporal/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:temporal/languages\":0.0,\"europeanaProxy/dcterms:temporal/literalsPerLanguage\":0.0,\"providerProxy/dcterms:spatial/taggedLiterals\":0.0,\"providerProxy/dcterms:spatial/languages\":0.0,\"providerProxy/dcterms:spatial/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:spatial/taggedLiterals\":129.0,\"europeanaProxy/dcterms:spatial/languages\":113.0,\"europeanaProxy/dcterms:spatial/literalsPerLanguage\":1.141593,\"providerProxy/dc:subject/taggedLiterals\":0.0,\"providerProxy/dc:subject/languages\":0.0,\"providerProxy/dc:subject/literalsPerLanguage\":0.0,\"europeanaProxy/dc:subject/taggedLiterals\":-1.0,\"europeanaProxy/dc:subject/languages\":0.0,\"europeanaProxy/dc:subject/literalsPerLanguage\":0.0,\"providerProxy/dc:date/taggedLiterals\":-1.0,\"providerProxy/dc:date/languages\":0.0,\"providerProxy/dc:date/literalsPerLanguage\":0.0,\"europeanaProxy/dc:date/taggedLiterals\":-1.0,\"europeanaProxy/dc:date/languages\":0.0,\"europeanaProxy/dc:date/literalsPerLanguage\":0.0,\"providerProxy/dcterms:created/taggedLiterals\":0.0,\"providerProxy/dcterms:created/languages\":0.0,\"providerProxy/dcterms:created/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:created/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:created/languages\":0.0,\"europeanaProxy/dcterms:created/literalsPerLanguage\":0.0,\"providerProxy/dcterms:issued/taggedLiterals\":-1.0,\"providerProxy/dcterms:issued/languages\":0.0,\"providerProxy/dcterms:issued/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:issued/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:issued/languages\":0.0,\"europeanaProxy/dcterms:issued/literalsPerLanguage\":0.0,\"providerProxy/dcterms:extent/taggedLiterals\":4.0,\"providerProxy/dcterms:extent/languages\":2.0,\"providerProxy/dcterms:extent/literalsPerLanguage\":2.0,\"europeanaProxy/dcterms:extent/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:extent/languages\":0.0,\"europeanaProxy/dcterms:extent/literalsPerLanguage\":0.0,\"providerProxy/dcterms:medium/taggedLiterals\":-1.0,\"providerProxy/dcterms:medium/languages\":0.0,\"providerProxy/dcterms:medium/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:medium/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:medium/languages\":0.0,\"europeanaProxy/dcterms:medium/literalsPerLanguage\":0.0,\"providerProxy/dcterms:provenance/taggedLiterals\":1.0,\"providerProxy/dcterms:provenance/languages\":1.0,\"providerProxy/dcterms:provenance/literalsPerLanguage\":1.0,\"europeanaProxy/dcterms:provenance/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:provenance/languages\":0.0,\"europeanaProxy/dcterms:provenance/literalsPerLanguage\":0.0,\"providerProxy/dcterms:hasPart/taggedLiterals\":-1.0,\"providerProxy/dcterms:hasPart/languages\":0.0,\"providerProxy/dcterms:hasPart/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:hasPart/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:hasPart/languages\":0.0,\"europeanaProxy/dcterms:hasPart/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isPartOf/taggedLiterals\":-1.0,\"providerProxy/dcterms:isPartOf/languages\":0.0,\"providerProxy/dcterms:isPartOf/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isPartOf/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isPartOf/languages\":0.0,\"europeanaProxy/dcterms:isPartOf/literalsPerLanguage\":0.0,\"providerProxy/dc:format/taggedLiterals\":0.0,\"providerProxy/dc:format/languages\":0.0,\"providerProxy/dc:format/literalsPerLanguage\":0.0,\"europeanaProxy/dc:format/taggedLiterals\":-1.0,\"europeanaProxy/dc:format/languages\":0.0,\"europeanaProxy/dc:format/literalsPerLanguage\":0.0,\"providerProxy/dc:source/taggedLiterals\":-1.0,\"providerProxy/dc:source/languages\":0.0,\"providerProxy/dc:source/literalsPerLanguage\":0.0,\"europeanaProxy/dc:source/taggedLiterals\":-1.0,\"europeanaProxy/dc:source/languages\":0.0,\"europeanaProxy/dc:source/literalsPerLanguage\":0.0,\"providerProxy/dc:rights/taggedLiterals\":2.0,\"providerProxy/dc:rights/languages\":2.0,\"providerProxy/dc:rights/literalsPerLanguage\":1.0,\"europeanaProxy/dc:rights/taggedLiterals\":-1.0,\"europeanaProxy/dc:rights/languages\":0.0,\"europeanaProxy/dc:rights/literalsPerLanguage\":0.0,\"providerProxy/dc:relation/taggedLiterals\":-1.0,\"providerProxy/dc:relation/languages\":0.0,\"providerProxy/dc:relation/literalsPerLanguage\":0.0,\"europeanaProxy/dc:relation/taggedLiterals\":-1.0,\"europeanaProxy/dc:relation/languages\":0.0,\"europeanaProxy/dc:relation/literalsPerLanguage\":0.0,\"providerProxy/edm:year/taggedLiterals\":-1.0,\"providerProxy/edm:year/languages\":0.0,\"providerProxy/edm:year/literalsPerLanguage\":0.0,\"europeanaProxy/edm:year/taggedLiterals\":-1.0,\"europeanaProxy/edm:year/languages\":0.0,\"europeanaProxy/edm:year/literalsPerLanguage\":0.0,\"providerProxy/edm:userTag/taggedLiterals\":-1.0,\"providerProxy/edm:userTag/languages\":0.0,\"providerProxy/edm:userTag/literalsPerLanguage\":0.0,\"europeanaProxy/edm:userTag/taggedLiterals\":-1.0,\"europeanaProxy/edm:userTag/languages\":0.0,\"europeanaProxy/edm:userTag/literalsPerLanguage\":0.0,\"providerProxy/dcterms:conformsTo/taggedLiterals\":-1.0,\"providerProxy/dcterms:conformsTo/languages\":0.0,\"providerProxy/dcterms:conformsTo/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:conformsTo/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:conformsTo/languages\":0.0,\"europeanaProxy/dcterms:conformsTo/literalsPerLanguage\":0.0,\"providerProxy/dcterms:hasFormat/taggedLiterals\":-1.0,\"providerProxy/dcterms:hasFormat/languages\":0.0,\"providerProxy/dcterms:hasFormat/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:hasFormat/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:hasFormat/languages\":0.0,\"europeanaProxy/dcterms:hasFormat/literalsPerLanguage\":0.0,\"providerProxy/dcterms:hasVersion/taggedLiterals\":-1.0,\"providerProxy/dcterms:hasVersion/languages\":0.0,\"providerProxy/dcterms:hasVersion/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:hasVersion/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:hasVersion/languages\":0.0,\"europeanaProxy/dcterms:hasVersion/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isFormatOf/taggedLiterals\":-1.0,\"providerProxy/dcterms:isFormatOf/languages\":0.0,\"providerProxy/dcterms:isFormatOf/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isFormatOf/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isFormatOf/languages\":0.0,\"europeanaProxy/dcterms:isFormatOf/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isReferencedBy/taggedLiterals\":0.0,\"providerProxy/dcterms:isReferencedBy/languages\":0.0,\"providerProxy/dcterms:isReferencedBy/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isReferencedBy/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isReferencedBy/languages\":0.0,\"europeanaProxy/dcterms:isReferencedBy/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isReplacedBy/taggedLiterals\":-1.0,\"providerProxy/dcterms:isReplacedBy/languages\":0.0,\"providerProxy/dcterms:isReplacedBy/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isReplacedBy/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isReplacedBy/languages\":0.0,\"europeanaProxy/dcterms:isReplacedBy/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isRequiredBy/taggedLiterals\":-1.0,\"providerProxy/dcterms:isRequiredBy/languages\":0.0,\"providerProxy/dcterms:isRequiredBy/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isRequiredBy/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isRequiredBy/languages\":0.0,\"europeanaProxy/dcterms:isRequiredBy/literalsPerLanguage\":0.0,\"providerProxy/dcterms:isVersionOf/taggedLiterals\":-1.0,\"providerProxy/dcterms:isVersionOf/languages\":0.0,\"providerProxy/dcterms:isVersionOf/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:isVersionOf/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:isVersionOf/languages\":0.0,\"europeanaProxy/dcterms:isVersionOf/literalsPerLanguage\":0.0,\"providerProxy/dcterms:references/taggedLiterals\":-1.0,\"providerProxy/dcterms:references/languages\":0.0,\"providerProxy/dcterms:references/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:references/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:references/languages\":0.0,\"europeanaProxy/dcterms:references/literalsPerLanguage\":0.0,\"providerProxy/dcterms:replaces/taggedLiterals\":-1.0,\"providerProxy/dcterms:replaces/languages\":0.0,\"providerProxy/dcterms:replaces/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:replaces/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:replaces/languages\":0.0,\"europeanaProxy/dcterms:replaces/literalsPerLanguage\":0.0,\"providerProxy/dcterms:requires/taggedLiterals\":-1.0,\"providerProxy/dcterms:requires/languages\":0.0,\"providerProxy/dcterms:requires/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:requires/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:requires/languages\":0.0,\"europeanaProxy/dcterms:requires/literalsPerLanguage\":0.0,\"providerProxy/dcterms:tableOfContents/taggedLiterals\":-1.0,\"providerProxy/dcterms:tableOfContents/languages\":0.0,\"providerProxy/dcterms:tableOfContents/literalsPerLanguage\":0.0,\"europeanaProxy/dcterms:tableOfContents/taggedLiterals\":-1.0,\"europeanaProxy/dcterms:tableOfContents/languages\":0.0,\"europeanaProxy/dcterms:tableOfContents/literalsPerLanguage\":0.0,\"providerProxy/edm:currentLocation/taggedLiterals\":-1.0,\"providerProxy/edm:currentLocation/languages\":0.0,\"providerProxy/edm:currentLocation/literalsPerLanguage\":0.0,\"europeanaProxy/edm:currentLocation/taggedLiterals\":-1.0,\"europeanaProxy/edm:currentLocation/languages\":0.0,\"europeanaProxy/edm:currentLocation/literalsPerLanguage\":0.0,\"providerProxy/edm:hasMet/taggedLiterals\":-1.0,\"providerProxy/edm:hasMet/languages\":0.0,\"providerProxy/edm:hasMet/literalsPerLanguage\":0.0,\"europeanaProxy/edm:hasMet/taggedLiterals\":-1.0,\"europeanaProxy/edm:hasMet/languages\":0.0,\"europeanaProxy/edm:hasMet/literalsPerLanguage\":0.0,\"providerProxy/edm:hasType/taggedLiterals\":-1.0,\"providerProxy/edm:hasType/languages\":0.0,\"providerProxy/edm:hasType/literalsPerLanguage\":0.0,\"europeanaProxy/edm:hasType/taggedLiterals\":-1.0,\"europeanaProxy/edm:hasType/languages\":0.0,\"europeanaProxy/edm:hasType/literalsPerLanguage\":0.0,\"providerProxy/edm:incorporates/taggedLiterals\":-1.0,\"providerProxy/edm:incorporates/languages\":0.0,\"providerProxy/edm:incorporates/literalsPerLanguage\":0.0,\"europeanaProxy/edm:incorporates/taggedLiterals\":-1.0,\"europeanaProxy/edm:incorporates/languages\":0.0,\"europeanaProxy/edm:incorporates/literalsPerLanguage\":0.0,\"providerProxy/edm:isDerivativeOf/taggedLiterals\":-1.0,\"providerProxy/edm:isDerivativeOf/languages\":0.0,\"providerProxy/edm:isDerivativeOf/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isDerivativeOf/taggedLiterals\":-1.0,\"europeanaProxy/edm:isDerivativeOf/languages\":0.0,\"europeanaProxy/edm:isDerivativeOf/literalsPerLanguage\":0.0,\"providerProxy/edm:isRelatedTo/taggedLiterals\":-1.0,\"providerProxy/edm:isRelatedTo/languages\":0.0,\"providerProxy/edm:isRelatedTo/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isRelatedTo/taggedLiterals\":-1.0,\"europeanaProxy/edm:isRelatedTo/languages\":0.0,\"europeanaProxy/edm:isRelatedTo/literalsPerLanguage\":0.0,\"providerProxy/edm:isRepresentationOf/taggedLiterals\":-1.0,\"providerProxy/edm:isRepresentationOf/languages\":0.0,\"providerProxy/edm:isRepresentationOf/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isRepresentationOf/taggedLiterals\":-1.0,\"europeanaProxy/edm:isRepresentationOf/languages\":0.0,\"europeanaProxy/edm:isRepresentationOf/literalsPerLanguage\":0.0,\"providerProxy/edm:isSimilarTo/taggedLiterals\":-1.0,\"providerProxy/edm:isSimilarTo/languages\":0.0,\"providerProxy/edm:isSimilarTo/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isSimilarTo/taggedLiterals\":-1.0,\"europeanaProxy/edm:isSimilarTo/languages\":0.0,\"europeanaProxy/edm:isSimilarTo/literalsPerLanguage\":0.0,\"providerProxy/edm:isSuccessorOf/taggedLiterals\":-1.0,\"providerProxy/edm:isSuccessorOf/languages\":0.0,\"providerProxy/edm:isSuccessorOf/literalsPerLanguage\":0.0,\"europeanaProxy/edm:isSuccessorOf/taggedLiterals\":-1.0,\"europeanaProxy/edm:isSuccessorOf/languages\":0.0,\"europeanaProxy/edm:isSuccessorOf/literalsPerLanguage\":0.0,\"providerProxy/edm:realizes/taggedLiterals\":-1.0,\"providerProxy/edm:realizes/languages\":0.0,\"providerProxy/edm:realizes/literalsPerLanguage\":0.0,\"europeanaProxy/edm:realizes/taggedLiterals\":-1.0,\"europeanaProxy/edm:realizes/languages\":0.0,\"europeanaProxy/edm:realizes/literalsPerLanguage\":0.0,\"providerProxy/edm:wasPresentAt/taggedLiterals\":-1.0,\"providerProxy/edm:wasPresentAt/languages\":0.0,\"providerProxy/edm:wasPresentAt/literalsPerLanguage\":0.0,\"europeanaProxy/edm:wasPresentAt/taggedLiterals\":-1.0,\"europeanaProxy/edm:wasPresentAt/languages\":0.0,\"europeanaProxy/edm:wasPresentAt/literalsPerLanguage\":0.0,\"NumberOfLanguagesPerPropertyInProviderProxy\":2.142857,\"NumberOfLanguagesPerPropertyInEuropeanaProxy\":113.0,\"NumberOfLanguagesPerPropertyInObject\":16.0,\"TaggedLiteralsInProviderProxy\":20.0,\"TaggedLiteralsInEuropeanaProxy\":129.0,\"DistinctLanguageCountInProviderProxy\":6.0,\"DistinctLanguageCountInEuropeanaProxy\":113.0,\"TaggedLiteralsInObject\":149.0,\"DistinctLanguagesInObject\":113.0,\"TaggedLiteralsPerLanguageInProviderProxy\":3.333333,\"TaggedLiteralsPerLanguageInEuropeanaProxy\":1.141593,\"TaggedLiteralsPerLanguageInObject\":1.318584", csv);

    csv = calculator.getCsv(false, CompressionLevel.NORMAL);
    assertEquals("4.0,1.0,4.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,1.0,1.0,1.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,6.0,6.0,1.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,2.0,2.0,1.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,129.0,113.0,1.141593,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,4.0,2.0,2.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,1.0,1.0,1.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,2.0,2.0,1.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,2.142857,113.0,16.0,20.0,129.0,6.0,113.0,149.0,113.0,3.333333,1.141593,1.318584", csv);

    csv = calculator.getCsv(false, CompressionLevel.WITHOUT_TRAILING_ZEROS);
    assertEquals("4,1,4,-1,0,0,-1,0,0,-1,0,0,1,1,1,-1,0,0,0,0,0,-1,0,0,0,0,0,-1,0,0,-1,0,0,-1,0,0,6,6,1,-1,0,0,0,0,0,-1,0,0,0,0,0,-1,0,0,2,2,1,-1,0,0,-1,0,0,-1,0,0,0,0,0,129,113,1.141593,0,0,0,-1,0,0,-1,0,0,-1,0,0,0,0,0,-1,0,0,-1,0,0,-1,0,0,4,2,2,-1,0,0,-1,0,0,-1,0,0,1,1,1,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,0,0,-1,0,0,-1,0,0,-1,0,0,2,2,1,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,2.142857,113,16,20,129,6,113,149,113,3.333333,1.141593,1.318584", csv);
  }

  /**
   * https://europeana.atlassian.net/browse/MET-359?filter=myopenissues
   */
  @Test
  public void met359() throws IOException, URISyntaxException {
    EdmMultilingualitySaturationCalculator calculator = new EdmMultilingualitySaturationCalculator(new EdmOaiPmhJsonSchema());
    JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("issue-examples/met-359-tagged-litterals-count.json"));
    calculator.measure(cache);
    Map<String, Double> languages = calculator.getSaturationMap();

    assertEquals(4.000000, languages.get("providerProxy/dc:type/taggedLiterals"), 0.001);
    assertEquals(3.000000, languages.get("providerProxy/dc:type/languages"), 0.001);
    assertEquals(1.333333, languages.get("providerProxy/dc:type/literalsPerLanguage"), 0.001);

    assertEquals(3.000000, languages.get("NumberOfLanguagesPerPropertyInProviderProxy"), 0.001);
    assertEquals(4.000000, languages.get("TaggedLiteralsInProviderProxy"), 0.001);
    assertEquals(3.000000, languages.get("DistinctLanguageCountInProviderProxy"), 0.001);
    assertEquals(1.333333, languages.get("TaggedLiteralsPerLanguageInProviderProxy"), 0.001);
    assertEquals(0.000000, languages.get("NumberOfLanguagesPerPropertyInEuropeanaProxy"), 0.001);
    assertEquals(0.000000, languages.get("TaggedLiteralsInEuropeanaProxy"), 0.001);
    assertEquals(0.000000, languages.get("DistinctLanguageCountInEuropeanaProxy"), 0.001);
    assertEquals(0.000000, languages.get("TaggedLiteralsPerLanguageInEuropeanaProxy"), 0.001);
    assertEquals(3.000000, languages.get("NumberOfLanguagesPerPropertyInObject"), 0.001);
    assertEquals(4.000000, languages.get("TaggedLiteralsInObject"), 0.001);
    assertEquals(3.000000, languages.get("DistinctLanguagesInObject"), 0.001);
    assertEquals(1.333333, languages.get("TaggedLiteralsPerLanguageInObject"), 0.001);
  }

  @Test
  public void emptyConstructor() {
    EdmMultilingualitySaturationCalculator calculator =
        new EdmMultilingualitySaturationCalculator();
    assertNotNull(calculator);
    assertEquals(MultilingualityResultType.NORMAL, calculator.getResultType());
  }

  @Test
  public void testResultMap() throws IOException, URISyntaxException {
    EdmMultilingualitySaturationCalculator calculator =
        new EdmMultilingualitySaturationCalculator(new EdmOaiPmhJsonSchema());
    JsonPathCache cache = new JsonPathCache(FileUtils.readFirstLine("issue-examples/met-359-tagged-litterals-count.json"));
    calculator.measure(cache);
    Map<String, ?> result = calculator.getResultMap();
    assertEquals(312, result.size());
    assertEquals(0.0, result.get("providerProxy/dc:title/taggedLiterals"));
    assertEquals(0.0, result.get("providerProxy/dc:title/languages"));
    assertEquals(0.0, result.get("providerProxy/dc:title/literalsPerLanguage"));
    assertEquals(-1.0, result.get("europeanaProxy/dc:title/taggedLiterals"));
    assertEquals(0.0, result.get("europeanaProxy/dc:title/languages"));
    assertEquals(0.0, result.get("europeanaProxy/dc:title/literalsPerLanguage"));
  }
}
